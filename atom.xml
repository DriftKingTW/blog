<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DriftKingTW&#39;s Blog</title>
  
  <subtitle>printf(&quot;%s&quot;, &quot;Stay Curious, Stay Creative&quot;);</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.driftkingtw.me/"/>
  <updated>2019-11-12T05:10:59.922Z</updated>
  <id>https://blog.driftkingtw.me/</id>
  
  <author>
    <name>DriftKingTW</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用 Raspberry Pi 搭建 TimeCapsule（仮）- 硬體篇</title>
    <link href="https://blog.driftkingtw.me/archives/ca77c25e.html"/>
    <id>https://blog.driftkingtw.me/archives/ca77c25e.html</id>
    <published>2019-11-12T13:25:00.000Z</published>
    <updated>2019-11-12T05:10:59.922Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573533117/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191112_122944.jpg" alt=""></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前陣子看到國外有人把舊的 Mac Mini 的機箱拿來改造，弄成 Router 或 HTPC 等，不得不說 Mac 的全鋁一體機箱真的挺好看，雖然設計已近十年未改，但放在 2019 年的桌面上仍不顯老氣 <del>反正中間那個商標放哪都能裝逼</del>。</p><p>看著別人改的成品很是心動<del>手癢</del>，於是上網搜了下，發現有不少人在賣二手的機殼，在國外看到了個價格及品相都非常好的機殼(約NT600)就買了下來(Mid 2010/A1347)。時間上正好 Raspberry Pi 更新了第四代，I/O效能上也終於符合了基本 NAS 的需求，於是想到可以把 Pi 裝在 Mac Mini 的機殼中，來做個簡易的偽 TimeCapsule + NAS，來當做無線 Time Machine 備份用及網路存儲設備。</p><p>本篇就來記錄一些想法跟製作過程，以及碰到的問題。 關於 Pi 4 的軟體設定部分，為了版面簡潔我把它寫在另外的兩篇，這裡就純記錄硬體部分：<a href="https://blog.driftkingtw.me/archives/613e9fa3.html">利用 Raspberry Pi 搭建 TimeCapsule（仮）- 軟體篇</a>、<a href="https://blog.driftkingtw.me/archives/c138150d.html">利用 Raspberry Pi 搭建 NAS</a></p><h1 id="想法-amp-amp-設計"><a href="#想法-amp-amp-設計" class="headerlink" title="想法 &amp;&amp; 設計"></a>想法 &amp;&amp; 設計</h1><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573474005/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20190924_200321.jpg" alt="收到的機殼，品相良好，只有一個非常不顯眼的小喀傷"></p><p>首先依照 Mac Mini 機殼的容量，大約能放下 17*17cm 的主板（ 網路上大部分是拿 Thin Mini-ITX來裝 ），高不能超過 2.5cm ，約兩個 USB Type-A 堆疊的高度，那當然我用的是更小的 Pi，只要另外考慮硬碟的擺放及走線即可。</p><p>以下是一開始的設計圖（ 後來 Hub 的設計被廢掉了，詳細問題有記錄在下方遇到的問題裡 ）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573474811/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_D5FEECE2800F-1.jpg" alt=""></p><p>接著得想個辦法固定這堆玩意，最省心的方法大概就是直接做個絕緣塞進去，但是這樣實在太醜了 <del>用 Mac 機殼不就是要好看</del>，而且不知道時間久了會發生什麼問題，Server 是打算 7x24 不關機的，考量到散熱及穩定性 <del>還有不想要裡面太醜的強迫症</del>，最後還是乖乖畫個 3D 設計稿然後找代印來做固定支撐的部分。</p><p>然而這才是麻煩的開始，由於上網翻不到 Mac Mini Case 的機械圖，也沒有人分享螺絲孔距等數據，只好自力救濟徒手量測。單純用直尺量測實在很麻煩，空間不大遊標卡尺也不方便，只好先量兩孔間直角三角形的兩邊大概長度，再對照直線距離用畢式定理去推算量出來的距離對不對（感覺挺蠢的但是也想不到其他方法），才勉強量出了孔距。</p><p>幸好最後印出來是吻合的沒問題（孔徑我開2mm，距離是以孔心為基準），這邊放個測量結果，有需要的人可以少走歪路（直接看垂直的距離就好，直線距離可能稍微跑掉）。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573476073/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_B9730CE991B7-1.jpg" alt=""></p><p>再來是比較棘手的硬碟支架部分，原本看上蘋果原廠自己的就支援了雙硬碟（Server版本、無光碟機版之類，記得到 2014 機箱都是 A1347），我買的機殼並沒有附送，硬碟架比較難找，後來看看只有 eBay 上有價格可以也有貨的。</p><p>不過原廠的支架在不破壞結構的前提下可能要另外製作特殊的 Sata 7+15 Pin 延長線才有辦法塞雙硬碟，而且不幸的是我沒仔細看規格，以致於買回來的支架其實是有光碟機版本（那賣家圖片放成雙硬碟位的…我就傻傻相信了 ｡ﾟヽ(ﾟ´Д`)ﾉﾟ｡ ）最後只能認命自己列印硬碟架了，原廠硬碟架再另外售出給剛好需要的人。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573476669/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191102_152723.jpg" alt="買錯的支架"></p><p>原本硬碟支架的設計圖，後來發現樹脂這個厚度不太穩，裡面的卡楯點又沒量準所以把旁邊的固定臂鋸掉了，只留下中間支撐硬碟的部分：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573488724/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/HDDMount.png" alt=""></p><p>最麻煩的底部固定螺絲部分，我參考了 <a href="https://www.ifixit.com/Teardown/Mac+Mini+Mid+2010+Teardown/3094" target="_blank" rel="noopener">ifixit</a> 的各種拆解，都只提到底座的螺絲是 “ 7.9mm Torx 6 Screw “，完全找不到有人提到直徑是多少… 在完全缺乏資訊的狀況下，我找了幾個螺絲試鎖，有一個能夠鎖進去鎖緊，但是太短了。</p><p>由於沒有遊標卡尺所以只好買了 M1.4、M1.5、M1.6 的回來測試，薑薑！全錯，最後只能認命買了遊標卡尺回來測量。正確尺寸應該是 M1.7，因為是鎖金屬殼所以用自攻螺絲，更詳細的我就不太確定了（手邊工具無法量測），至少 M1.7 自攻是鎖的進去而且穩定，一樣有需要的人可以再少走一條歪路了 ｡ﾟヽ(ﾟ´Д`)ﾉﾟ｡</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573487949/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191111_211918.jpg" alt=""></p><p>GPIO 旁邊設計了擋板以免其他線材觸碰到：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573488945/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/PiMountFront.png" alt=""></p><p>背面加上了一些墊高用的腳腳：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573488967/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/PiMountBack.png" alt=""></p><p>再來要考慮的是擋板（外框這裡是購買別人設計好的現成可以裝 Mini-ITX 擋板的塑膠框），稍微在腦中模擬了一下走線，考慮美觀的情況希望 USB-C 電源跟網路口要在一起，所以開關放左邊（以底蓋朝上的方向為基準），電源跟網路放右邊，靠樹莓派那測設計了一些出風口增加散熱能力，中間也開了一段方便進風。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573489134/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IOPanel.png" alt=""></p><p>中間兩個突起的三角塊原本是打算跟底板用機械螺絲固定，不過尺寸沒量好，後來直接靠網路口鎖螺絲上去固定住IO擋板，Pi 固定底座原本要固定擋板的部分就鋸掉。</p><p>最後按照官方的 Pi 4 機械繪圖來做風扇支架：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573489312/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/FanMount.png" alt=""></p><p> 這次用到的 3D 列印的檔案在最下面有連結，歡迎自行免費取用，但請不要拿去用於商業用途。</p><p> 接下來就是把東西準備好開始裝機跟佈線囉 (ﾟ∀ﾟ)</p><h1 id="製作過程"><a href="#製作過程" class="headerlink" title="製作過程"></a>製作過程</h1><p>這是拿到 3D 列印成品的照片，接著要把硬碟架兩側的腳跟後面量錯的定位口弄掉，然後打磨後上漆：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573489504/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191105_133114.jpg" alt=""></p><p>IO擋板的部分我也另外作了處理，首先是 Type-C 我測量成公頭的尺寸，所以用銼刀擴孔後母座才放的進去，以及電源開關的部分尺寸剛好，稍微擴孔後才能順暢的按壓。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573489722/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191105_144436.jpg" alt=""></p><p>上圖是處理過的硬碟支架，有個三角缺口是鋸的時候可能力道不平衡 (((ﾟДﾟ;)))，不過放在裡面不太影響，把尖銳的部分打磨即可。</p><p>噴漆灌上漆（可以看到上面的橫條可能太細，樹脂強度不夠，不過主結構沒問題）：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573489873/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191106_135017.jpg" alt=""></p><p>Pi 支架的部分，設計的時候忘記了 Micro SD 會突出一些，所以只好擴一些空間。不過弄的時候樹脂不夠強不小心弄斷了，還好螺絲兩邊都會鎖到，所以補強一下沒問題：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573489870/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191106_131709.jpg" alt=""></p><p>原本要使用 Hub 來管理硬碟，不過遇到了些問題，索性把 USB to SATA 的轉接線拆了，把供電的部分另外拉出來（原 USB 線與 PCB 的 Vbus 供電要隔離）：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490103/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191107_115612.jpg" alt=""></p><p>上蓋就不蓋回去了，用抗靜電耐熱膠帶貼著，可以降低厚度</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490109/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191107_151151.jpg" alt=""></p><p>每個步驟都要先用電錶量過確認，然後上機測試：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490260/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191107_121531.jpg" alt=""></p><p>裝上硬碟架，測試高度厚度，然後假組確認尺寸跟線材長度有沒有問題：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490360/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191107_152116.jpg" alt=""></p><p>（有在硬碟上下加上 1mm 的抗靜電棉，減少震動跟防止靜電，硬碟上在仿原廠貼導電織布與機殼接觸）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490432/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191107_155424.jpg" alt=""></p><p>接著把兩個硬碟的電源線接上 Type-C 座，然後拉另一條給 Pi 供電，這邊使用了 5A 的線材所以有點粗，費了一番功夫才焊好（ Type-C 還真不適合手焊粗線材，後來我還有另外從兩個 CC Pin 拉出杜邦母頭，可以加上兩個 5k1 電阻讓 Pi4 支援 E-mark 線材</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490576/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191107_214430.jpg" alt=""></p><p>帶燈開關的部分，跟機殼前方的 LED 並聯，並各串上 1k 電阻（亮度我不希望太亮），關於添加燈以及風扇控制等方法請參考另一篇文章:<a href="https://blog.driftkingtw.me/archives/59bd89a7.html">替 Raspberry Pi 添加開關、外接電源燈、狀態燈，以及風扇控制</a></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490776/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191108_215111.jpg" alt=""></p><p>裸機測試，確定沒問題再裝機：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490872/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191108_223930.jpg" alt=""></p><p>面板我沒想到很好的固定方法，除了網路口用螺絲外，電源跟開關都是用熱溶膠 + 防靜電膠帶弄上的，這部分設計上還有改進空間。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490996/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191111_221457.jpg" alt=""></p><p>最後完整裝機，鎖上螺絲！</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573532268/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191112_120240.jpg" alt=""></p><p>關上背蓋（有點清潔時候的水漬還沒乾XD）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573532315/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191112_120504.jpg" alt=""></p><p>完成！來幾張照片ヽ(✿ﾟ▽ﾟ)ノ</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573533117/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191112_122944.jpg" alt=""></p><p>屁屁</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573533113/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191112_121231.jpg" alt=""></p><p>Bay ~</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573533114/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191112_122934.jpg" alt=""></p><p><del>好吧外觀其實看起來就是個普通 Mac Mini</del></p><p>PS 風扇啟動時（無散熱片）溫度可以維持在不超過 50°C （室溫約 26~28°C），散熱效果還算不錯。</p><h1 id="遇到的問題-amp-amp-解決方法"><a href="#遇到的問題-amp-amp-解決方法" class="headerlink" title="遇到的問題 &amp;&amp; 解決方法"></a>遇到的問題 &amp;&amp; 解決方法</h1><h3 id="機箱固定螺絲問題"><a href="#機箱固定螺絲問題" class="headerlink" title="機箱固定螺絲問題"></a>機箱固定螺絲問題</h3><p>如上述，我用的底座機箱固定用螺絲規格為 M1.7 x 6 自攻螺絲 + M2 華司。</p><h3 id="USB-外部供電-Hub-問題"><a href="#USB-外部供電-Hub-問題" class="headerlink" title="USB 外部供電 Hub 問題"></a>USB 外部供電 Hub 問題</h3><p>Pi 4 除了 USB-C 設計會 <a href="https://blog.driftkingtw.me/archives/b2345c23.html">使 E-mark 線材無法使用之外</a>，還有個問題是：使用帶獨立電源的 USB 3 Hub 在接上 Pi 的 USB 3 口上可能會導致開機或重啟時，無法進入 boot 程序。官方論壇也有人提出這個問題 <a href="https://www.raspberrypi.org/forums/viewtopic.php?t=244900" target="_blank" rel="noopener">Pi 4 fails to boot when active USB switch attached</a> ，雖然可以啟動時拔起 Hub 再插回去正常運作，但是麻煩而且裝箱後不可能重啟又打開插拔。</p><p>大致推測下來，可能是 Pi 4 使用 USB 3 時，有獨立供電的 Hub 會反向供電（Power feedback）給 Pi，於是可以考慮將 Hub 與 Pi 之間的 Vbus 隔離，但我的 Orico Hub 仍然無法正常啟動（有些人回報切斷 Vbus 後就正常運作），論壇裡也有人和我一樣切 Vbus 仍然失敗的，韌體等更新也測試過了無法。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573528606/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191106_221851.jpg" alt=""></p><p>最後只好改成直接把 SATA to USB 轉接線的電源拉出來做使用，目前解決了無法啟動的問題。目前只有少數 Hub 有辦法正常運作（通常比較貴，可能 USB 線那有做二極體防止反向供電？）選購時要注意一下。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490109/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191107_151151.jpg" alt=""></p><h3 id="2-個-HDD-直接用樹莓派官方電供供電？"><a href="#2-個-HDD-直接用樹莓派官方電供供電？" class="headerlink" title="2 個 HDD 直接用樹莓派官方電供供電？"></a>2 個 HDD 直接用樹莓派官方電供供電？</h3><p>從文中可以看出其實我 2 HDD 的電源也是直接接上與 Pi 同一個電源的，那為何要多此一舉把電源獨立拉出來（總電流還是只有 3A）？主要是因為兩個 2.5” HDD + Pi 本身的電流，3A 是足夠驅動的，不過 Pi 的 USB downstream 限制在 1.2A （可以理解為四個 USB 口只能消耗最高 1.2A ），雖然硬碟上標示 0.55A ，但還要考慮到轉接線的耗電。實際測試後單顆 2.5” HDD 啟動電流約為 0.7~0.8A 左右，Pi 本身耗電約 0.6~1.2A 之間。</p><p>最後的解決方法就是必須使用外接的 Hub 確保兩個 HDD 啟動電流足夠，繞過 USB downstream 1.2A 的限制（但是可以接同一個 3A 電源沒問題），或是如上把轉接線那電源供應獨立接出來。至於直接接上兩個 HDD 也是有實際實驗過了，真的沒辦法，其中一個硬碟會無法掛載 ╮(╯_╰)╭</p><p>以上大概就是這次踩到比較大的坑，以及解決方法，也想把 Pi 裝在 Mac Mini 機箱的朋友可以參考。</p><h1 id="材料清單"><a href="#材料清單" class="headerlink" title="材料清單"></a>材料清單</h1><ul><li>1 x Pi 4 4GB</li><li>1 x 8G MicroSD Card for boot</li><li>1 x A1347 Apple Mac mini Case (Mid 2010)</li><li>2 x 2.5” HDD</li><li>2 x SATA to USB3 Cable</li><li>STL 3D Printed Mount / IO Panel</li><li>1 x 30mm Fan</li><li>1 x Momentary Switch w/ LED &amp; Cap</li><li>1 x 3mm Front Panel LED</li><li>2 x Current-limiting Resistor (330Ω ~ 1kΩ)</li><li>1 x Gigabit Ethernet Network Extension Cable</li><li>1 x USB Type-C Male Connector w/ PCB</li><li>1 x USB Type-C Female Connector w/ PCB</li><li>Some USB Cable (Current support 3A at least)</li><li>3 x M3 Screw &amp;&amp; M3 Hex Nut for Fan Mounting</li><li>4 x M3 Screw for HDD Mounting</li><li>2 x M3 Screw for Ethernet Port Mounting</li><li>3 x M1.7 Tapping Screw for Case Mounting w/ M2 Washer</li><li>Some DuPont Line</li></ul><h1 id="本次所使用的-3D-檔案（STL）"><a href="#本次所使用的-3D-檔案（STL）" class="headerlink" title="本次所使用的 3D 檔案（STL）"></a>本次所使用的 3D 檔案（STL）</h1><p><a href="https://drive.google.com/open?id=1iUhxCqxGfxcIEYv6l-oQD4FoOvjMj0Gv" target="_blank" rel="noopener">PiMacMiniCaseSTLFiles</a></p><p>注意，目前還沒優化檔案，所以硬碟支架及 Pi 底座有瑕疵的部分需要的話可能還要自行調整或印出來後自行切割多餘的部分，孔位是沒問題的。</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://www.ifixit.com/Teardown/Mac+Mini+Mid+2010+Teardown/3094" target="_blank" rel="noopener">Mac Mini Mid 2010 Teardown</a></p><p><a href="https://pinout.xyz/" target="_blank" rel="noopener">Raspberry Pi GPIO Pinout</a></p><p><a href="https://www.raspberrypi.org/products/raspberry-pi-4-model-b/specifications/" target="_blank" rel="noopener">Raspberry Pi 4 Tech Specs</a></p><p><a href="https://www.raspberrypi.org/documentation/hardware/raspberrypi/power/README.md" target="_blank" rel="noopener">Power Supply</a></p><p><a href="https://www.raspberrypi.org/forums/viewtopic.php?t=244900" target="_blank" rel="noopener">Pi 4 fails to boot when active USB switch attached</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573533117/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%9
      
    
    </summary>
    
    
      <category term="DIY" scheme="https://blog.driftkingtw.me/tags/DIY/"/>
    
      <category term="MacOS" scheme="https://blog.driftkingtw.me/tags/MacOS/"/>
    
      <category term="TimeCapsule" scheme="https://blog.driftkingtw.me/tags/TimeCapsule/"/>
    
      <category term="TimeMachine" scheme="https://blog.driftkingtw.me/tags/TimeMachine/"/>
    
      <category term="NAS" scheme="https://blog.driftkingtw.me/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>替 Raspberry Pi 添加開關、外接電源燈、狀態燈，以及風扇控制</title>
    <link href="https://blog.driftkingtw.me/archives/59bd89a7.html"/>
    <id>https://blog.driftkingtw.me/archives/59bd89a7.html</id>
    <published>2019-11-11T13:25:00.000Z</published>
    <updated>2019-11-12T05:12:55.802Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490872/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E7%A1%AC%E9%AB%94%E7%AF%87/IMG_20191108_223930.jpg" alt=""></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>用 Headless 方式玩樹莓派的朋友肯定都遇過一個問題，就是每次關機都要登入 ssh 才能正常關機，懶一點的直接拔電源，就算沒問題也很麻煩（ 懶到過去延長線切電源都不肯 （欸），所以不如加個開關吧，不僅省時省力還能用正常的 shutdown 程序關機，一石二鳥豈不美哉 (:3[__]4</p><p>還有很多時候因為 Pi 裝著殼，要得知是否開機、狀態燈有沒有在閃爍並不是那麼方便，本篇也一並記錄了裝上外接電源燈、狀態燈的步驟！</p><p>最後另外在補上風扇的控制方式（ Pi 4 工作時很熱情，大部分人可能會選擇上風扇XD ）但是溫度也不是隨時都那麼高，有了風扇控制可以依照溫度所需啟動，不但降低噪音也能增加風扇使用壽命，順便省一點點電，拯救北極熊（？）（風扇控制目前還在準備中，測試完成後會在更新電路圖）</p><h1 id="硬體設定"><a href="#硬體設定" class="headerlink" title="硬體設定"></a>硬體設定</h1><p>開關 &amp;&amp; 電源燈線路圖</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573278749/blog/2019/11/%E6%9B%BF%20Raspberry%20Pi%20%E6%B7%BB%E5%8A%A0%E9%96%8B%E9%97%9C%E3%80%81%E5%A4%96%E6%8E%A5%E9%9B%BB%E6%BA%90%E7%87%88%E3%80%81%E7%8B%80%E6%85%8B%E7%87%88%EF%BC%8C%E4%BB%A5%E5%8F%8A%E9%A2%A8%E6%89%87%E6%8E%A7%E5%88%B6/IMG_DC3D9F54D1D5-1.jpg" alt=""></p><p>SD讀取燈 &amp;&amp; 風扇（控制電路待補）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573278969/blog/2019/11/%E6%9B%BF%20Raspberry%20Pi%20%E6%B7%BB%E5%8A%A0%E9%96%8B%E9%97%9C%E3%80%81%E5%A4%96%E6%8E%A5%E9%9B%BB%E6%BA%90%E7%87%88%E3%80%81%E7%8B%80%E6%85%8B%E7%87%88%EF%BC%8C%E4%BB%A5%E5%8F%8A%E9%A2%A8%E6%89%87%E6%8E%A7%E5%88%B6/IMG_4CCC4C50487E-1.jpg" alt=""></p><h1 id="軟體設定"><a href="#軟體設定" class="headerlink" title="軟體設定"></a>軟體設定</h1><h3 id="開關（正常軟體關機程序）"><a href="#開關（正常軟體關機程序）" class="headerlink" title="開關（正常軟體關機程序）"></a>開關（正常軟體關機程序）</h3><p>這邊開關的部分參考了 howchoo 上的一篇文章：<a href="https://howchoo.com/g/mwnlytk3zmm/how-to-add-a-power-button-to-your-raspberry-pi" target="_blank" rel="noopener">How to Add a Power Button to Your Raspberry Pi</a>，以下是直接使用作者所寫好的 Script 安裝，詳細背後的 Code 以及原理可以點進連結裡查看（英文）。</p><p>安裝 Git</p><p><code>sudo apt-get install git</code></p><p>接著 clone 作者所寫好的 Script <a href="https://github.com/Howchoo/pi-power-button" target="_blank" rel="noopener">Howchoo/pi-power-button</a></p><p><code>git clone https://github.com/Howchoo/pi-power-button.git</code></p><p>安裝即可</p><p><code>./pi-power-button/script/install</code></p><h3 id="電源燈"><a href="#電源燈" class="headerlink" title="電源燈"></a>電源燈</h3><p>進入樹莓派設定界面</p><p><code>sudo raspi-config</code></p><p>選擇 <code>Interface Options</code> 開啟 <code>Serial</code> 來允許串列讀取，這樣我們就可以利用 GPIO 上的 TXD 來讓 LED 顯示目前是否為開機狀態（直接接 5V 的話只要插上電就會亮，沒辦法判斷樹莓派是否在開機狀態）</p><p>接著重啟樹莓派即可看到電源燈正常運作了</p><p><code>sudo reboot</code></p><h3 id="SD-卡讀取燈"><a href="#SD-卡讀取燈" class="headerlink" title="SD 卡讀取燈"></a>SD 卡讀取燈</h3><p>將 SD 卡插入電腦中，打開至根目錄找到一個叫做 <code>config.txt</code> 的設定檔，在底部添加以下設定。<br>最後的 GPIO 選擇自己要用的腳位即可（<a href="https://pinout.xyz/pinout/" target="_blank" rel="noopener">腳位參考</a>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Use external LED as ACT LED</span><br><span class="line">dtoverlay=pi3-act-led,gpio=19</span><br></pre></td></tr></table></figure><h3 id="風扇控制"><a href="#風扇控制" class="headerlink" title="風扇控制"></a>風扇控制</h3><p><strong>待補</strong></p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://www.youtube.com/watch?v=_REhMZJ8GJY" target="_blank" rel="noopener">Add An External Sd Activity Light Raspberry Pi 3 Retropie Or Raspbian</a></p><p><a href="https://howchoo.com/g/mwnlytk3zmm/how-to-add-a-power-button-to-your-raspberry-pi" target="_blank" rel="noopener">How to Add a Power Button to Your Raspberry Pi</a></p><p><a href="https://www.youtube.com/watch?v=P5o0PpfzuW8" target="_blank" rel="noopener">#131 Pimp my Raspberry: Automatic fan, automatic shutdown, automatic Python</a></p><p><a href="https://howchoo.com/g/ytzjyzy4m2e/build-a-simple-raspberry-pi-led-power-status-indicator" target="_blank" rel="noopener">Build a Simple Raspberry Pi LED Power/Status Indicator</a></p><p><a href="http://www.irf.com/product-info/datasheets/data/irl530n.pdf" target="_blank" rel="noopener">IRL530N Datasheet</a></p><p><a href="https://www.youtube.com/watch?v=P5o0PpfzuW8" target="_blank" rel="noopener">#131 Pimp my Raspberry: Automatic fan, automatic shutdown, automatic Python</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1573490872/blog/2019/11/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%9
      
    
    </summary>
    
    
      <category term="DIY" scheme="https://blog.driftkingtw.me/tags/DIY/"/>
    
      <category term="RaspberryPi" scheme="https://blog.driftkingtw.me/tags/RaspberryPi/"/>
    
  </entry>
  
  <entry>
    <title>理解 Raspberry 4 Type C 設計問題</title>
    <link href="https://blog.driftkingtw.me/archives/b2345c23.html"/>
    <id>https://blog.driftkingtw.me/archives/b2345c23.html</id>
    <published>2019-10-26T13:25:00.000Z</published>
    <updated>2019-10-26T07:44:49.694Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今年(2019)樹莓派基金會發表了久違的硬體更新，升級到了4代，相信有在關注的朋友們都知道，本次供電設計終於換成了 Type-C <del>(終於有種進化成現代化單片機的感覺)</del><br>不過也因為電源電路設計的一些問題導致了有 E-Mark 晶片的 USB-C 線材無法為樹莓派供電（例如 Apple 的 Macbook USB-C 充電線、Google Pixel 3 附帶的 USB-C 線材等），反倒是便宜的一般線材能夠正常運作XD <del>證明樹莓派是給窮人家的玩具</del> 。</p><p>出於好奇我搜尋研究了一下原因，並且想了解決方法記錄在這篇文章中，本人不是這方面的專業人士，若有錯誤歡迎指出討論。</p><h1 id="Type-C-供電定義及設計"><a href="#Type-C-供電定義及設計" class="headerlink" title="Type-C 供電定義及設計"></a>Type-C 供電定義及設計</h1><p>下圖是 Type-C 的腳位圖，這次設計出現問題是位於兩個 CC 腳位的部分（ CC1 &amp; CC2 ），<br>CC (Configuration Channel) 腳位是 Type-C 重要的設定通道，可以利用不同的 CC 電阻設定判斷裝置資訊、決定模式，以及藉此支援正反插。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1572070453/blog/2019/10/%E7%90%86%E8%A7%A3%20Raspberry%204%20Type%20C%20%E8%A8%AD%E8%A8%88%E5%95%8F%E9%A1%8C/Screen_Shot_2019-10-26_at_2.13.59_PM.png" alt=""></p><p>根據 <a href="https://www.usb.org/document-library/usb-type-cr-cable-and-connector-specification-revision-20-august-2019" target="_blank" rel="noopener">Type-C 定義文件</a>，藉由 CC 腳位的設定我們可以有以下不同的狀態：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1572070948/blog/2019/10/%E7%90%86%E8%A7%A3%20Raspberry%204%20Type%20C%20%E8%A8%AD%E8%A8%88%E5%95%8F%E9%A1%8C/Screen_Shot_2019-10-26_at_2.22.22_PM.png" alt=""></p><p>樹莓派所需要的是從供電端拉 5V/3A 的電力，為接受電力的設備（ Sink Device ）（這裡我不知道怎麽翻譯比較適當XD），由圖表可知我們應該要將 CC 設定在第二或第三種狀態才能正常為樹莓派提供正確的電壓。</p><p>瞭解接腳定義後來看供電端與設備端連線時的簡化電路圖：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1572071612/blog/2019/10/%E7%90%86%E8%A7%A3%20Raspberry%204%20Type%20C%20%E8%A8%AD%E8%A8%88%E5%95%8F%E9%A1%8C/Screen_Shot_2019-10-26_at_2.33.18_PM.png" alt=""></p><p>上圖為一般 Type-C 線材連接時的樣子，可以看到只有一條 CC 線接通兩邊，並且在右側設備端有接一個下拉電阻（ Pull-down Resistor：簡稱Rd ），供電端會藉由偵測到的阻值判斷所需要的 USB-C 狀態。</p><p>接著看看連上 E-mark 線材時的電路圖：（ E-mark 是在線裡的 IC ，可以提供 PD 通訊以及宣告這條線的資訊 ）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1572072226/blog/2019/10/%E7%90%86%E8%A7%A3%20Raspberry%204%20Type%20C%20%E8%A8%AD%E8%A8%88%E5%95%8F%E9%A1%8C/Screen_Shot_2019-10-26_at_2.43.37_PM.png" alt=""></p><p>由上圖可以看到，線材內會有一個 Ra 下拉電阻，可以告訴供電端（DFP：Downstream-Facing Port ）在 CC2 上對 E-mark IC 提供 Vconn 電力。</p><p>簡單理解了 Type-C 的供電定義後，接著看樹莓派4的電源電路設計。</p><h1 id="Raspberry-Pi-4-電源電路"><a href="#Raspberry-Pi-4-電源電路" class="headerlink" title="Raspberry Pi 4 電源電路"></a>Raspberry Pi 4 電源電路</h1><p>樹莓派基金會已經釋出了除了 SoC 以外的<a href="https://www.raspberrypi.org/documentation/hardware/raspberrypi/schematics/rpi_SCH_4b_4p0_reduced.pdf" target="_blank" rel="noopener">電路設計圖</a>，首先來看看電源電路的部分：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1572071448/blog/2019/10/%E7%90%86%E8%A7%A3%20Raspberry%204%20Type%20C%20%E8%A8%AD%E8%A8%88%E5%95%8F%E9%A1%8C/Screen_Shot_2019-10-26_at_2.30.35_PM.png" alt=""></p><p>左側是 Type-C 的母座，接著把注意力放到 CC1 以及 CC2 兩隻腳位上，這裡的設計是把 CC1 及 CC2 短路後共同接一個 5k1Ω Rd 下拉電阻，在普通的線材下這個設計是完全沒問題的，PD 供電端因為線材只有一條 CC 相連，只會偵測到Rd電阻，另一條 CC 空接，按照前面的圖表可以看到樹莓派狀態是 Sink attached ，可以對其供電 5V/3A。</p><p>但是這設計接到 E-mark 線材的時候就不一樣了，由於 E-mark 線材裡面的 CC2 會有 Ra 下拉電阻，連接後 Ra(1kΩ) 會跟電源電路裡的 Rd(5k1Ω) 電阻並聯，分壓後變成 836Ω 等效電阻，供電端偵測到這阻值會把它當成 Ra（ 836Ω 屬於 Ra 的許可誤差範圍），參照上面 Type-C 狀態表可以發現，此時樹莓派被當成了音訊裝置（ Audio Adapter Accessory ，例如 USB-C 轉 3.5mm 音訊轉接器等裝置），於是供電端就不會對樹莓派輸出任何電力了！這就是為什麼普通線材可以正常使用，反而是較高級(?)的 E-mark 線材無法使用的原因。</p><p>順帶補充一下必須使用 E-mark 晶片的時機（ 只要滿足其中一項就需要 E-mark ）：</p><ol><li>VBUS 需要提供 3A 以上的電流</li><li>USB 3.1 Gen1 或 Gen2 協定</li><li>需要用到 Alternate Modes 時</li></ol><h1 id="修正方法"><a href="#修正方法" class="headerlink" title="修正方法"></a>修正方法</h1><p>理論上來說，應該要將樹莓派電源電路中的 CC1 以及 CC2 隔開後各接一個 5k1Ω 的 Rd 即可正常使用 E-mark 充電線了，但是由於那部分的電路設計在 Type-C 連接器下方，所以不容易施工，需要找另外的解決方案：</p><ol><li><p>翹起 Type-C 連接器上的 CC1 腳讓他另外接一個 Rd 電阻到 GND 請參考此<a href="https://www.raspberrypi.org/forums/viewtopic.php?t=249975" target="_blank" rel="noopener">樹莓派論壇文章</a></p></li><li><p>另外做一條 Type-C 延長線，自行在中間切斷 CC1 及 CC2 連接並自行接 Rd電阻到 GND</p></li></ol><p>實際操作待補上（買的材料還沒來，無法測試，等測試後在詳細記錄QQ）</p><p>PS. 有風聲說之後會有小改 PCB 解決此問題，不過那麼久了都沒消息，不知道何時才會改善</p><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>因為設計上的瑕疵，所以無法使用 E-mark 線材來為樹莓派供電，網路上有些說 PD 充電器無法使用其實算是不夠嚴謹的說法，因為若搭上無 E-mark 的線材還是能夠正常使用的（ 因為只有一條 CC 連通，且線材內沒有 Ra 並聯電源電路裡的 Rd，不會造成識別錯誤 ），省了一個 Rd 電阻但造成 E-mark 線材無法使用，真是這次樹莓派4最可惜的部分了。</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://hackaday.com/2019/07/16/exploring-the-raspberry-pi-4-usb-c-issue-in-depth/" target="_blank" rel="noopener">EXPLORING THE RASPBERRY PI 4 USB-C ISSUE IN-DEPTH</a></p><p><a href="https://www.usb.org/document-library/usb-type-cr-cable-and-connector-specification-revision-20-august-2019" target="_blank" rel="noopener">USB Type-C® Cable and Connector Specification Revision 2.0, August 2019</a></p><p><a href="https://www.raspberrypi.org/documentation/hardware/raspberrypi/schematics/rpi_SCH_4b_4p0_reduced.pdf" target="_blank" rel="noopener">SCHEMATIC1 : REDUCED SCHEMATICS</a></p><p><a href="https://www.raspberrypi.org/forums/viewtopic.php?t=249975" target="_blank" rel="noopener">Fixing the Pi 4 usb C issue by hand</a></p><p><a href="https://www.ecnmag.com/article/2016/06/designing-type-c-electronically-marked-cable-part-1" target="_blank" rel="noopener">Designing a Type-C Electronically Marked Cable - Part 1</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;今年(2019)樹莓派基金會發表了久違的硬體更新，升級到了4代，相信有在關注的朋友們都知道，本次供電設計終於換成了 Type-C &lt;del&gt;
      
    
    </summary>
    
    
      <category term="RaspberryPi" scheme="https://blog.driftkingtw.me/tags/RaspberryPi/"/>
    
      <category term="USB-C" scheme="https://blog.driftkingtw.me/tags/USB-C/"/>
    
  </entry>
  
  <entry>
    <title>利用 Raspberry Pi 搭建 NAS</title>
    <link href="https://blog.driftkingtw.me/archives/c138150d.html"/>
    <id>https://blog.driftkingtw.me/archives/c138150d.html</id>
    <published>2019-10-12T13:25:00.000Z</published>
    <updated>2019-10-12T15:51:06.723Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>就只是個基於 Samba 的簡易 NAS 架設過程，沒有任何動靜。</p><p>BTW 目前還是使用 Pi3B ，升級後會在補上 Pi4B 速度的差異心得。未來打算再裝上 Aria2 讓 Pi 具有下載機的功能。</p><h1 id="準備工作"><a href="#準備工作" class="headerlink" title="準備工作"></a>準備工作</h1><p>首先安裝好最新的 Raspbian Lite 版本，開機後先進行基本設定（ 可以單純ssh操作省去外接的麻煩，關於headless可以參考我之前的文章：<a href="https://blog.driftkingtw.me/archives/6759087b.html">Raspberry Zero W Headless 自動連上無線網路與開啟SSH</a> ）</p><p><code>sudo raspi-config</code></p><p>把預設密碼之類改一改，還有地區之類等基本設定。<br>設定完後先更新一下套件。</p><p><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade</code></p><h1 id="外接硬碟設定"><a href="#外接硬碟設定" class="headerlink" title="外接硬碟設定"></a>外接硬碟設定</h1><p>首先用 <code>lsblk</code> 找到要當 NAS 硬碟及分區(這邊是 <code>sda2</code> 代表 a 磁碟的 2 號分區)</p><p>格式化為 <code>ext4</code> 格式，這邊推薦用 <code>ext4</code> 效能最好</p><p><code>sudo mkfs.ext4 /dev/sda2</code></p><p><em>有些人可能會有疑問，如果用 <code>ext4</code> 會不會讓我無法在其他系統上讀取，這部分並不用擔心，因為這個硬碟格式只是給 Server 讀取寫入用的，客戶端支援的檔案格式不會影響到</em></p><p>建立掛載點</p><p><code>sudo mkdir /mnt/Share</code></p><p>查看硬碟分區的 <code>UUID</code> 並把它複製下來</p><p><code>sudo blkid</code></p><p>編輯 <code>fstab</code> 添加掛載資訊</p><p><code>sudo vim /etc/fstab</code></p><p>在最底行填上（”YOUR_UUID”替換成剛才複製的UUID）</p><p><code>UUID=YOUR_UUID  /mnt/Share  ext4  defaults  0 2</code></p><p>掛載硬碟(分區)</p><p><code>sudo mount -a</code></p><p>查看掛載狀態是否正確</p><p><code>df -h</code></p><p>最後開啟硬碟權限</p><p><code>chmod 777 /mnt/Share</code></p><h1 id="設定-Samba-Server"><a href="#設定-Samba-Server" class="headerlink" title="設定 Samba Server"></a>設定 Samba Server</h1><p>接著安裝 <code>Samba</code></p><p><code>sudo apt-get install samba samba-common-bin</code></p><p>完成後編輯 <code>/etc/samba/smb.conf</code></p><p><code>sudo vim /etc/samba/smb.conf</code></p><p>在文件最下面填入如下設定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[share]</span><br><span class="line">  Comment = Pi Shared Folder</span><br><span class="line">  Path = /mnt/Share</span><br><span class="line">  Browseable = yes</span><br><span class="line">  Writable = yes</span><br><span class="line">  guest ok = no</span><br><span class="line">  valid users = username</span><br></pre></td></tr></table></figure><p>PS：valid users 後面替換成自己的 username。</p><p>接著我們要加入 smb 的登入帳號：</p><p><code>sudo smbpasswd -a username</code></p><p>依照提示輸入密碼設定完成，最後重啟 Samba 服務完成設定。</p><p><code>sudo service smbd restart</code></p><p>都設定完成後就可以在 Windows 網路芳鄰上看到 NAS 了（由於有限定使用者，要同樣帳號名稱密碼才能進的去，若要不希望限定帳號記得在 <code>smb.conf</code> 把 guest 功能打開）</p><p>MacOS 的話則在 Finder 下按 <code>CMD+K</code> 填入 <code>smb://raspberrypi.local/Share</code> ，輸入剛才設定的 smb 使用者帳號密碼即可連入 NAS 。</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="http://blog.jachobsen.com/2013/04/29/browse-raspberry-pi-in-osx-finder-via-samba/" target="_blank" rel="noopener">Browse Raspberry Pi in OSX Finder via Samba</a></p><p><a href="https://askubuntu.com/questions/79078/how-to-restart-samba-server" target="_blank" rel="noopener">How to restart samba server?</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;就只是個基於 Samba 的簡易 NAS 架設過程，沒有任何動靜。&lt;/p&gt;
&lt;p&gt;BTW 目前還是使用 Pi3B ，升級後會在補上 Pi4B
      
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftkingtw.me/tags/MacOS/"/>
    
      <category term="NAS" scheme="https://blog.driftkingtw.me/tags/NAS/"/>
    
  </entry>
  
  <entry>
    <title>利用 Raspberry Pi 搭建 TimeCapsule（仮）- 軟體篇</title>
    <link href="https://blog.driftkingtw.me/archives/613e9fa3.html"/>
    <id>https://blog.driftkingtw.me/archives/613e9fa3.html</id>
    <published>2019-10-11T13:25:00.000Z</published>
    <updated>2019-10-12T05:44:22.777Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>相信 MacOS 的使用者應該都熟悉官方提供的備份軟體「TimeMachine」，不過如果是 Macbook 等筆電就比較麻煩了，三不五時就要接上隨身硬碟來備份對於我這種懶人來說，定時備份根本是不可能的任務。</p><p>不過備份依然是相當重要的，除了升級系統有機會用到，再來就是現在的 Macbook 硬體如此不可靠你敢不備份嗎(笑)。為了解決懶的問題，我想用無線的方式進行備份。停產的 Airport ，或是群輝（Synology）的 NAS 都有提供 TimeMachine 無線備份的功能，然而這兩者的價格都還是偏高的QwQ</p><p>所以在一輪 Google 後，我的解決方法就是利用此篇的主角：樹莓派（Raspberry Pi）來完成這項任務，在 Pi 4 推出後，硬體規格升級到了USB3.0、Gigabit Ethrnet，做個人用的簡易 NAS 已經算是堪用，更不用說對速度要求不高的 TimeMachine 了！</p><h1 id="準備工作"><a href="#準備工作" class="headerlink" title="準備工作"></a>準備工作</h1><p>首先安裝好最新的 Raspbian Lite 版本，開機後先進行基本設定（ 可以單純ssh操作省去外接的麻煩，關於headless可以參考我之前的文章：<a href="https://blog.driftkingtw.me/archives/6759087b.html">Raspberry Zero W Headless 自動連上無線網路與開啟SSH</a> ）</p><p><code>sudo raspi-config</code></p><p>把預設密碼之類改一改，還有地區之類等基本設定。<br>設定完後先更新一下套件。</p><p><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade</code></p><p>接著重啟樹莓派。</p><p><code>sudo reboot</code></p><h1 id="分割磁碟-可選"><a href="#分割磁碟-可選" class="headerlink" title="分割磁碟(可選)"></a>分割磁碟(可選)</h1><p>如果整顆硬碟都是要拿來做 TimeCapsule 的話此步驟可以跳過，直接續讀<strong><a href="#安裝過程">安裝過程</a></strong>。</p><p>首先列出硬碟情況：</p><p><code>lsblk</code></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570812124/blog/2019/10/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E8%BB%9F%E9%AB%94%E7%AF%87/Screen_Shot_2019-10-12_at_12.41.53_AM.png" alt=""></p><p>找到硬碟代號，例如這邊sda是我的外接硬碟，裡面有之前的分區。<br>首先用 <code>fdisk</code> 重新分割這顆硬碟：</p><p><code>sudo fdisk /dev/sda</code></p><p>進入 <code>fdisk</code> 可以按 <code>m</code> 顯示使用說明，這邊簡述我的硬碟分割過程：</p><ol><li><p>輸入兩次 <code>d</code> 刪除兩個原先的分區</p></li><li><p><code>n</code> 新增分區，分區代號以及起始區塊預設，結束區塊 <code>+450G</code> (這樣會建立一個代號1，450G大小的分區)</p></li><li><p>再次用 <code>n</code> 新增第二分區，一路 <code>Enter</code> 完成剩下硬碟空間的分區</p></li><li><p><code>w</code> 寫入硬碟分區資料並退出 <code>fdisk</code></p></li></ol><p>接著再次查看分割結果是否正確</p><p><code>lsblk</code></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570812186/blog/2019/10/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E8%BB%9F%E9%AB%94%E7%AF%87/Screen_Shot_2019-10-12_at_12.42.56_AM.png" alt=""></p><p>圖中可以看到硬碟已經成功分割成希望的數量以及大小<br>(注意：<code>fdisk</code> 僅支援分割2TB內的硬碟，若要分割更大的需要安裝 <code>gparted</code> 在桌面環境下操作)</p><h1 id="安裝過程"><a href="#安裝過程" class="headerlink" title="安裝過程"></a>安裝過程</h1><h2 id="準備硬碟"><a href="#準備硬碟" class="headerlink" title="準備硬碟"></a>準備硬碟</h2><p>首先格式化硬碟(<code>sda1</code>是我要格式化的分區，請依照<code>lsblk</code>顯示的自行更換)</p><p><code>sudo mkfs.ext4 /dev/sda1</code></p><p>這邊建議以 <code>ext4</code> 格式化達到最佳效能，雖然有工具可以讓 Linux 讀取 <code>hfsplus</code> 等蘋果檔案格式，但是我測試之後速度慢到想哭(／‵Д′)／~ ╧╧（這邊不太確定是不是我不會設定問題，若有錯誤歡迎指正</p><p>而且 <code>hfsplus</code> 也無法把硬碟拆下來接上 MacOS 就直接兩邊互通，索性直接用 <code>ext4</code>，以後連復原都透過網路了。</p><p>建立掛載點</p><p><code>sudo mkdir /mnt/TimeCapsule</code></p><p>查看分區的 <code>UUID</code> 並把它複製下來</p><p><code>sudo blkid</code></p><p>編輯 <code>fstab</code> 添加掛載資訊</p><p><code>sudo vim /etc/fstab</code></p><p>在最底行填上（”YOUR_UUID”替換成剛才複製的UUID）</p><p><code>UUID=YOUR_UUID  /mnt/TimeCapsule  ext4  defaults  0 2</code></p><p>掛載硬碟(分區)</p><p><code>sudo mount -a</code></p><p>查看掛載狀態</p><p><code>df -h</code></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570812250/blog/2019/10/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E8%BB%9F%E9%AB%94%E7%AF%87/Screen_Shot_2019-10-12_at_12.44.00_AM.png" alt=""></p><p>可以看到 <code>sda1</code> 已成功掛載到 <code>/mnt/TimeCapsule</code> 了</p><p>最後開啟硬碟權限</p><p><code>chmod 777 /mnt/TimeCapsule</code></p><h2 id="安裝及設定-Netatalk"><a href="#安裝及設定-Netatalk" class="headerlink" title="安裝及設定 Netatalk"></a>安裝及設定 Netatalk</h2><p>安裝 <code>Netatalk</code></p><p><code>sudo apt-get install netatalk</code></p><p>安裝完成後用 <code>netatalk -v</code> 查看版本以及設定檔位置</p><p>接著編輯 <code>nsswitch.conf</code></p><p><code>sudo vim /etc/nsswitch.conf</code></p><p>在 <code>host</code> 那行的最後加上 <code>mdns4 mdns</code> 如下</p><p><code>hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4 mdns</code></p><p>設定 <code>afp.conf</code></p><p><code>sudo vim /etc/netatalk/afp.conf</code></p><p>內容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Global]</span><br><span class="line">  mimic model = TimeCapsule6,106</span><br><span class="line"></span><br><span class="line">[Time Machine]</span><br><span class="line">  path = /mnt/TimeCapsule</span><br><span class="line">  time machine = yes</span><br></pre></td></tr></table></figure><p>保存後退出，最後啟動服務：</p><p><code>sudo service avahi-daemon start</code></p><p><code>sudo service netatalk start</code></p><p>這時應該能在 MacOS 看到你的網路硬碟了！</p><p>為了確定開機時會自動啟動服務，輸入以下指令：</p><p><code>sudo systemctl enable avahi-daemon</code></p><p><code>sudo systemctl enable netatalk</code></p><h2 id="MacOS-端設定"><a href="#MacOS-端設定" class="headerlink" title="MacOS 端設定"></a>MacOS 端設定</h2><p>接著打開 TimeMachine 設定，按選擇備份碟之後就能夠看到我們用 Raspberry Pi 的備份硬碟囉！選擇它之後輸入 Pi 的帳號密碼即可開始備份（第一次備份時間通常較長，如果開啟加密會更久），完成首次備份後接著以後就是差異備份，只要連上就會自動定期執行，在也不用怕麻煩或忘記備份了！</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570812960/blog/2019/10/%E5%88%A9%E7%94%A8%20Raspberry%20Pi%20%E6%90%AD%E5%BB%BA%20TimeCapsule%EF%BC%88%E4%BB%AE%EF%BC%89-%20%E8%BB%9F%E9%AB%94%E7%AF%87/Screen_Shot_2019-10-12_at_12.55.43_AM.png" alt=""></p><h2 id="進階設定"><a href="#進階設定" class="headerlink" title="進階設定"></a>進階設定</h2><h3 id="Raspberry-Pi-端"><a href="#Raspberry-Pi-端" class="headerlink" title="Raspberry Pi 端"></a>Raspberry Pi 端</h3><h4 id="用戶管理"><a href="#用戶管理" class="headerlink" title="用戶管理"></a>用戶管理</h4><p>新增用戶（username改成自己需要的使用者名稱）</p><p><code>useradd --create-home --groups users --user-group username</code></p><p>建立密碼</p><p><code>passwd username</code></p><p>編輯 <code>afp.conf</code></p><p><code>sudo vim /etc/netatalk/afp.conf</code></p><p>在 <code>[Time Machine]</code> (顯示名稱依照之前設定的可能會有不同)新增使用者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Time Machine]</span><br><span class="line">  path = /mnt/TimeCapsule</span><br><span class="line">  time machine = yes</span><br><span class="line">  valid user = username</span><br></pre></td></tr></table></figure><h4 id="靜態-IP"><a href="#靜態-IP" class="headerlink" title="靜態 IP"></a>靜態 IP</h4><p>固定 Pi 的 IP，這部分可以前往路由器設定，由於每家路由器不一定相同，所以另外依照各廠商提供的說明設定。</p><h3 id="Mac-端"><a href="#Mac-端" class="headerlink" title="Mac 端"></a>Mac 端</h3><p>首次備份時若覺得備份速度太慢可以執行以下 Script 關閉限流：</p><p><code>sudo sysctl debug.lowpri_throttle_enabled=0</code></p><p>恢復方式：</p><p><code>sudo sysctl debug.lowpri_throttle_enabled=1</code></p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://blog.gtwang.org/linux/linux-add-format-mount-harddisk/" target="_blank" rel="noopener">替 Linux 新增硬碟（磁碟分割、格式化與掛載）</a></p><p><a href="https://www.youtube.com/watch?v=yJs8f0spJO4" target="_blank" rel="noopener">How to Use Your Raspberry Pi as a Time Machine Backup Server for macOS</a></p><p><a href="https://www.imore.com/how-speed-your-time-machine-backups" target="_blank" rel="noopener">How to speed up your Time Machine backups</a></p><p><a href="https://openwrt.org/docs/guide-user/services/nas/netatalk_configuration" target="_blank" rel="noopener">AFP Netatalk share configuration (aka Apple Time Machine).</a></p><p><a href="https://gregology.net/2018/09/raspberry-pi-time-machine/" target="_blank" rel="noopener">Raspberry Pi Time Machine (2019 update)</a></p><p><a href="https://www.jannikarndt.de/blog/2018/01/how_to_use_a_raspberry_pi_for_your_time_machine_backups/" target="_blank" rel="noopener">How to use a Raspberry Pi for your Time Machine backups</a></p><p><a href="https://github.com/mr-bt/raspberrypi-timemachine" target="_blank" rel="noopener">Apple Time machine on RaspberryPI</a></p><p><a href="https://www.jannikarndt.de/blog/2018/01/how_to_use_a_raspberry_pi_for_your_time_machine_backups/" target="_blank" rel="noopener">How to use a Raspberry Pi for your Time Machine backups</a></p><p><a href="https://aunicorn.io/2018/08/15/how-to-make-a-time-capsule-with-your-raspberry-pi/" target="_blank" rel="noopener">利用 Raspberry Pi（树莓派）打造 Time Capsule（时间胶囊）</a></p><p>PS 因為各種文章新舊版本問題，所以參考了不少資料才整理出一個目前可以使用，快速的設定過程。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;相信 MacOS 的使用者應該都熟悉官方提供的備份軟體「TimeMachine」，不過如果是 Macbook 等筆電就比較麻煩了，三不五時就
      
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftkingtw.me/tags/MacOS/"/>
    
      <category term="TimeCapsule" scheme="https://blog.driftkingtw.me/tags/TimeCapsule/"/>
    
      <category term="TimeMachine" scheme="https://blog.driftkingtw.me/tags/TimeMachine/"/>
    
  </entry>
  
  <entry>
    <title>利用 SFTP 在 Android 上存取 MacOS 檔案</title>
    <link href="https://blog.driftkingtw.me/archives/1a5b208d.html"/>
    <id>https://blog.driftkingtw.me/archives/1a5b208d.html</id>
    <published>2019-10-04T14:00:00.000Z</published>
    <updated>2019-10-09T15:04:07.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一篇提到了如何利用 MacOS 本身自帶的檔案分享功能搭建 SMB 進行分享，不過因為一些 MacOS 自帶 SMB 的一些 bug 所以 Android 的用戶就沒那麼方便了(<del>Apple你到底修不修</del>)，幸好有另一種方法，也就是本文的主題：利用 SFTP 在 MacOS 上搭建檔案分享伺服器。</p><h1 id="MacOS-搭建-SFTP-伺服器"><a href="#MacOS-搭建-SFTP-伺服器" class="headerlink" title="MacOS 搭建 SFTP 伺服器"></a>MacOS 搭建 SFTP 伺服器</h1><p>首先同樣進到系統設定(System Preferences)，接著選擇分享(Sharing)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570189697/blog/2019/10/%E5%9C%A8%20MacOS%20%E4%B8%8A%E6%90%AD%E5%BB%BA%20SMB%20%E7%B0%A1%E6%98%93%E6%AA%94%E6%A1%88%E5%88%86%E4%BA%AB%E4%BC%BA%E6%9C%8D%E5%99%A8/Screen_Shot_2019-10-04_at_7.44.42_PM.jpg" alt=""></p><p>在這邊我們不選擇檔案分享 (File Sharing) ，而是選擇遠端登入 (Remote Login)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570191030/blog/2019/10/%E5%88%A9%E7%94%A8%20SFTP%20%E5%9C%A8%20Android%20%E4%B8%8A%E5%AD%98%E5%8F%96%20MacOS%20%E6%AA%94%E6%A1%88/.Screen_Shot_2019-10-04_at_8.10.17_PM.png" alt=""></p><p>這時我們會看到下方有一行資訊顯示”ssh username@192.168.xxx.xxx”類似的相關字串(依照IP跟使用者而定)，這邊先記下我們的區網IP。</p><p>接著就可以切換到 Android 端，這邊用 ES File Explorer 做示範</p><p>側邊欄選擇 FTP ，接著按右下角加號新增伺服器</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570191510/blog/2019/10/%E5%88%A9%E7%94%A8%20SFTP%20%E5%9C%A8%20Android%20%E4%B8%8A%E5%AD%98%E5%8F%96%20MacOS%20%E6%AA%94%E6%A1%88/Screenshot_20191004-201308.png" alt=""></p><p>Server 欄輸入剛才記下的區網 IP，Port 預設 22 沒改動就維持原樣<br>然後填入電腦帳號密碼按下 OK 就能夠成功連上看到 MacOS 裡的內容囉。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570191514/blog/2019/10/%E5%88%A9%E7%94%A8%20SFTP%20%E5%9C%A8%20Android%20%E4%B8%8A%E5%AD%98%E5%8F%96%20MacOS%20%E6%AA%94%E6%A1%88/Screenshot_20191004-201757.png" alt=""></p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://www.mjdtech.net/browse-files-on-mac-with-es-file-explorer-and-sftp/" target="_blank" rel="noopener">How to Browse/Share Files on Mac and Android with ES File Explorer SFTP</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;上一篇提到了如何利用 MacOS 本身自帶的檔案分享功能搭建 SMB 進行分享，不過因為一些 MacOS 自帶 SMB 的一些 bug 所
      
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftkingtw.me/tags/MacOS/"/>
    
      <category term="SFTP" scheme="https://blog.driftkingtw.me/tags/SFTP/"/>
    
  </entry>
  
  <entry>
    <title>在 MacOS 上搭建 SMB 簡易檔案分享伺服器</title>
    <link href="https://blog.driftkingtw.me/archives/b7400b18.html"/>
    <id>https://blog.driftkingtw.me/archives/b7400b18.html</id>
    <published>2019-10-04T13:00:00.000Z</published>
    <updated>2019-10-09T15:04:10.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>有時候會想要在iPad上無線存取一些電腦裡的檔案，卻沒有NAS或在外面不方便，其實 MacOS 也有提供像 Windows 網路芳鄰的檔案分享功能，而且設定操作非常簡單，步驟如下。</p><h1 id="MacOS-搭建-SMB-伺服器"><a href="#MacOS-搭建-SMB-伺服器" class="headerlink" title="MacOS 搭建 SMB 伺服器"></a>MacOS 搭建 SMB 伺服器</h1><p>首先開啟系統設定(System Preferences)，接著選擇分享(Sharing)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570189697/blog/2019/10/%E5%9C%A8%20MacOS%20%E4%B8%8A%E6%90%AD%E5%BB%BA%20SMB%20%E7%B0%A1%E6%98%93%E6%AA%94%E6%A1%88%E5%88%86%E4%BA%AB%E4%BC%BA%E6%9C%8D%E5%99%A8/Screen_Shot_2019-10-04_at_7.44.42_PM.jpg" alt=""></p><p>接著勾選左邊的檔案分享(File Sharing)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570189783/blog/2019/10/%E5%9C%A8%20MacOS%20%E4%B8%8A%E6%90%AD%E5%BB%BA%20SMB%20%E7%B0%A1%E6%98%93%E6%AA%94%E6%A1%88%E5%88%86%E4%BA%AB%E4%BC%BA%E6%9C%8D%E5%99%A8/.Screen_Shot_2019-10-04_at_7.49.26_PM.png" alt=""></p><p>在分享資料夾列表下面，點選”+”符號可以新增要分享的資料夾</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570189911/blog/2019/10/%E5%9C%A8%20MacOS%20%E4%B8%8A%E6%90%AD%E5%BB%BA%20SMB%20%E7%B0%A1%E6%98%93%E6%AA%94%E6%A1%88%E5%88%86%E4%BA%AB%E4%BC%BA%E6%9C%8D%E5%99%A8/.Screen_Shot_2019-10-04_at_7.51.41_PM.png" alt=""></p><p>接著其他電腦就會像網路上的芳鄰一樣，能夠存取分享的檔案了！<br>行動裝置的話，iOS可以利用檔案管理的App來進行存取，這邊用的是Documents來做示範。</p><p>開啟 Documents 後，選擇附近的裝置(Nearby)，可以看到同網域下的電腦(SMB Server)列表，點進去登入電腦上的帳號就可以對分享檔案進行存取了！</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1570190209/blog/2019/10/%E5%9C%A8%20MacOS%20%E4%B8%8A%E6%90%AD%E5%BB%BA%20SMB%20%E7%B0%A1%E6%98%93%E6%AA%94%E6%A1%88%E5%88%86%E4%BA%AB%E4%BC%BA%E6%9C%8D%E5%99%A8/IMG_0621.png" alt=""></p><h1 id="備註"><a href="#備註" class="headerlink" title="備註"></a>備註</h1><p>要特別注意，如果使用的是 Android 系統，利用 MacOS 本身自帶的 SMB Server 是無法連上的，一開始我以為是設定錯誤，結果爬了文才發現原來這問題已經存在很久了，不過 Apple 看起來沒要修復的打算(ry</p><p>所以下一篇就要來介紹如何利用 SFTP 讓 Android 也能同樣輕鬆存取 MacOS 上的分享檔案囉！</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://support.apple.com/HT204445" target="_blank" rel="noopener">How to connect with File Sharing on your Mac</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;有時候會想要在iPad上無線存取一些電腦裡的檔案，卻沒有NAS或在外面不方便，其實 MacOS 也有提供像 Windows 網路芳鄰的檔案分
      
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftkingtw.me/tags/MacOS/"/>
    
      <category term="SMB" scheme="https://blog.driftkingtw.me/tags/SMB/"/>
    
  </entry>
  
  <entry>
    <title>利用Applescript快速切換TrueTone</title>
    <link href="https://blog.driftkingtw.me/archives/ba06666d.html"/>
    <id>https://blog.driftkingtw.me/archives/ba06666d.html</id>
    <published>2018-12-01T16:20:52.000Z</published>
    <updated>2019-10-04T12:34:55.519Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2018 Macbook Pro終於可以使用原先發佈在iPad Pro的True Tone功能，讓螢幕偵測周圍的光線來改變螢幕顏色，使用上相當舒服。<br>不過如果要使用影像處理或繪圖等對顏色準確度有需求的工作時就得把它暫時關掉才不會影響，然而每次都要進入設定調整也是挺麻煩的，不如利用Applescript爲我們代勞。</p><h1 id="How"><a href="#How" class="headerlink" title="How"></a>How</h1><p><a href="https://github.com/DriftKingTW/True-Tone-Toggler" target="_blank" rel="noopener">Github - Ture Tone Toggler</a></p><p>目前還找不到如何透過command line設定True Tone，所以用Applescript控制設定，可以把它跟BetterTouchTool結合，利用快捷鍵或Touchbar之類快速開關True Tone功能。</p><p>此程式碼修改自<a href="https://www.reddit.com/r/applescript/comments/9a5gej/has_anyone_figured_out_how_to_return_the/" target="_blank" rel="noopener">Reddit上的一篇討論</a>，我加上判斷以及提示的功能，讓使用者可以明確知道現在操作是開啓或關閉True Tone。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">"System Preferences"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">it</span> <span class="keyword">is</span> <span class="built_in">running</span> <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">delay</span> <span class="number">0.2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">activate</span> <span class="built_in">application</span> <span class="string">"System Preferences"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">"System Events"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">tell</span> process <span class="string">"System Preferences"</span></span><br><span class="line"></span><br><span class="line">click button <span class="string">"Displays"</span> <span class="keyword">of</span> scroll area <span class="number">1</span> <span class="keyword">of</span> window <span class="string">"System Preferences"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">delay</span> <span class="number">0.8</span></span><br><span class="line"></span><br><span class="line">click radio button <span class="string">"Display"</span> <span class="keyword">of</span> <span class="literal">tab</span> group <span class="number">1</span> <span class="keyword">of</span> window <span class="string">"Built-in Retina Display"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> TrueToneCheckbox <span class="keyword">to</span> checkbox <span class="string">"True Tone"</span> <span class="keyword">of</span> <span class="literal">tab</span> group <span class="number">1</span> <span class="keyword">of</span> window <span class="string">"Built-in Retina Display"</span></span><br><span class="line"></span><br><span class="line">click TrueToneCheckbox</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> TrueToneState <span class="keyword">to</span> <span class="string">"ON"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">tell</span> TrueToneCheckbox</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> (<span class="keyword">its</span> value <span class="keyword">as</span> <span class="built_in">boolean</span>) <span class="keyword">then</span> <span class="keyword">set</span> TrueToneState <span class="keyword">to</span> <span class="string">"OFF"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line">quit <span class="built_in">application</span> <span class="string">"System Preferences"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span><br><span class="line"></span><br><span class="line">display notification <span class="string">"True Tone "</span> &amp; TrueToneState <span class="keyword">with</span> title <span class="string">"True Tone Script"</span> sound <span class="built_in">name</span> <span class="string">"Submarine"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">delay</span> <span class="number">0.8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">say</span> <span class="string">"True Tone has been turned  "</span> &amp; TrueToneState</span><br></pre></td></tr></table></figure><p>有需要自定義通知的部分可以修改 <code>display notification</code> 的部分，不想要語音提示可以註解掉 <code>say</code> 那行。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://www.reddit.com/r/applescript/comments/9a5gej/has_anyone_figured_out_how_to_return_the/" target="_blank" rel="noopener">Reddit: Has anyone figured out how to return the true/false status for True Tone with AppleScript</a></p><p><a href="https://developer.apple.com/library/archive/documentation/LanguagesUtilities/Conceptual/MacAutomationScriptingGuide/DisplayNotifications.html#//apple_ref/doc/uid/TP40016239-CH61-SW1" target="_blank" rel="noopener">Displaying Notifications</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;2018 Macbook Pro終於可以使用原先發佈在iPad Pro的True Tone功能，讓螢幕偵測周圍的光線來改變螢幕顏色，使用上相
      
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftkingtw.me/tags/MacOS/"/>
    
      <category term="Touchbar" scheme="https://blog.driftkingtw.me/tags/Touchbar/"/>
    
  </entry>
  
  <entry>
    <title>Delux Designer 單手機械鍵盤使用心得</title>
    <link href="https://blog.driftkingtw.me/archives/d0fa2398.html"/>
    <id>https://blog.driftkingtw.me/archives/d0fa2398.html</id>
    <published>2018-11-05T08:38:27.000Z</published>
    <updated>2019-10-09T15:03:57.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541408932/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/P_20181105_164633_vHDR_Auto.jpg" alt="Delux Designer單手鍵盤"></p><p>個人平常電繪認爲最不可或缺的就是快捷鍵，可以在各種工具間快速切換也是電繪能夠大幅提升效率的原因之一。不過因爲繪圖板有一定大小，加上鍵盤螢幕桌面空間不夠大的可能會不好調整，尤其用繪圖螢幕的更難舒適的擺放鍵盤，所以很多人會希望有個小的單手鍵盤可以在狹小的空間也能輕鬆的按快捷鍵來提升工作效率。</p><h1 id="Designer-單手機械鍵盤"><a href="#Designer-單手機械鍵盤" class="headerlink" title="Designer 單手機械鍵盤"></a>Designer 單手機械鍵盤</h1><p>目前市面上最多人用的單手鍵盤應該是某蛇的單手遊戲鍵盤，不過我覺得價格有點高加上有點醜，雖然是比較符合人體工學，但還是想找個便宜又好看的玩玩。之後在社群網站上發現了今天的主角「 Delux Designer 」單手鍵盤的廣告，後來在Kickstarter上集資我就衝去Back一個，記得Super Early Bird價格約60USD的樣子，相對於其他單手鍵盤算是便宜了不少，外觀也不錯（當然某寶上也有不少便宜的單手鍵盤，不過就方方正正的一堆按鍵不是很喜歡）。這邊附上KS募資頁面裡面也有產品介紹：<a href="https://www.kickstarter.com/projects/1594516409/delux-designer-the-perfect-assistant-for-designers" target="_blank" rel="noopener">Delux Designer - The Perfect Assistant for Designers</a></p><h1 id="辛苦的群募過程"><a href="#辛苦的群募過程" class="headerlink" title="辛苦的群募過程"></a>辛苦的群募過程</h1><p>一開始感覺挺順利，24H內就募得所需的資金，然而原本預計7月能拿到，卻硬生生的拖了一陣子。我的贊助編號是個位數的，卻等到8月初才拿到，想想就算了反正募資有風險，如果不是詐騙那晚一點還是能夠接受。但是拿到後才是麻煩的開始……</p><p>當我興奮的打開包裝才發現原本問卷選的黑灰色版本，居然成了白色（包裝外註解還寫着BLACK），不得不說是看到有深色可選才決定下單試水溫的，這下要處理國際運算又很麻煩，沒想到的是看了看討論區居然許多人遇到跟我一樣的錯色問題，而且留言還被募資者無視（ry</p><p>再過了一個月後，看著許多人顏色收錯就算了，居然很多人都還沒收到，回應也相當緩慢，甚至我都拿到東西隔了很久才收到寄件編號，徹底無語。就在準備放棄之時他們終於回了Mail，表示因爲是初次群募所以處理的不是很好（可是他們介紹自己是創立逾十年的公司了？），希望收錯顏色的能夠理解看能不能接受不同的顏色，寄錯顏色又被放了鴿子一個月才回覆當然受不了，表示希望還是想要深色版本，橋了橋才終於讓對方寄正確的顏色過來，算是告了個段落（雖然我看討論區還有人沒收到……）</p><h1 id="外觀"><a href="#外觀" class="headerlink" title="外觀"></a>外觀</h1><p>聽了上面的碎碎唸，現在來看看產品本身吧。</p><p>簡單拍個包裝以及內容物：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541409137/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/P_20181105_165552_vHDR_Auto.jpg" alt="外包裝（黑白包裝外盒皆印刷白色產品）"></p><p>內容物有：Designer鍵盤本體、USB-C編織網傳輸線、說明書、募資達$100,000(HKD？)目標的收納袋</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541408925/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/P_20181105_164603_vHDR_Auto.jpg" alt="內容物"></p><p>目前階段只有一種軸體可選：凱華巧克力白軸，之前沒碰過這種Low Profile軸，打起來還不錯，類似青軸，有段落，但也是挺吵的，如果想要安靜使用可能不適合（咖啡廳之類，絕壁會被白眼XD），除非之後有其他軸體可選。目前我還不敢拆來看，理論上能拆是能換軸就是。</p><p>鍵帽的部分也是意外的不錯，我原本以爲是廉價ABS感，結果摸起來是霧面但很滑順也挺有質感的，不過用久了會不會打油之類可能要過陣子才能知道了。</p><p>背光只有白光，發光模式目前有三種：全亮、呼吸、點擊發光，用Fn+Mode鍵切換，Fn+Esc可以關閉背光，轉盤部分只能常亮或關閉，角度小一點看其實轉盤挺刺眼的……希望之後的更新能夠調整亮度。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541423128/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/P_20181105_210449_vHDR_Auto.jpg" alt="鍵帽"></p><p>本體的做工還算不錯，這價格用鋁製機身已經不錯了，雖然我原本以爲鋁材表面打磨的會更細膩些。側邊是塑膠圍繞，邊上鑲着銀邊挺有水果風（類似iPad那種），白色的邊緣摸起來有種滑順的觸感，黑色就是普通的霧面塑膠，底部也有六個防滑腳墊。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541408936/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/P_20181105_164650_vHDR_Auto.jpg" alt="底部"></p><p>對於線材不是隨便給條看起來廉價的塑膠線這點我是挺驚訝的，不過我自己喜歡用L插所以還是換成自己的USB線。</p><p>搭個Macbook很適合，尤其在沒辦法放整把鍵盤的地方這東西簡直是蝶式鍵盤救星！（看那閃瞎的轉盤……）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541408928/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/P_20181105_164901_vHDR_Auto.jpg" alt="MBP+Designer"></p><p>目前只有設計給右撇子用的，如果左手拿筆可能得在等等看之後會不會出了。</p><h1 id="使用心得"><a href="#使用心得" class="headerlink" title="使用心得"></a>使用心得</h1><p>手感使用上其實比較適合手小的，手大點放不到掌托，而且因爲鍵帽幾乎是平的又比較緊密，手感一定沒有傳統高度機械鍵盤按起來舒服，爲了輕薄好攜帶還是得犧牲點東西。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541425568/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/P_20181105_214333_vHDR_Auto.jpg" alt="實際使用上手掌懸空"></p><p>鍵區Layout部分（參考設定圖），上方是模式控制區：Num（數字區）、M1～M3（模式1～3）<br>下方除了修飾鍵（Modifer）外都能自定義，支援巨集設定（Macro），然而這部分就出現了個問題，在MacOS下沒辦法使用Command鍵……這點就神奇了，他們的目標客群是創作者跟設計師，相關人士使用MacOS的不少，然而這設定讓這鍵盤在MacOS下幾乎沒法用，而且也無法像Windows上那樣修改設定（有不少人提及此問題，目前是說下一版本驅動會改善），然後Windows上驅動有時也會出現Bug，不過至少算是堪用。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541424457/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/Image_791.png" alt="驅動設定"></p><p>雖然有問題但是MacOS目前有個方法能使用，由於修改鍵位比Windows方便不少，所以可以參考下圖改變該鍵盤的Modifer位置就可以暫時撐著用：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541425157/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/.Screen_Shot_2018-11-05_at_9.39.10_PM.png" alt="MacOS改鍵位"></p><p>然後驅動無法設定可能就要去Windows設定鍵位以及巨集了（ry</p><p>轉盤部分無法自定義是硬傷，也是許多贊助者詬病之處，目前只能長按轉盤中間按鈕叫出下圖的選項來選擇預設的幾種功能（同樣說下版本驅動會提供自定義轉盤功能）。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541424877/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/Image_792.png" alt="轉盤設定"></p><p>還有看不少人討論目前不支援4k解析，也得等更新了。</p><p>其他基本功能上是沒什麼大問題，也不會有延遲的情況，若上述問題能改善其實整體算是相當不錯的單手鍵盤，而且能夠接上iPad使用沒問題呢！（iOS11、12皆可）雖然要買轉USB，但這樣用CSP時終於不用另外在找藍牙鍵盤囉XD而且新的iPad Pro換成USB-C應該更方便了，跟我一樣離不開快捷鍵的同學們可以考慮看看這種方式。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541426172/blog/2018/11/Delux_Designer_%E5%96%AE%E6%89%8B%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/P_20181105_215155_vHDR_Auto.jpg" alt="完美支援iOS"></p><p>之後在考慮看看要不要自幹改藍牙好了，不然iPad轉接也是不太理想。</p><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>Designer的想法不錯，不過執行力欠佳，驅動草率尤其MacOS部分，但若修正上述軟體跟自定義問題，我覺得這價格算是挺值得一試的。硬體還有些許改善空間，轉盤感覺穩定度跟轉動的手感可以更好，若是未來能加入藍牙功能那操作自由度會更高更方便。某蛇的單手鍵盤，如果預算夠、需要長時間使用、沒有攜帶需求，還是可以的，反之可以考慮Designer這種。</p><p>至於單手鍵盤用一用的心得，很適合用繪圖螢幕的人使用節省桌面空間，或是鍵盤跟繪圖板位置不好擺放的使用者。當然這種可自定也支援各種軟體，利用巨集做workflow，只要你能按快捷鍵的軟體都行，畢竟說到底還是個鍵盤，要拿來畫2D3D、玩遊戲之類能想到都行（雖然我覺得這東西拿來玩遊戲根本：要玩去買某蛇吧），雖然官方說用這個能提升80%生產力我是不信啦XD大概有個40~60%左右就很好了。</p><p>至於募資的部分，這次募資的售後方面實在感受不好回應又慢，雖然都算客氣，但下次如果要贊助他們家的商品可能就要多多考慮了吧。</p><p>感謝觀看！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v
      
    
    </summary>
    
    
      <category term="Keyboard" scheme="https://blog.driftkingtw.me/tags/Keyboard/"/>
    
      <category term="開箱" scheme="https://blog.driftkingtw.me/tags/%E9%96%8B%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>Google Pixel USB-C Earbuds 耳機開箱</title>
    <link href="https://blog.driftkingtw.me/archives/f6f885e.html"/>
    <id>https://blog.driftkingtw.me/archives/f6f885e.html</id>
    <published>2018-11-02T13:11:33.000Z</published>
    <updated>2019-10-09T15:04:00.449Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541164543/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_203946_vHDR_Auto.jpg" alt="Google Pixel Earbuds"></p><p>前陣子Google發表會發佈了Pixel 3的消息，這次臺灣也在上市清單中，雖然買不起不過上Google Store晃了下發現這次手機附的Pixel USB-C耳機也有單獨販賣，售價NT990跟Apple的Earpods差不多，身爲G粉雖然買不起手機（還有XL的瀏海好醜我實在太失望了）但是這還是能充值一下信仰的！二話不說就跟朋友一起下訂，但是送貨過程坎坷，一下是延期出貨一下是卡海關，硬是等了兩個多禮拜才終於收到(ry</p><h1 id="開箱"><a href="#開箱" class="headerlink" title="開箱"></a>開箱</h1><p>簡單拍一下包裝：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/a_auto_right/v1541164543/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_200453_vHDR_Auto.jpg" alt="正面"></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/a_auto_right/v1541164543/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_200459_vHDR_Auto.jpg" alt="背面"></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541165531/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_200520_vHDR_Auto.jpg" alt="側面"></p><p>順帶一提，這防僞標籤找個角度就會出現Google的經典配色，很有趣。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541164544/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_210647_vHDR_Auto.jpg" alt="防僞標籤"></p><p>拆箱！</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541164543/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_203946_vHDR_Auto.jpg" alt="開箱"></p><p>接着把上蓋提起，下面是一些安全跟保固說明小冊子，說明書在裝耳機的蓋子上。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541164547/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_204003_vHDR_Auto.jpg" alt="包裝一覽"></p><p>本體，耳機的部分除了最外面圓形那片蓋子是霧面的大部分是亮面，上方有G字樣Logo，不過不仔細看不清楚就是了，耳殼外觀其實挺像Apple的設計。</p><p>BTW上面耳機線套了透明軟管繞個小圈可以調整大小，符合各種耳型。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541164547/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_204205_vHDR_Auto.jpg" alt="本體"></p><p>佩戴方面相當的輕，比Airpods戴起來更無感，很舒服，甩動跑跳也不容易掉落！線材部分比我想象中細了點，大概跟Earpods差不多吧，不知道用久會不會發黃。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541164545/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_204226_vHDR_Auto.jpg" alt="線控&amp;Type-C"></p><p>線控部分一面是亮面，按鈕側是霧面，中間除了接聽電話跟播放暫停音樂外，長按可以呼叫Google Assistant，但我覺得中間按鈕設計不是很好，太小容易按到音量控制，一開始測試的時候不小心按到增加音量差點被嚇到XD。</p><p>雖然官方網頁上寫著搭配Pixel才能發揮最大功能，但是我接在Asus Zenfone 4 Pro上也沒有任何問題，GA呼叫也OK。<del>所以看來搭配Pixel什麼的果然只是話術</del></p><p>按理說只要有Type-C音訊輸出的裝置都能用，所以我順便裝上MBP試試，功能也完全支援！呼叫Siri也沒問題，而且甚至比Airpods好，我用Airpods在MBP上叫Siri是聽不到Siri說話的，要從螢幕看，但Pixel Earuds就可以直接聽到Siri與其對話。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541167025/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_215526_vHDR_Auto.jpg" alt="Macbook + Pixel耳機"></p><p>另外在iPad上用Airpods呼叫Siri時雖然聽的到Siri說話，但聽起來會變成單聲道而且音質變差，Pixel Earuds叫Siri聽起來很正常（接Macbook Pro）不知道是不是有線耳機的關係。還有一點：Airpods在切換音樂跟語音助理的過程是很僵硬的停掉音樂，Pixel Earuds卻有FadeIn、FadOut的效果，跟在Android上叫Google Assistant體驗一樣好，小細節聽起來舒服多了。</p><p>說完優點也該說說缺點了：音質不怎麼樣，Airpods的音質普普差不多1k左右的價位，Pixel Earbuds聽起來更差，低頻下潛、高頻跟人聲等幾乎全輸Airpods，對一般人聽起來可能還行或普普就是，但CP值相比之下確實不高，當然也有可能是因爲初開聲還沒RunIn的關係，不過在意音質的朋友基本上不用考慮了。</p><p><del>雖然早料到音質不怎麼樣，但畢竟爲了細信仰嘛沒什麼大不了能不能聽其次有Logo最重要</del>。</p><p>最後來張跟Airpods的合照，作爲一個NT990的Google線控Type-C耳機我覺得還是可以考慮的，雖然我沒用過其他的Type-C耳機，<del>不過不用說”Hey Google”就能直接呼叫GA真的挺方便的，不用像Airpods敲了還要”Hey Siri”才會理你，在外面尷尬度破錶</del>（後來發現都是按鍵或敲擊就有了，不用另外呼叫），可惜以音質來說的確是不怎麼突出就是。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1541164547/blog/2018/11/Google-Pixel-USB-C-%E8%80%B3%E6%A9%9F%E9%96%8B%E7%AE%B1/P_20181102_205457_vHDR_Auto.jpg" alt="Airpods w/ Pixel Earbuds"></p><p>結論：有需要Type-C耳機或呼叫GA功能、而且對音質沒那麼要求的朋友可以考慮看看Pixel Earbuds，<del>還有Google信仰者不收說不過去啊</del>，價格適中，音質殘念（BTW耳塞式基本上不用考慮隔音了，有降噪需求的也可以跳過），防水部分沒測試不過我覺得戴着運動基本上也蠻適合的！</p><p>有興趣的可以自行去Google Store看看，感謝觀看！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v
      
    
    </summary>
    
    
      <category term="開箱" scheme="https://blog.driftkingtw.me/tags/%E9%96%8B%E7%AE%B1/"/>
    
      <category term="Google" scheme="https://blog.driftkingtw.me/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>利用BetterTouchTool在Touchbar上顯示CPU溫度</title>
    <link href="https://blog.driftkingtw.me/archives/cc83b42a.html"/>
    <id>https://blog.driftkingtw.me/archives/cc83b42a.html</id>
    <published>2018-10-26T01:16:36.000Z</published>
    <updated>2019-10-09T15:03:53.905Z</updated>
    
    <content type="html"><![CDATA[<h1 id="How"><a href="#How" class="headerlink" title="How"></a>How</h1><ol><li>下載 <a href="https://github.com/lavoiesl/osx-cpu-temp" target="_blank" rel="noopener">osx-cpu-temp</a> 。</li><li>進入下載的資料夾後執行 <code>sudo make install</code> 安裝。</li><li>在 BetterTouchTool 裡新增 Widget/Gesture，選擇 ‘Run Shell Script and Show Return Value’。</li><li>雙擊打開進階設定，更改 LaunchPath <code>/usr/local/bin/osx-cpu-temp</code> ，下方可以調整更新間隔（預設5秒）。</li><li>選擇要不要新增icon跟其他外觀設定，完成！</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1540517774/blog/2018/10/%E5%88%A9%E7%94%A8BetterTouchTool%E5%9C%A8Touchbar%E4%B8%8A%E9%A1%AF%E7%A4%BACPU%E6%BA%AB%E5%BA%A6/Touch_Bar_Shot_2018-10-26_at_9.34.17_AM.png" alt="Touchbar顯示CPU溫度"></p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://community.folivora.ai/t/display-cpu-temp/1082" target="_blank" rel="noopener">Display CPU Temp</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;How&quot;&gt;&lt;a href=&quot;#How&quot; class=&quot;headerlink&quot; title=&quot;How&quot;&gt;&lt;/a&gt;How&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;下載 &lt;a href=&quot;https://github.com/lavoiesl/osx-cpu-temp&quot; target
      
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftkingtw.me/tags/MacOS/"/>
    
      <category term="Touchbar" scheme="https://blog.driftkingtw.me/tags/Touchbar/"/>
    
  </entry>
  
  <entry>
    <title>Macbook Pro 2018 Color Banding 問題</title>
    <link href="https://blog.driftkingtw.me/archives/c3ffdb1b.html"/>
    <id>https://blog.driftkingtw.me/archives/c3ffdb1b.html</id>
    <published>2018-10-12T09:51:04.000Z</published>
    <updated>2019-10-09T15:03:44.145Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在測試螢幕RGB設定時順便測試了一下MBP2018的螢幕效能（一開始來只有看有無亮暗點），發現了在Gradient測試下居然出現了明顯的Banding現象…如下圖。</p><h1 id="Gradient-Test"><a href="#Gradient-Test" class="headerlink" title="Gradient Test"></a>Gradient Test</h1><p><strong>都有在瀏覽器跟Photoshop內做測試，MacOS部分有另外在Safari測試</strong></p><p><strong>測試時皆爲最大亮度</strong></p><p>自己的MBP2018 13”預設色彩設定檔<br>測試值RGB(0,0,0)-&gt;RGB(100,100,100)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1539338402/blog/2018/10/Macbook-Pro-2018-Color-Banding-%E5%95%8F%E9%A1%8C/P_20181012_160038_vHDR_Auto.jpg" alt="Macbook Pro 2018"></p><hr><ul><li>朋友的MBP2018 13”預設色彩設定檔<br>測試值RGB(0,0,0)-&gt;RGB(100,100,100)</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1539338685/blog/2018/10/Macbook-Pro-2018-Color-Banding-%E5%95%8F%E9%A1%8C/43787909_254069108589932_8509140437481553920_n.jpg" alt="朋友的MBP2018 13&quot;"></p><hr><ul><li>借來的MBP2017 15”預設色彩設定檔<br>測試值RGB(0,0,0)-&gt;RGB(100,100,100)</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1539338685/blog/2018/10/Macbook-Pro-2018-Color-Banding-%E5%95%8F%E9%A1%8C/43788171_276891582933239_8832958624885112832_n.jpg" alt="朋友借來的MBP2017 15&quot;"></p><hr><ul><li>工作螢幕EIZO EV2450，接MacOS 強制sRGB色彩設定檔（非YCbCr）<br>測試值RGB(0,0,0)-&gt;RGB(100,100,100)</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1539338403/blog/2018/10/Macbook-Pro-2018-Color-Banding-%E5%95%8F%E9%A1%8C/P_20181012_160311_vHDR_Auto.jpg" alt="EIZO EV2450"></p><hr><ul><li>副螢幕DELL P2214H，接Windows10 預設sRGB色彩設定檔<br>測試值RGB(0,0,0)-&gt;RGB(255,255,255)</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1539338403/blog/2018/10/Macbook-Pro-2018-Color-Banding-%E5%95%8F%E9%A1%8C/P_20181012_175652_vHDR_Auto_HP.jpg" alt="Dell P2214H"></p><hr><ul><li>iPad Pro 2017 10.5”<br>測試值RGB(0,0,0)-&gt;RGB(255,255,255)</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1539338403/blog/2018/10/Macbook-Pro-2018-Color-Banding-%E5%95%8F%E9%A1%8C/P_20181012_175612_vHDR_Auto_HP.jpg" alt="iPad Pro 2017 10.5&quot;"></p><hr><p>另外上面兩台18年MBP查詢發現應該都是三星的面板，不確定供應商是否影響，有待確認。</p><p>查詢面板方法(Pro Retina)： <code>ioreg -lw0 | grep -i &quot;DisplayVendorID&quot;</code></p><p>Mojave若遇到錯誤可以安裝XCode開發工具解決 <code>xcode-select --install</code></p><ul><li>Samsung ID：1552</li><li>LG ID：7789</li></ul><p>以上結果可以看出現Color Banding應該也不是個案，而且iPad螢幕雖然開到最亮也會有稍微的Banding情況，但都沒有MBP嚴重，雖然平時外接不影響但是這價格的筆電螢幕出現這種問題還是令人不太舒服啊……上網找都是2010左右的討論，後來好像都沒聽說有人提起(ry</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="http://www.lagom.nl/lcd-test/gradient.php#gradient-h.png" target="_blank" rel="noopener">測試網站 The Lagom LCD monitor test</a></p><p><a href="https://dotblogs.com.tw/aquarius6913/2014/01/25/142159" target="_blank" rel="noopener">檢查MacBook的LCD面板製造廠商（包含Air &amp; Pro Retina）</a></p><p><a href="https://apple.stackexchange.com/questions/254380/macos-mojave-invalid-active-developer-path" target="_blank" rel="noopener">macOS Mojave: invalid active developer path</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在測試螢幕RGB設定時順便測試了一下MBP2018的螢幕效能（一開始來只有看有無亮暗點），發現了在Gradient測試下居然出現了明顯的Ba
      
    
    </summary>
    
    
      <category term="螢幕" scheme="https://blog.driftkingtw.me/tags/%E8%9E%A2%E5%B9%95/"/>
    
      <category term="Macbook Pro" scheme="https://blog.driftkingtw.me/tags/Macbook-Pro/"/>
    
  </entry>
  
  <entry>
    <title>MacOS強制外接螢幕輸出RGB</title>
    <link href="https://blog.driftkingtw.me/archives/d7c7ea31.html"/>
    <id>https://blog.driftkingtw.me/archives/d7c7ea31.html</id>
    <published>2018-10-12T01:16:28.000Z</published>
    <updated>2019-10-09T15:03:47.420Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前發現Mac外接螢幕的灰階有點奇怪，感覺反而沒在Windows上順暢，於是Google了一下發現原來MacOS用HDMI接非Apple官方認可的螢幕時會當成電視用YCbCr輸出而不是RGB，所以會造成顯示器顏色上出現問題或是字體渲染不清的情況。<del>人性化的系統</del></p><p>一開始想說Retina用的字體到1080p上會比較糢糊是正常的就沒特別注意到，顏色部分因爲我的螢幕（EIZO EV2450）也有支援YCbCr 4:4:4輸入又開著TrueTone，所以平常也沒特別看出有問題。既然是電腦螢幕那還是乖乖修改成RGB輸出吧嗯！</p><h1 id="How"><a href="#How" class="headerlink" title="How"></a>How</h1><p>下圖是初始的顏色設定：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1539307427/blog/2018/10/MacOS%E5%BC%B7%E5%88%B6%E5%A4%96%E6%8E%A5%E8%9E%A2%E5%B9%95%E8%BC%B8%E5%87%BARGB/Screen_Shot_2018-10-10_at_8.56.45_PM.png" alt="顏色設定"></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1539307702/blog/2018/10/MacOS%E5%BC%B7%E5%88%B6%E5%A4%96%E6%8E%A5%E8%9E%A2%E5%B9%95%E8%BC%B8%E5%87%BARGB/Screen_Shot_2018-10-10_at_8.56.58_PM.png" alt="初始狀態"></p><p>在做之前我們需要先關閉 MacOS 的 Rootless 功能（如果會用 <code>sudo</code> 也可以不關，直接往下的步驟）</p><p>關閉 MacOS 後，按住 <code>CMD+R</code> 開機，上方Utilities選單找到Terminal開啓，輸入 <code>csrutil disable</code> ，在重新開機就可以了，做完步驟後可以再用一樣的方法開啓（改成輸入 <code>csrutil enable</code> ）。</p><ol><li><p>首先下載 <a href="https://gist.github.com/adaugherity/7435890" target="_blank" rel="noopener">Edid-Patch</a></p></li><li><p>確定外接螢幕接上 Mac</p></li><li><p>打開Terminal，進入下載 <code>edid-patch</code> 的資料夾（不會的可以直接放在家目錄），然後執行 <code>ruby patch-edid.rb</code> 。</p></li><li><p>然後會在同目錄下產生一個資料夾 <code>DisplayVenderID-xxx</code> ， 打開Finder按 <code>Cmd+Shift+G</code> 前往目錄 <code>/System/Library/Displays/Contents/Resources/Overrides</code>，把剛才產生的資料夾放進去。<br>(沒有關閉Rootless的話可以用 <code>sudo cp</code> 移動資料夾)</p></li><li><p>重開機，看一下顏色設定確認強制RGB後就完成了！（有關Rootless記得開回來）</p></li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1539307715/blog/2018/10/MacOS%E5%BC%B7%E5%88%B6%E5%A4%96%E6%8E%A5%E8%9E%A2%E5%B9%95%E8%BC%B8%E5%87%BARGB/Screen_Shot_2018-10-10_at_9.38.03_PM.png" alt="強制RGB輸出"></p><p>P.S. 我的EV2450強制RGB後發現對比很奇怪，後來螢幕上的設定看了一下原來Range Extension預設Auto，設定成關閉後，螢幕就正常了！</p><p>經過強制RGB後灰階也正常囉。</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://gist.github.com/adaugherity/7435890" target="_blank" rel="noopener">Github - adaugherity/patch-edid.rb</a></p><p><a href="https://www.mathewinkson.com/2013/03/force-rgb-mode-in-mac-os-x-to-fix-the-picture-quality-of-an-external-monitor" target="_blank" rel="noopener">Force RGB mode in Mac OS X to fix the picture quality of an external monitor</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;之前發現Mac外接螢幕的灰階有點奇怪，感覺反而沒在Windows上順暢，於是Google了一下發現原來MacOS用HDMI接非Apple官方
      
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftkingtw.me/tags/MacOS/"/>
    
      <category term="螢幕" scheme="https://blog.driftkingtw.me/tags/%E8%9E%A2%E5%B9%95/"/>
    
  </entry>
  
  <entry>
    <title>YD68藍牙機械鍵盤組裝及心得</title>
    <link href="https://blog.driftkingtw.me/archives/8dfde79b.html"/>
    <id>https://blog.driftkingtw.me/archives/8dfde79b.html</id>
    <published>2018-10-03T02:54:05.000Z</published>
    <updated>2019-10-09T15:03:51.121Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538407629/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20180929_234714_vHDR_Auto.jpg" alt="YD68 Dolch"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近想找一把60%的機械鍵盤來換掉之前的Ducky One RGB，當然Ducky One還是一把不錯的鍵盤，主要考慮到想弄個Mac/Win通用配置的，以及我桌子上東西有點多（繪圖板跟筆電）60%可以省下桌面不少空間。</p><p>#需求</p><p>這次選鍵盤的主要需求是</p><ul><li>60%</li><li>藍牙雙模</li><li>可自定鍵位</li><li>需要有正常配置的方向鍵（Win下需要，之前用過Shift當up的很不習慣）</li><li>希望除了60%能有多幾個按鍵，繪圖時Del之類可以不用組合鍵就能完成</li></ul><p>翻找了一下發現YD68是目前最接近我需求的，而且接口是Type-C，不過比較可惜的是藍牙只有3.0（有看到GH60 BLE4.0的），也支援單色背光跟底部有RGB燈，不過這次不打算搭配透光鍵帽所以背光功能就先放一邊了。</p><p>以下是收到的YD68套件，PCB本體、腳墊螺絲、定位版、塑膠外殼、衛星軸、另購的櫻桃軸（青與茶）、電池（我買的時候賣家少寄）。</p><h1 id="過程"><a href="#過程" class="headerlink" title="過程"></a>過程</h1><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538407627/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20180929_195145_vHDR_On.jpg" alt="YD68零件"></p><p>鍵盤軸體佈局。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538407624/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20180929_212316_vHDR_Auto.jpg" alt="混軸配置"></p><p>記得要先裝衛星軸。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538407634/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20180929_224326_vHDR_Auto.jpg" alt="平衡軸"></p><p>PCB背面，把軸體焊上。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538407623/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20180929_220021_vHDR_Auto.jpg" alt="焊接"></p><p>接下來準備加上電池。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538543857/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20181003_124601_vHDR_Auto.jpg" alt="鋰電池"></p><p>要先把塑膠殼的加強筋剪掉一部分，先量好長度，剪下去之後再直接推斷即可。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538543856/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20181003_124824_vHDR_Auto.jpg" alt="剪裁電池所需空間"></p><p>最後在旁邊加上緩衝，將電池黏上。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538543857/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20181003_125641_vHDR_Auto.jpg" alt="固定電池及緩衝"></p><p>上鍵帽！完成！</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538407629/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20180929_234714_vHDR_Auto.jpg" alt="完成"></p><p>這次用的是KBDfans買的Dolch配色PBT鍵帽（OEM高度），市面上看到的好像大部分Dolch都是原廠高度，比較喜歡OEM，覺得原廠高度太平了。不過感覺這個ESC字體顏色可以再深一點更好，還有Shift的圖案感覺跟字體有些不搭。</p><p>因爲是要給Mac用的，所以順便買了Mac的增補鍵，（補充下YD68的一些規格可以跟TADA68規格共用），也是除了字體不太統一（我說怎麽連Opt跟Cmd都能不太一樣XDD），其他基本上都不錯。</p><p>刷鍵位的線上工具在這裡 <a href="http://ydkb.io/" target="_blank" rel="noopener">http://ydkb.io/</a> ，網站上也有教學就不細說了。目前RGB LED的顏色控制我自己試不太出來，不確定是Bug或是我操作太差，有後續心得再回來補充。</p><p>藍牙部分連接穩定度與雙模切換速度都還不錯，不過有少數時候會稍微明顯一些的Lag不確定是我這邊干擾多的原因還是怎樣，可能還要多測試才能確定。</p><p>關於在Win跟Mac之間切換，我建議鍵盤直接按照Win的設定，然後到Mac內對調Cmd與Opt的位置，這麼做的原因是因爲改Mac鍵位會比Win上要來的簡單很多。</p><p>（另外我也順便把Ctrl跟Caps Lock對調了，類似HHKB配置）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538485581/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/Screen_Shot_2018-10-02_at_9.04.23_PM.png" alt="MacOS鍵位設定"></p><p>同場加映鍵盤包！感謝觀看！</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538407632/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E9%8D%B5%E7%9B%A4%E7%B5%84%E8%A3%9D-%E5%BF%83%E5%BE%97/P_20180930_001809_vHDR_Auto.jpg" alt="同場加映鍵盤包"></p><p><em>目前遇到了點小問題，不確定是個案或是PCB設計問題，R1那排有機率發生連點，原因還在調查中，想入坑的可以多考慮一下（國外跟對岸都沒看到有相關案例）</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538407629/blog/2018/10/YD68-%E8%97%8D%E7%89%99%E6%A9%9F%E6%A2%B0%E
      
    
    </summary>
    
    
      <category term="Keyboard" scheme="https://blog.driftkingtw.me/tags/Keyboard/"/>
    
      <category term="DIY" scheme="https://blog.driftkingtw.me/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>Brainwavz B2 BeatsX W1晶片無線改裝</title>
    <link href="https://blog.driftkingtw.me/archives/5ae59dc6.html"/>
    <id>https://blog.driftkingtw.me/archives/5ae59dc6.html</id>
    <published>2018-09-30T15:57:33.000Z</published>
    <updated>2019-10-09T15:03:38.632Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538323439/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_233734_vHDR_Auto.jpg" alt="Brainwavz B2 Wireless"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前陣子買了Airpods來玩玩，發現Apple的W1晶片真心強大, 連接方便穩定, 延遲非常低(可以看影片的那種), 續航力優秀 <del>不過音質就只能說比Earpods好一點點，然後貴了五倍價格</del>。</p><p>Beats被Apple收購後他們的無線耳機也都使用了W1晶片，聲音也提升了(說好當然CP值也是沒多高，不過至少不是只會發出聲音的髮箍(笑)，之前BTS買電腦時剛好送了Solo 3 Wireless，試聽了一下聲音真是跌破眼鏡 <del>其實是之前太差</del>，靈光一閃想到如果把W1晶片改裝到一般耳機上或許能解決平常市面上大多數藍芽耳機續航&amp;音質&amp;穩定延遲的問題。</p><p>Google了一下相關資料，果然Head-Fi上有人也有這個想法並且實踐成功了，他用的是BeatsX，後來在考慮價格與改裝方便性上的確是BeatsX最適合做入耳式的改造，於是我也去收了個二手的BeatsX。</p><p><strong><em>利申一下我不算是多專業的燒友，以前稍微玩過而已，現在已經少碰。聲音相關感覺因人而異本文章僅提供改裝技術交流</em></strong></p><h1 id="過程紀錄"><a href="#過程紀錄" class="headerlink" title="過程紀錄"></a>過程紀錄</h1><p>首先確認好BeatsX能發出聲音後，從音控後方爽快的剪下去吧！</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/a_90/v1538323416/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_184454_vHDR_Auto.jpg" alt="感覺好像要斷頭"></p><p><del>破壞東西就式特別的爽</del></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538323418/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_184650_vHDR_Auto.jpg" alt="一刀兩斷"></p><p>這次要變成無線的是伴我多年的Brainwavz B2(不知道的童鞋，這隻聲音跟DBA-02一樣，同一家代工廠)。</p><p>很久以前因為線材掛了所以我把它做成可換線式的(MMCX接口)，想法很簡單，BeatsX的W1晶片與線控區後面先接上CM插座-&gt;自製CM公 to MMCX公線材-&gt;B2單體(MMCX母)，有人可能想問為何中間要多一段CM，主要是希望以後能夠做擴充(CMtoCM)這樣兩種都能使用，至於稍微影響的音質，藍芽耳機要求的是方便不是嗎lol?</p><p>剪開麵條線材後發現裡面有五條漆包線+兩條強化抗拉線材在一旁，不是很好處理所以撥線長度大概要1~1.5CM會比較好操作。</p><p>線材定義在測量過後發現在最外兩側的分別是紅色信號輸入跟黑色GND(不算強化線材)，中間三條應該是線控的，不過兩邊都有可以不理會直接剪掉。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/a_90/v1538323429/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_213245_vHDR_Auto.jpg" alt="BeatX麵條線內線材"></p><p>接著焊接上其他測試用單體試試看有沒有接錯，聲音是否正常。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538323426/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_195612_vHDR_Auto.jpg" alt="發聲測試"></p><p>焊上CM母座。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/a_0/v1538323433/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_213849_vHDR_Auto.jpg" alt="CM母座"></p><p>CM公插。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538323436/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_215819_vHDR_Auto.jpg" alt="CM插針"></p><p>同場加映幫朋友改的CM公插，太久沒焊了，有點傷眼sry囉。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538323427/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_211750_vHDR_Auto.jpg" alt="CM插針"></p><p>完成！</p><p>眼尖的童鞋可能發現了，由於發生了點小插曲所以之前買的MMCX插針沒法用，只好把一條幾年前去Oyaide買材料的自製線拆了撐一下，到時候在幫他買個殼QwQ。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538323439/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_233734_vHDR_Auto.jpg" alt="Brainwavz B2 Wireless!"></p><p>幫朋友改的CM版BeatsX</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538325406/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87%E7%84%A1%E7%B7%9A%E6%94%B9%E8%A3%9D/P_20180930_233933_vHDR_Auto.jpg" alt="CM插針版"></p><h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><p>聲音挺不錯的，不過也是不建議給阻抗大或不好推的耳機使用，除了耗電外可能聲音也推不太開。</p><p>有W1晶片，續航延遲都比市面上絕大多數的藍芽耳機好不少，此改造又兼顧了一定的音質，可謂大成功啊！</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://www.head-fi.org/threads/apple-beats-x-mod-for-iem.844435/" target="_blank" rel="noopener">Head-Fi - Apple Beats X mod for IEM</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1538323439/blog/2018/09/30/Brainwavz-B2-BeatsX-W1%E6%99%B6%E7%89%87
      
    
    </summary>
    
    
      <category term="DIY" scheme="https://blog.driftkingtw.me/tags/DIY/"/>
    
      <category term="無線耳機" scheme="https://blog.driftkingtw.me/tags/%E7%84%A1%E7%B7%9A%E8%80%B3%E6%A9%9F/"/>
    
  </entry>
  
  <entry>
    <title>Laravel Linux 佈署問題筆記</title>
    <link href="https://blog.driftkingtw.me/archives/91e1ab9c.html"/>
    <id>https://blog.driftkingtw.me/archives/91e1ab9c.html</id>
    <published>2018-07-09T16:49:57.000Z</published>
    <updated>2019-10-23T05:49:01.581Z</updated>
    
    <content type="html"><![CDATA[<p>整理了自己在佈署Laravel專案到Server時(Linux)所遇到的一些問題處理方式。<br>環境若沒特別說明就代表使用的OS為Ubuntu</p><h3 id="Q1-如何設定Laravel-env檔的APP-KEY"><a href="#Q1-如何設定Laravel-env檔的APP-KEY" class="headerlink" title="Q1. 如何設定Laravel .env檔的APP_KEY?"></a>Q1. 如何設定Laravel .env檔的APP_KEY?</h3><p><strong>Ans：</strong>在專案跟目錄執行 <code>php artisan key:generate</code></p><h3 id="Q2-如何從Github上Clone私人專案到網站目錄"><a href="#Q2-如何從Github上Clone私人專案到網站目錄" class="headerlink" title="Q2. 如何從Github上Clone私人專案到網站目錄"></a>Q2. 如何從Github上Clone私人專案到網站目錄</h3><p><strong>Ans：</strong> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://username@github.com/username/repo</span><br></pre></td></tr></table></figure><p>其中<code>username</code> 為Github帳號名稱，<code>repo</code> 為專案名稱。</p><h3 id="Q3-在瀏覽器開啟網頁時出現以下錯誤訊息"><a href="#Q3-在瀏覽器開啟網頁時出現以下錯誤訊息" class="headerlink" title="Q3. 在瀏覽器開啟網頁時出現以下錯誤訊息"></a>Q3. 在瀏覽器開啟網頁時出現以下錯誤訊息</h3><p><code>Error in exception handler: The stream or file &quot;/var/www/laravel/app/storage/logs/laravel.log&quot; could not be opened: failed to open stream: Permission denie</code></p><p><strong>Ans：( Apache )</strong> </p><p>目錄權限不足，在專案目錄執行 <code>sudo chmod -R 777 storage</code> (注意，此方法較不安全)</p><p>安全的做法是把不同的權限分開，使用ACL(Access Control List)設定</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// nginx = web server user</span><br><span class="line">// systemuser = your local user which you use to login via ssh</span><br><span class="line">sudo setfacl -Rdm u:nginx:rwx,u:systemuser:rwx storage</span><br><span class="line">sudo setfacl -Rm u:nginx:rwx,u:systemuser:rwx storage</span><br></pre></td></tr></table></figure><p>如果沒有ACL的設定方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chgrp -R www-data storage bootstrap/cache</span><br><span class="line">sudo chmod -R ug+rwx storage bootstrap/cache</span><br></pre></td></tr></table></figure><p><strong>Ans：( Nginx )</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown USERNAME:USERNAME /var/www/html/SITE_FOLDER</span><br></pre></td></tr></table></figure><h3 id="Q4-如何切換不同的PHP版本-Apache"><a href="#Q4-如何切換不同的PHP版本-Apache" class="headerlink" title="Q4. 如何切換不同的PHP版本 ( Apache )"></a>Q4. 如何切換不同的PHP版本 ( Apache )</h3><p><strong>Ans：</strong> 安裝好需要的版本後執行以下指令 (範例為 7.0 =&gt; 7.2)</p><p>停用先前的PHP版本(重要)<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2dismod php7.0</span><br></pre></td></tr></table></figure></p><p>啟動所需的PHP版本<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod php7.2</span><br></pre></td></tr></table></figure></p><p>重啟Apache2服務<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service apache2 restart</span><br></pre></td></tr></table></figure></p><p>( Nginx )</p><p>設定預設PHP版本<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-alternatives --set php /usr/bin/php7.0</span><br></pre></td></tr></table></figure></p><h3 id="Q5-首頁能夠正常顯示，但切換不同的-Get-路徑顯示-404-Not-Found-Ex-www-domainname-com-login"><a href="#Q5-首頁能夠正常顯示，但切換不同的-Get-路徑顯示-404-Not-Found-Ex-www-domainname-com-login" class="headerlink" title="Q5. 首頁能夠正常顯示，但切換不同的 Get 路徑顯示 404 Not Found (Ex: www.domainname.com/login)"></a>Q5. 首頁能夠正常顯示，但切換不同的 Get 路徑顯示 404 Not Found (Ex: www.domainname.com/login)</h3><p><strong>Ans：( Apache )</strong></p><p>啟動Rewrite模組</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo a2enmod rewrite</span><br></pre></td></tr></table></figure><p>重啟Apache2服務</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service apache2 restart</span><br></pre></td></tr></table></figure><p>重啟後還是顯示404錯誤，使用文字編輯器開啟 <code>000-default.conf</code> 設定檔 (個人習慣使用vim)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apache2/sites-available/000-default.conf</span><br></pre></td></tr></table></figure><p>在 <code>DocumentRoot /var/www/html</code> 下方新增以下設定</p><figure class="highlight apacheconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;Directory /var/www/html&gt;</span></span><br><span class="line">  <span class="attribute">AllowOverride</span> <span class="literal">All</span></span><br><span class="line"><span class="section">&lt;/Directory&gt;</span></span><br></pre></td></tr></table></figure><p>儲存設定後，重啟Apache2服務，這時就能正常顯示 GET 路徑了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service apache2 restart</span><br></pre></td></tr></table></figure><p><strong>Ans：( Nginx )</strong></p><p>以文字編輯器下列設定檔 <code>/etc/nginx/sites-enabled/default</code> 新增下列設定</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重整Nginx服務</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><h3 id="Q6-Bitnami-LAMP-Stack-更換DocumentRoot目錄？"><a href="#Q6-Bitnami-LAMP-Stack-更換DocumentRoot目錄？" class="headerlink" title="Q6. Bitnami LAMP Stack 更換DocumentRoot目錄？"></a>Q6. Bitnami LAMP Stack 更換DocumentRoot目錄？</h3><p><strong>Ans：</strong></p><p>更改以下檔案的DocumentRoot，80與443(有SSL的話)。</p><p><code>YOUR_INSTALLATION_DIRECTORY/apache2/conf/bitnami/bitnami.conf</code></p><p>重啓Apache</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /opt/bitnami/ctlscript.sh restart apache</span><br></pre></td></tr></table></figure><h3 id="Q7-上傳檔案移動到只訂資料夾時出現權限不足"><a href="#Q7-上傳檔案移動到只訂資料夾時出現權限不足" class="headerlink" title="Q7. 上傳檔案移動到只訂資料夾時出現權限不足"></a>Q7. 上傳檔案移動到只訂資料夾時出現權限不足</h3><p>單純使用chmod無效(由於改變的權限爲user非操作移動的www-data)，需要使用以下方法給予權限。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R www-data:www-data /path/to/folder</span><br></pre></td></tr></table></figure><h3 id="Q8-利用-Laravel-Installer-新增-Laravel-專案-MacOS"><a href="#Q8-利用-Laravel-Installer-新增-Laravel-專案-MacOS" class="headerlink" title="Q8. 利用 Laravel Installer 新增 Laravel 專案 [MacOS]"></a>Q8. 利用 Laravel Installer 新增 Laravel 專案 [MacOS]</h3><p>MacOS 環境變數設定：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=~/.composer/vendor/bin:$PATH</span><br></pre></td></tr></table></figure><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://stackoverflow.com/questions/2505096/cloning-a-private-github-repo" target="_blank" rel="noopener">Cloning a private Github repo</a></p><p><a href="https://laracasts.com/discuss/channels/general-discussion/laravel-framework-file-permission-security" target="_blank" rel="noopener">Laravel framework file permission - Security</a></p><p><a href="https://www.youtube.com/watch?v=7CatEn5IAlo" target="_blank" rel="noopener">Laravel 5.4 problem - Wrong Route (Not Found) on Ubuntu 16.04</a></p><p><a href="https://www.digitalocean.com/community/tutorials/how-to-deploy-a-laravel-application-with-nginx-on-ubuntu-16-04" target="_blank" rel="noopener">How To Deploy a Laravel Application with Nginx on Ubuntu 16.04</a></p><p><a href="https://thishosting.rocks/install-php-on-ubuntu/" target="_blank" rel="noopener">How to install PHP (7 or 7.2) on Ubuntu</a></p><p><a href="https://community.bitnami.com/t/changes-to-apache-httpd-conf-not-applying-on-wamp-stack/26224" target="_blank" rel="noopener">Changes to Apache httpd.conf not applying on WAMP stack</a></p><p><a href="https://stackoverflow.com/questions/47337374/unable-to-write-in-directory-laravel" target="_blank" rel="noopener">Unable to write in directory Laravel</a></p><p><a href="https://adon988.logdown.com/posts/7809799-mac-path-environment-variables" target="_blank" rel="noopener">Mac $PATH 環境變量設置及查詢</a></p><hr><p>日後遇到其他問題會再持續更新</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;整理了自己在佈署Laravel專案到Server時(Linux)所遇到的一些問題處理方式。&lt;br&gt;環境若沒特別說明就代表使用的OS為Ubuntu&lt;/p&gt;
&lt;h3 id=&quot;Q1-如何設定Laravel-env檔的APP-KEY&quot;&gt;&lt;a href=&quot;#Q1-如何設定Larave
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://blog.driftkingtw.me/tags/PHP/"/>
    
      <category term="Laravel" scheme="https://blog.driftkingtw.me/tags/Laravel/"/>
    
      <category term="Linux" scheme="https://blog.driftkingtw.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Laravel 產生簡易XML筆記</title>
    <link href="https://blog.driftkingtw.me/archives/fe7b8274.html"/>
    <id>https://blog.driftkingtw.me/archives/fe7b8274.html</id>
    <published>2018-06-26T08:36:12.000Z</published>
    <updated>2018-10-03T01:52:43.657Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近在寫串接功能時，遇到需要使用Laravel動態產生XML的功能，完成後做個筆記，除此之外也能拿來產生網站組織架構的Sitemap，讓Google等搜尋引擎能夠更有效率的爬你的網站頁面。</p><h1 id="How"><a href="#How" class="headerlink" title="How"></a>How</h1><p>假設要使用Laravel產生如下的簡易產品清單XML：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">products</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Product</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Name</span>&gt;</span>Product_1<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Description</span>&gt;</span>Product_Description<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">URL</span>&gt;</span>https://mywebsite.com/Product_URL/<span class="tag">&lt;/<span class="name">URL</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Price</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">Price</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Product</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Product</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Name</span>&gt;</span>Product_2<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Description</span>&gt;</span>Product_Description<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">URL</span>&gt;</span>https://mywebsite.com/Product_URL/<span class="tag">&lt;/<span class="name">URL</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Price</span>&gt;</span>1500<span class="tag">&lt;/<span class="name">Price</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Product</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">products</span>&gt;</span></span><br></pre></td></tr></table></figure><p>首先在 <code>resources/views</code> 裡建立一個 <code>product_list.blade.php</code> 視圖，用來顯示XML的內容 (“product_list”名稱可自訂)。</p><p>內容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">products</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 利用foreach印出所有產品資訊 --&gt;</span></span><br><span class="line">    @foreach($products as $product)</span><br><span class="line">    <span class="tag">&lt;<span class="name">Product</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Name</span>&gt;</span>&#123;&#123; $product-&gt;name &#125;&#125;<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Description</span>&gt;</span>&#123;&#123; $product-&gt;description &#125;&#125;<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 利用 Request::root() 取得網站URL --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">URL</span>&gt;</span>&#123;&#123; Request::root() &#125;&#125;/product/&#123;&#123; $product-&gt;id &#125;&#125;<span class="tag">&lt;/<span class="name">URL</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Price</span>&gt;</span>&#123;&#123; $product-&gt;price &#125;&#125;<span class="tag">&lt;/<span class="name">Price</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Product</span>&gt;</span></span><br><span class="line">    @endforeach</span><br><span class="line"><span class="tag">&lt;/<span class="name">products</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然後建立一個Controller(名稱自訂，這裡範例使用ProductController，跟處理顯示商品同樣的控制器)。<br>在Controller裡建立Function用來取得資料並傳送給View裡的視圖顯示。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">productList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 取得商品資訊, 並以id作降冪排序</span></span><br><span class="line">    $products = Product::orderBy(<span class="string">'id'</span>, <span class="string">'DESC'</span>)-&gt;get();</span><br><span class="line">    <span class="comment">// 將資料交給product_list.blade.php產生XML內容</span></span><br><span class="line">    <span class="keyword">return</span> response()-&gt;view(<span class="string">'product_list'</span>, compact(<span class="string">'products'</span>))-&gt;header(<span class="string">'Content-Type'</span>, <span class="string">'text/xml'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後在<code>route/web.php</code>裡加上路徑<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'/product_list.xml'</span>, <span class="string">'ProductController@productList'</span>);</span><br></pre></td></tr></table></figure></p><p>到這邊大功告成，打上網域名+<code>/product_list.xml</code>就可以查看XML所產生的XML了！</p><h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>如果像此方法利用Blade模板產生XML要注意在PHP的<code>php.ini</code> 設定中 <strong><em>Short Open Tag (&lt;?)</em></strong> 選項要關閉，如果必須打開此選項的話可以改用以下寫法來產生XML Header：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">'&lt;?xml version="1.0" encoding="UTF-8"?&gt;'</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://laraget.com/blog/generate-a-simple-xml-sitemap-using-laravel" target="_blank" rel="noopener">Generate a Simple XML Sitemap Using Laravel</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近在寫串接功能時，遇到需要使用Laravel動態產生XML的功能，完成後做個筆記，除此之外也能拿來產生網站組織架構的Sitemap，讓Go
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://blog.driftkingtw.me/tags/PHP/"/>
    
      <category term="Laravel" scheme="https://blog.driftkingtw.me/tags/Laravel/"/>
    
      <category term="XML" scheme="https://blog.driftkingtw.me/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>iPad Pro 繪圖心得 (含其他繪圖螢幕簡易比較)</title>
    <link href="https://blog.driftkingtw.me/archives/b142110b.html"/>
    <id>https://blog.driftkingtw.me/archives/b142110b.html</id>
    <published>2018-05-23T14:37:36.000Z</published>
    <updated>2019-10-09T15:01:42.732Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527571604/blog/2018/05/25/iPad_Pro_繪圖心得/Fur_chan_w_ipad.jpg" alt="毛醬 w/ iPad"></p><p>iPad Pro入手也大概三個多月了，稍微詳細寫一下在繪圖方面的心得。<br>先聲明一下畫圖只是我的業餘興趣，而且軟硬體使用上因人而異，所以內容僅供參考哦(<em>´▽`</em>)</p><ul><li><strong><a href="#硬體">硬體</a></strong></li><li><strong><a href="#軟體">軟體</a></strong></li><li><strong><a href="#總結">總結</a></strong></li></ul><h2 id="硬體"><a href="#硬體" class="headerlink" title="硬體"></a>硬體</h2><p>P.S 在買iPad到寫這篇心得中間，Apple又推出了iPad 2018，讓iPad Pro不再是唯一支持Apple Pencil的裝置了，在硬體篇後面會提到一些差異。</p><p>硬體的部分，2017 iPad Pro 10.5”，A10X處理器在目前相關使用上都算相當順暢，畢竟4K影片剪輯都沒問題，不過在跑特效跟做些大量圖層變形的速度上當然還是比不上桌上型CPU，RAM 4G其實在iOS上用起來挺夠的，圖層開到上百(Clip Studio Paint, 畫布A4 350DPI)基本上都還是能跑，不過如果這時還要多選幾個圖層做特效或變形的話就會非常吃力(整個卡住等一陣子)，所以如果需要畫比較精細圖層又開多的話還是電腦畫起來舒服些。</p><p>BTW iOS11的多視窗跟Dock真的非常好用(雖然iOS11一開始bug還真不少)，iPhone上可能沒什麼感覺，不過在iPad上能大幅提升工作效率，畫圖弄個懸浮視窗放參考圖簡直不要太方便XD (不過還是有軟體尚未支援，這就得等開發者更新了)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527185967/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0303.jpg" alt="iOS11 多工視窗"></p><p>螢幕的部分Retina(2224 x 1668, 264ppi) + P3 廣色域顯示效果自然不再話下，加上抗反射塗層降低螢幕反光，在大部分情況下還是能清楚看到螢幕(拿普通的iPad螢幕去比一下就很明顯了)，不過螢幕畢竟是玻璃做的，Apple Pencil的筆尖是塑膠，可以想見在玻璃上寫字畫圖真的挺滑的，貼霧面貼雖然可以增進摩擦力不過也會讓顯示效果下降，這部分可能要依照個人喜好做抉擇了，我個人還能夠適應咕溜的感覺，不過也是看過有人因為這樣畫不下去的XD</p><p>另外值得一提的就是ProMotion，在需要的時候會提升FPS到120Hz，所以Pro在滑動介面的時候會特別順暢，當然也讓繪圖筆跡能夠更及時的跟上筆尖，不過其實一般畫圖的速度是察覺不太到的(跟60FPS螢幕比較)<br>TrueTone即時調整色調這部分跟繪圖相關度並不大就不另外多說了。</p><p>電池續航力方面，中間亮度，平時使用畫畫圖一天可以差不多至少8~10小時左右，算是挺夠了。<br><del>你的筆可能沒電的比較快，不過可以插上iPad長ㄐㄐ15秒就能續命30分鐘，不成問題。</del></p><p><strong>Apple Pencil</strong></p><p>如同官網所廣告的，還真的是一隻魔法棒XD，寫下去真的有”Pencil”的感覺(當然除了紙的質感差了十萬八千里，玻璃很滑)。壓力感應等級普通，不過算是夠用了，靈敏度也相當不錯，而且傾斜感應意外的好，我用起來的感覺已經超越Wacom了(不過我覺得可能是軟體跟系統的問題讓Wacom的傾斜感應用起來不是那麼順手)</p><p>再來就是準確度，我只能說這是我用過最準確的螢幕繪圖筆(Cintiq的部分我會在下方對比提到)，基本畫下去就是再你想的那個位置，許多螢幕繪圖的問題就是準確度不是很完美，總會覺得下筆位置稍微落差或是接近螢幕邊緣會為一的更嚴重，不過對比Cintiq系列來說，缺點可能就是需要碰到板子才畫下去，Cintiq能在筆靠近螢幕時就顯示出筆刷的圓圈，能夠清楚知道落筆點跟筆刷大小。</p><p>外型就是水果風，重量OK好拿，電池筆續航算還可以，缺點估計是比一般的筆長了點，還有筆芯不像Wacom多元(至於充電方式我已經不想吐槽了)。</p><p><strong>對比一般繪圖板Wacom Intuos Pro (2017)</strong></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527186446/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0304.jpg" alt="Wacom Intuos Pro"></p><p>這塊Intuos Pro是非螢幕繪圖板裡面我最喜歡的，<del>目前顏值最高的板板</del>，握筆相當舒適，還有那個8192的黑科技壓感，<del>或是選擇Paper配件就可以獲得把一般紙張書寫轉成數位的更黑科技，跟那個摸起來很舒服但其實對我根本沒卵用的圓盤</del>，板子的表面寫起來阻力適中也不滑控筆很穩，如果是和我一樣很習慣不看筆尖畫圖的真的是目前最好的選擇了。<del>Wacom大法好!</del></p><p>(不過吐槽一下Wacom你把無線連線方式從2.4GHz改成Bluetooth之後感覺更lag了，雖然上次更新韌體有改善可是還是…)</p><p>Wacom的筆我基本上沒話說，沒電池拿再久都不累，按鍵好按握感舒適(入門Intuos的筆我覺得沒很舒服就是)，<del>還有筆尾那個裝飾性質大於實用性的橡皮擦</del>，壓感一流(同壓感不同廠牌裡面用起來還是覺得Wacom最好)，除了傾斜感測輸Apple Pencil外基本上沒什麼問題了。<del>還有那個握套很容易留痕跡就是，雖然能換。</del></p><p><strong>對比Wacom Cintiq Pro / MobileStudio Pro</strong></p><p>Cintiq系列我只有在Wacom展示間用過，就簡單說下試用心得。</p><p><del>恩…手邊拍的Cintiq剛好就只有這張(?</del></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527191563/blog/2018/05/25/iPad_Pro_繪圖心得/P_20170806_213046.jpg" alt="藍屏中的Cintiq..."></p><p>先講Cintiq Pro，他需要外接主機/筆電才能夠畫圖，相較iPad的優點除了螢幕大小外就是上述提到的落筆能看到範圍圓圈，<del>iPad都要下筆才發現筆刷切太大</del>，還有壓感很棒，Wacom的優良傳統。<br>缺點沒法獨立使用，畫久了螢幕挺熱的…手放在上面不是很舒服(iPad頂多溫溫的)，最大的問題是由於螢幕不像iPad Pro的貼合螢幕…所以螢幕跟外層玻璃有一小層間隙，所以看的角度不是很正的話下筆會看起來稍微偏掉(其實位置沒偏)，撇除解析度跟P3的差距外，剩下的就是反應速度稍差(感覺還是軟體問題導致，不過Pro的120Hz應該也是關鍵之一)。</p><p>MobileStudio Pro基本就是繪圖平板，優點的話就是跑Windows系統，各種軟體支援，跟電腦操作基本上一樣,效能比iPad好(當然價格也是爆炸貴)，其他優點基本上跟Cintiq差不多，缺點是那螢幕又更燙了，後面還有個CPU在加熱，硬體效能麻…就是還可以，不過真的會很燙，其他問題跟上述一樣，差在可以獨立使用不必依賴主機。</p><p>跟iPad比起來，Wacom的繪圖螢幕是相對更專業<del>很燙</del>的工具選擇，不過我覺得還是有一定的缺點(尤其MobileStudio還聽說不少故障的問題…)，我個人是用Intuos更舒服習慣就是…除了打稿有螢幕更直覺會更快外其實對我而言效率並沒有特別顯著的提升。</p><p><strong>對比iPad 2018</strong></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527583585/blog/2018/05/25/iPad_Pro_繪圖心得/ipad-wifi-select-spacegray-201803_GEO_TW.png" alt="iPad 2018"></p><p>圖片取自: <a href="https://www.apple.com/tw/shop/buy-ipad/ipad-9-7" target="_blank" rel="noopener">https://www.apple.com/tw/shop/buy-ipad/ipad-9-7</a></p><p>Apple前陣子推出的教育市場面向的新入門款iPad 2018，基本上就是2017 iPad升級了處理器到A10、支援了Apple Pencil，然後價格降到差不多一萬台幣起跳，個人認為有支援Apple Pencil的話這價格其實挺值得購買的，看了不少之前使用Pro的畫家/設計師跑去用2018的心得都是，除了螢幕(沒有P3沒有貼合螢幕沒有抗反射塗層沒有120Hz)，硬體(2G RAM)這些缺點外，對繪圖來說是非常不錯的選擇(而且價格只有Pro的一半左右，不過還是要算上還要另購Apple Pencil的資金)。</p><p>主要缺點沒有貼合螢幕所以下筆沒Pro那麼的爽(玻璃跟螢幕有間隙)，不過體驗看上去還是相當不錯，塗塗鴉的話RAM影響也不大，可能就是多工模式下只有單一視窗能夠使用比較可惜。</p><p>這價格對學生黨也是一大福音，當然有錢或想認真玩就上Pro，相信拿到之後不會後悔的(單指繪圖方面，目前除了繪圖跟當輕文書筆電外我認為還沒有必要上Pro的理由)。</p><p>不過這個時間點，Apple可能要出iPad Pro 2了，可以在觀望看看。</p><p><strong>對比其他有繪圖功能的螢幕</strong></p><p>像是Surface、Pixelbook之類的有壓感筆的平板筆電等，Pixelbook我借過朋友的試用過(軟體Sketchbook)，下筆算挺準的，不過就如同其他非Wacom的繪圖螢幕一樣明顯畫出來的線條跟不太上筆尖，還能夠畫不過可能需要習慣。</p><p>壓感部分還算及格，軟體的部分可能比較頭痛得灌Linux才有一些比較方便的軟體(而且支援性可能有問題)。至於Surface的話我沒實際用過，不過在Youtube的很多測試影片中明顯延遲是最高的(雖然數據上寫起來延遲比Apple還低…)，而且常看到各種下筆不準的問題，用起來可能不是很舒服。優點的話，Windows的繪圖軟體相當成熟了，而且做為筆電也更方便處理各項工作，希望微軟以後能改善這個產品，我個人認為挺有潛力的XD</p><p><strong>硬體比較</strong></p><p>比較的部分單純是我”個人的感覺”，不管效能等數據而是直接操作的第一感想(Other代表其餘上述有繪圖螢幕的產品)</p><table><thead><tr><th>測試項目</th><th>比較</th></tr></thead><tbody><tr><td><strong>壓感</strong></td><td>Cintiq系列 &gt;&gt; iPad Pro = iPad 2018 &gt; Other</td></tr><tr><td><strong>反應速度</strong></td><td>iPad Pro ≥ iPad 2018 &gt; Cintiq系列 &gt;&gt;&gt; Other</td></tr><tr><td><strong>攜帶方便性</strong></td><td>iPad Pro = iPad 2018 &gt;&gt; MobileStudio ≌ Other (Cintiq Pro單純螢幕無法單獨使用)</td></tr></tbody></table><p>價格部分可能就看自己能夠負擔接受的狀況，由於有些產品定位不一樣價格自然不同所以就不多做比較。</p><h2 id="軟體"><a href="#軟體" class="headerlink" title="軟體"></a>軟體</h2><p>當然硬體在好沒有好的軟體幫助，也只是中看不中用。軟體的部分主要就寫寫iOS上的繪圖軟體在Pro上的表現，畢竟Windows上的繪圖軟體大家應該都很熟了，<del>就算不熟網路上也一卡車的資料能找</del>。</p><p>以下是我試玩過的幾個繪圖APP，硬體都是Apple Pencil + iPad Pro 10.5”<br>目前還沒很多時間把每個APP都摸得很透徹，基本只說些基本的心得。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527338240/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0306.jpg" alt="繪圖APP"></p><ol><li>CLIP STUDIO PAINT for manga</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527338240/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0307.jpg" alt="CLIP STUDIO PAINT for manga"></p><p>價格<br>PRO: NTD 140/每月　NTD 780/每年  (每月NTD 65)<br>EX: NTD 270/每月　NTD 2,090/每年 (每月NTD 174)</p><p>CSP應該是日系插畫跟漫畫市占最高的軟體了<del>(至少官網是這麼說的)</del>，相信不少畫手都在PC上都用過，三不五時的特價也讓不少用SAI的跳槽了，<del>SAI:你怎麼這麼熟練阿</del>。畢竟除了一些筆刷上的設定跟效能優勢來說，CSP的功能跟資源還是更豐富些。</p><p>大約在去年(2017)CSP移植到了iOS上，對，完完全全的移植，除了各種好用的功能外連UI都原封不動的移植了XD，所以它的UI整個就是把桌面的樣子直接縮到iPad的小螢幕上，挺擠的又小，點擊不是很方便…</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527574271/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0316.png" alt="CSP介面"></p><p>雖然在10.5吋螢幕上擠了點，不過他們對於鍵盤快捷鍵也是完全從PC版搬過來，所以接個藍芽鍵盤就可以用鍵盤操作畫起來也比較快，是目前用過的APP裡對鍵盤支援度最好的，<del>不過可想而知帶出門畫世界麻煩</del>。其他功能都跟桌面一樣了就不多說。手勢方面有支援(雙指回上一步等)，也有防掌觸(要在設定中設定)，Apple Pencil的支援度跟順暢度也完全沒問題。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527577133/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0317.png" alt="CSP繪圖"></p><p>除了UI外，功能上絕對是App Store裡面繪圖軟體數一數二的，另外又有大量的社群資源(筆刷,素材, etc)，熟悉PC軟體的話一定能快速的上手，<del>畢竟就是完全一模一樣</del>。現在也支援了各種素材筆刷作品同步的功能，只是目前UX設計還不是很好，有些地方讓人摸不著頭緒，希望之後會改善，<del>我甚至有遇到作品同步不了的</del>，同步速度也很慢。</p><p>再來就是月費可能很多人不喜歡, 不過一開始訂閱EX版的話有贈送6個月的試用期<del>還算佛心</del>，之後可以選擇要PRO版或EX(視個人需求)訂閱，年繳比較便宜(後來更新的，不然原本只有EX版月訂真的很貴)，不過應該很多人還是希望能夠買斷就是，<del>看看那可憐的3.7評價</del>。PRO的年繳價格我覺得還能接受就是，畢竟人家也是要賺錢的XD</p><ol><li>MediBang Paint for iPad</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527338240/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0311.jpg" alt="MediBang Paint for iPad"></p><p>價格: 免費</p><p>知名的免費繪圖軟體，優點就是各平台都有，<strong>而且都免費!</strong></p><p>功能上用起來也算挺齊全的，漫畫還沒畫過不確定，算是個資源跟功能稍微少些的CSP，UI設計上有針對隨身觸控裝置優化過所以不會像CSP那麼難按，對於手勢支援相當良好，也可以開防掌觸，只是對於鍵盤快捷鍵就沒有可以設定的地方，只能用他預設的(或是我沒找到?) 整體操作上流暢沒什麼毛病。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527577726/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0318.png" alt="MediBang Paint繪圖"></p><p>自訂筆刷等也跟桌面版一樣，沒什麼限制，開多圖層效能也不太會掉，對於那些不想花月費買CSP的，MediBang Paint是個值得一試的選擇，<strong><del>再說一次重點這玩意免費阿XD</del></strong></p><ol><li>Procreate</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527338240/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0308.jpg" alt="Procreate"></p><p>價格: NTD 300</p><p>算的上iOS上UI最好同時功能也相當齊全的APP了，基本上很多人都會推薦的軟體，筆刷跟素材內建的就相當豐富，甚至有內建過程的錄影重播功能，防掌觸之類當然也是支援的。</p><p>UI操作超級流暢又很乾淨，不像CSP那樣擋東擋西又不好叫出來，<del>忍不住一直縮放畫布</del>，筆刷設定好的話搭配Apple Pencil有種飛天的感覺，傾斜感應非常的棒，<del>所以這軟體我後來變成拿來寫藝術字</del>，功能跟花樣搭配挺多的，目前還玩不多，有更多詳細的心得會再補充XD</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527578292/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0319.png" alt=""></p><p>缺點的話大概就是在同解析度同尺寸的話布上圖層上限記得比CSP低，我是習慣開很多圖層的所以可能比較有機會遇到這問題。</p><p>另外這軟體只有NT 300算是相當超值了，推薦如果可以就入手個玩玩，<del>那些筆刷有時候好像撇一撇也很藝術的感覺，在外面可以拿出來撇幾筆裝逼</del>。</p><ol><li>Autodesk SketchBook</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527338240/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0309.jpg" alt="Autodesk SketchBook"></p><p>價格: 免費</p><p>我們偉大的Autodesk讓SketchBook的Pro也免費啦!!(要先註冊個免費帳號)前陣子Pro版好像要NT30還90，<del>也沒多貴所以乾脆免費了嗎?</del></p><p>優點基本上就是界面簡潔，有防掌觸(跟下面要介紹的Tayasui Sketches差不多)，手勢跟一些壓感也能夠設定，不過整體功能就是比較適合拿來塗鴉、隨興創作，筆刷能夠調整不過應該無法自行製作筆刷，一些特效調整也不如上述幾個軟體。</p><p>還有它也提供了過程錄影的功能，不過要自己手動去開，不像Procreate本身預設就有錄下過程了。</p><p><del>發現我沒在這軟體上畫出個有樣子的東西，放個有趣的鏡像工具好了</del></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527580902/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0323.png" alt="SketchBook鏡像尺規"></p><ol><li>Tayasui Sketches</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527338240/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0310.jpg" alt="Tayasui Sketches"></p><p>價格: 免費 (Pro版NTD 180)</p><p>使用跟功能上其實跟SketchBook大同小異，UI的操作上也差不多，價格也不貴(不過Sketchbook已經免費了)。</p><p>值得一提的是我特別喜歡這APP的鉛筆，原始設定畫出來就挺像真的鉛筆XD，丟圖給別人看甚至會誤認為是手繪的，目前用過的APP裡面就它的鉛筆最棒了!</p><p>其他優缺就參考SketchBook的吧，<del>反正就是很像除了Pro要錢外</del>。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527579677/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0321.png" alt="Sketches鏡像"></p><ol><li>Adobe Photoshop Sketch</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527338240/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0312.jpg" alt="Adobe Photoshop Sketch"></p><p>價格: 免費</p><p>Adobe出品，<del>居然免費而且不會lag或死機???</del>目前還沒玩很久，不過我認為他應該很適合畫一些素描或背景的草圖，或是一些設計構想的塗鴉，剩下在輸出到其他軟體處理，尺規相當豐富而且操作直覺，不過筆刷那些能玩的就相對少了，防掌觸跟手勢也都有支援，方便的打稿APP。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527581478/blog/2018/05/25/iPad_Pro_繪圖心得/IMG_0324.png" alt="Photoshop Sketch尺規繪圖"></p><p><strong>軟體比較</strong></p><table><thead><tr><th>測試項目</th><th>比較</th></tr></thead><tbody><tr><td><strong>功能</strong></td><td>CSP &gt; Procreate ≥ MBP &gt; SketchBook = Sketches = PS Sketch</td></tr><tr><td><strong>操作方便性</strong></td><td>Procreate &gt; SketchBook = Sketches = PS Sketch = MBP &gt; CSP(無鍵盤)</td></tr><tr><td><strong>流暢性</strong></td><td>目前使用下來感覺差不多，都算流暢，不過Procreate的UI動畫做得特別好。</td></tr></tbody></table><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>如果是個非專業的學生黨，想買繪圖螢幕玩玩或提升畫圖效率，我會推薦iPad 2018，有錢的話能上Pro會讓你的體驗更舒適，但那價差就看自己評估值不值得了(而且Pro 2可能快出了可以等一波)，並不會說買普通iPad讓你畫得很不舒服之類，平板帶著到處塗鴉或寫生很有意思的XD。</p><p>至於Cintiq的價格更高，優缺就如硬體篇所述，如果是職業的選專業螢幕繪圖板可以大幅提升效率，<del>而且Cintiq很耐用聽說可以戰十幾年之類</del>，不常出門的可以直上Cintiq接電腦不用買iPad了(MobileStudio看上去故障率實在太高，不是很推薦)。</p><p>想買平板筆電畫圖的可能可以跟人借來試試看能不能夠接受，像是Surface的優勢就是它本身是台電腦，還可以做很多iPad做不到的事情(iOS目前頂多輕文書，說要當成筆電替代對我這種需求比較高的還有一段路要走)，目前有出繪圖筆電的廠商基本上都還做不到Apple或Wacom的順暢度跟準度，隨筆塗鴉倒是還能接受就是。</p><p>iOS的軟體上述那幾個我都蠻喜歡的，真要說的話如果你平常就有再用CSP而且用得很順，那麼CSP是一定要入手的(雖然說是訂閱制)。Procreate也非常值得一玩，<del>畢竟CSP是把電腦的軟體縮小來畫而已</del>，它能讓你體驗到在平板上繪圖的感覺，搭配各種手勢相當方便，還有不少神奇功能，價格才NTD300，好APP不買嗎XD</p><p><del>什麼你說其他軟體呢?免費的當然直接載來玩啊XD</del></p><p>最後老話一句，不管什麼硬體或軟體，你的畫技才是決定畫的好不好的關鍵，也是有人用Surface用小畫家畫出很棒的作品，<del>當然也有拿Cintiq畫的慘不忍睹的</del>，工具只能讓人更舒服的創作，所以不管用什麼軟硬體…</p><p><strong>現在就趕快去努力畫圖吧!</strong> </p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527584655/blog/2018/05/25/iPad_Pro_繪圖心得/ussr.jpg" alt=""></p><p><del>只是想放個Meme</del><br><del>然後我要去摸魚了</del></p><p>Thanks for watching (<em>´▽`</em>)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1527571604/blog/2018/05/25/iPad_Pro_繪圖心得/Fur_chan_w_ipad.jpg&quot; alt=&quot;
      
    
    </summary>
    
    
      <category term="iPad" scheme="https://blog.driftkingtw.me/tags/iPad/"/>
    
      <category term="illustration" scheme="https://blog.driftkingtw.me/tags/illustration/"/>
    
  </entry>
  
  <entry>
    <title>DIY IR Tracker 紅外線頭戴追蹤器筆記</title>
    <link href="https://blog.driftkingtw.me/archives/e0d62e9c.html"/>
    <id>https://blog.driftkingtw.me/archives/e0d62e9c.html</id>
    <published>2018-03-20T15:05:00.000Z</published>
    <updated>2019-10-09T15:03:02.892Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521567789/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/ss201748.jpg" alt="Project CARS 2"></p><p>用VR玩模擬駕駛之類的遊戲是很多玩家的夢想, 不過目前VR頭戴顯示器還不算相當成熟, 而且價格又偏高的情況下<del>(對拉這才是重點)</del>, 不過<del>窮</del>人是很聰明的, 沒有VR我們當然有便宜的替代品!<br>那就是IR Tracker(紅外線追蹤器, Infrared:紅外線縮寫為IR), 可以搭配<a href="https://github.com/geolink/opentracker" target="_blank" rel="noopener">OpenTrack</a>等開源軟體, 利用IR攝影機拍攝IR LED做定位, 來達到偵測物體移動的功能<br>材料買下來成本差不多可以控制在NTD500以內, 當然網路上也有賣現成的, 不過相對價格都比較高, 我當然是選擇DIY既便宜又不失樂趣!</p><h1 id="Ready"><a href="#Ready" class="headerlink" title="Ready"></a>Ready</h1><p><strong>所需材料</strong></p><ul><li>PSEYE 攝影機 x 1 (注意!市面上有兩種版本, 我會在步驟中提及其中的差異)</li><li>IR LED x 3 (推薦SFH485P, 亮度高效果較佳)</li><li>6.8Ω 1/4W電阻 x 1 (串聯5V, 每顆LED電流約75mA) 這邊可以用<a href="http://www.free-track.net/english/hardware/calcled/" target="_blank" rel="noopener">參考阻值計算機</a>計算</li><li>5V電源(電池、USB, etc)</li><li>磁碟片一張 <del>就是那個存檔圖案的實體拉</del></li></ul><p><strong>所需工具</strong></p><ul><li>烙鐵</li><li>焊錫</li><li>一些連接用線材</li><li>熱縮套/絕緣膠帶</li></ul><h1 id="Let’s-Do-It"><a href="#Let’s-Do-It" class="headerlink" title="Let’s Do It!"></a>Let’s Do It!</h1><h2 id="PSEYE"><a href="#PSEYE" class="headerlink" title="PSEYE"></a>PSEYE</h2><p>首先處理PSEYE, 也就是我們的IR攝影機, 他原本只是個普通的攝影機, 但是我們可以手動拆除IR濾鏡改造成IR攝影機<br>小科普:CMOS感光元件對於IR的敏感度很高, 所以普通相機都會裝上IR濾鏡濾除大多數的紅外線<br>(不是完全濾除, 所以可以利用手機鏡頭等去照IR遙控器, 就能夠透過相機看到IR了!)<br>至於選PSEYE而不是其他WebCam的原因, 主要就是因為PSEYE的幀率可以高達100以上, 對於移動是非常靈敏的<br>做IR Traceker也不需要很高的解析度, 有480P就已經綽綽有餘了, PSEYE價格也不高, 所以當然是首選囉!<br>用其他的攝影機當然也可以, 原理都是一樣的, 只是大部分都會推薦PSEYE</p><h2 id="PSEYE比較"><a href="#PSEYE比較" class="headerlink" title="PSEYE比較"></a>PSEYE比較</h2><p>不過問題來了, 在準備部分提及的有兩種PSEYE, 一種是能夠拆除IR濾鏡一種無法(放在夾層中)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559231/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/compare.jpg" alt="PSEYE比較"></p><p>從上圖中可以看到左邊的那種(應該是較新款), 鏡頭中有白圈的是無法拆除IR濾鏡的!<br>不過不必太過擔心, 因為功能上基本也是沒問題的, 只是條件許可下最好能選到右邊這種, 能達到最好的效果<br>(說真的我覺得使用上沒差多少就是)</p><h2 id="拆解"><a href="#拆解" class="headerlink" title="拆解"></a>拆解</h2><p>首先先把PSEYE後面的墊片拆起(新款的是軟墊, 舊款的是硬的要注意)<br>由於舊款是塑膠墊片, 所以我直接用手鑽把它鑽出來(注意不要鑽到底下的螺絲)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559231/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180108_225216.jpg" alt="PSEYE背面"></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559229/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180108_230505.jpg" alt="拆墊片"></p><p>接著把螺絲轉開, 然後沿著邊邊撬開後蓋(非常…難拆, 尤其到圓球那部分要很用力地把它暴力扯開)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559234/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180108_231317.jpg" alt="撬開後蓋"></p><p>小心拆解過程不要傷到手跟內部的PCB</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559236/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180108_235139.jpg" alt="拆開後"></p><p>接下來比較輕鬆, 把PCB上的螺絲都轉下來, 分離下方的支架, 並且拆下前鏡頭</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559231/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180108_235636.jpg" alt="PCB與鏡頭"></p><p>接下來拆解IR濾鏡, 如果是買到無法拆IR濾鏡的可以直接<a href="#過濾可見光">跳到這</a>繼續</p><h2 id="拆解IR-Filter"><a href="#拆解IR-Filter" class="headerlink" title="拆解IR Filter"></a>拆解IR Filter</h2><p>這部分需要比較大的耐心, <del>除了拆背蓋在這裡也會有種讓人想去買成品的衝動</del></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559235/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180108_235641.jpg" alt="IR Filter"></p><p>上圖中最外層的圓形玻璃小透鏡就是IR濾鏡, 我們要將它拆下才能達到最好的IR感測效果<br>可以拿小刀或是像我沒耐心直接手鑽往旁邊鑽, 不過不管怎樣都要很小心而且要花些時間<br>至於多難拆, 體驗一下就知道了(笑)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559237/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180109_001803.jpg" alt="拆除IR濾鏡"></p><p>成功拆除!</p><h2 id="過濾可見光"><a href="#過濾可見光" class="headerlink" title="過濾可見光"></a>過濾可見光</h2><p>接著我們拿出磁碟片, <del>然後把它給拆爆</del>溫柔地拆開</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521563588/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180224_185625_vHDR_Auto.jpg" alt="磁碟片"></p><p>拿出剪刀, 把磁片剪成跟鏡頭那塊方形差不多的大小並放上去</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521563590/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180224_190015_vHDR_Auto.jpg" alt="過濾可見光"></p><h2 id="還原PSEYE"><a href="#還原PSEYE" class="headerlink" title="還原PSEYE"></a>還原PSEYE</h2><p>好了, 此時完成IR攝影機的改裝, 現在按著步驟反向裝回去原本的樣子<br>先丟一邊, 開始做IR Tracker的本體 <del>可以順便通個電看剛才有沒有把它毀了</del></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559246/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180116_013748.jpg" alt="PSEYE"></p><h2 id="IR-Tracker"><a href="#IR-Tracker" class="headerlink" title="IR Tracker"></a>IR Tracker</h2><p>先來處理電路的部分, 電路很簡單就是單純串聯 5V-&gt;電阻-&gt;LED-&gt;LED-&gt;LED-&gt;GND</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521565042/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/headtracker.png" alt="電路圖"></p><p>電源看想用電池或USB供電都可以(打算之後要用小型鋰聚電池供電, 目前先接USB)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559248/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180115_225420.jpg" alt="電路完成"></p><p>此時我們要先準備個支架, 我直接用了YouTuber <a href="https://www.youtube.com/channel/UCW6xlqxSY3gGur4PkGPEUeA" target="_blank" rel="noopener">Seytonic</a> (推薦去逛逛, 他的頻道有許多好玩的東西) 提供的<a href="http://ge.tt/7e7RQJn2" target="_blank" rel="noopener">版型</a>去修改成3D列印檔案, 然後請人列印出來<br>可以順便按照個人喜好在上面做裝飾, 這時候當然貼上Carbon紋路<del>超輕量化</del></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521559243/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180115_230517.jpg" alt="支架"></p><p>接著看要如何安裝固定, 我個人是綁在耳機上, 如圖(歪歪的沒關係 因為軟體可以校正)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521567421/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/P_20180321_013612_vHDR_Auto.jpg" alt="固定"></p><h2 id="軟體設定"><a href="#軟體設定" class="headerlink" title="軟體設定"></a>軟體設定</h2><p>軟體的部分首先要下載<a href="https://codelaboratories.com/downloads/" target="_blank" rel="noopener">CL-EYE DRIVER</a>, 連結是Donate版, 免費版可以自己搜尋, 畢竟也不貴應該支持一下開發者<br>安裝過程就是不斷的下一步就可以, 不多做說明, 裝好後可以開啟”CL-EYE TEST”這個程式看看有沒有正常(已經改裝好攝影機的話應該看不太到可見光, 所以可以拿剛才做好的頭戴追蹤器或遙控器之類對著鏡頭測試)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521565954/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/cleyetest.png" alt="測試"></p><p>如上圖有看到亮點就代表驅動跟硬體都正常囉!<br><b>注意!如果覺得亮點很模糊, 那是因為拔除IR濾鏡之後造成焦距改變, 這時候我們可以藉由轉動鏡頭調整卡在適合的焦距上<br>另外也可以進入裝置的屬性設定裡調整曝光等參數, 我一開始身邊找不到磁碟片就是靠軟體改變曝光, 同樣也能夠正常使用哦!</b></p><p>接著安裝<a href="https://github.com/opentrack/opentrack/releases" target="_blank" rel="noopener">OpenTrack</a>, 選擇最新版下載後一樣是無腦下一步安裝</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521566384/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/ot.png" alt="OpenTrack"></p><p>接著開啟Input那欄右側的設定圖案</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521566474/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/pointinput.png" alt="Input設定"></p><p>Device裝置的部分選擇你的攝影機(PSEYE), 下方可以調整解析度和FPS等(FPS盡量拉高)<br>然後開啟右邊的設定對話框, 選擇Shortcuts快捷鍵, 在Center項目設定一個按鍵讓你可以在遊戲/模擬器中重新校正置中</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521566384/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/option.png" alt="Shortcuts"></p><p>接著切換到Output, 在這裡可以選擇要啟動的感測項目Yaw(偏擺), Pitch(俯仰), Roll(翻滾), XYZ(XYZ軸移動)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521566384/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/output.png" alt=""></p><p>像是我開歐卡或賽車等, 只希望左右轉頭時候能看到左右的景物, 所以就單純開啟Yaw其他設定Disabled<br>如果像Warthunder要看四面八方, 就需要開其他的選項, 這部分就看個人需求了</p><p>設定完成按下OK回到主畫面, 然後按Start就會啟動OpenTrack囉!此時可以看到三個IR LED的光點正確地出現在方框中<br>只要做出動作旁邊的小章魚就會跟著做相同的動作</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521566474/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/activ.png" alt=""></p><p>接著就可以開啟遊戲, <del>體驗窮人的半VR拉</del><br>歐卡之類可以直接支援, 像Project CARS 2的話要開Steam VR模式才有用哦! 每個遊戲可能要自己另外注意一下<br>雖然說價格不貴, 但是效果的確不錯呢!原先以為只有頭部轉動螢幕沒有跟上會很難用, 結果是多操心了<br>基本上可以很自然地看向左右兩側, 也沒什麼延遲, 前面的辛苦值得啦!</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://www.youtube.com/watch?v=M_VN4mMA6Cw" target="_blank" rel="noopener">$10 Gaming Head Tracker | DIY Tutorial</a><br><a href="https://codelaboratories.com/downloads/" target="_blank" rel="noopener">CL-EYE DRIVER</a><br><a href="https://github.com/opentrack" target="_blank" rel="noopener">OpenTrack</a><br><a href="http://www.free-track.net/forum/index.php?showtopic=1856" target="_blank" rel="noopener">Easy build setup with SFH485P, Anyone can build this ! </a><br><a href="http://www.free-track.net/english/hardware/calcled/" target="_blank" rel="noopener">LED Assembly Wizard</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1521567789/blog/2018/03/20/DIY-IR-Tracker-紅外線頭戴追蹤器筆記/ss201748.jpg&quot; 
      
    
    </summary>
    
    
      <category term="DIY" scheme="https://blog.driftkingtw.me/tags/DIY/"/>
    
      <category term="SIM-Racing" scheme="https://blog.driftkingtw.me/tags/SIM-Racing/"/>
    
  </entry>
  
  <entry>
    <title>在Github-Page上免費使用自訂HTTPS網域名稱</title>
    <link href="https://blog.driftkingtw.me/archives/2e36326e.html"/>
    <id>https://blog.driftkingtw.me/archives/2e36326e.html</id>
    <published>2018-03-04T08:33:13.000Z</published>
    <updated>2019-10-09T15:03:14.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h1><p>在<a href="https://github.com/" target="_blank" rel="noopener">Github</a>上建好靜態網站後, 都是利用 username.github.io 進行瀏覽<br>但是<a href="https://github.com/" target="_blank" rel="noopener">Github</a>也有可以讓我們使用自己的域名(Domain Name)的設定<br>假設選擇自訂域名就無法使用它所提供的SSL連線服務, 需要找第三方來使用HTTPS</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1520154032/blog/2018/03/04/在Github-Page上免費使用HTTPS自定網域名稱/github_domain.png" alt="Github自訂域名"></p><p>為了達成HTTPS自訂域名, 需要要利用<a href="https://www.cloudflare.com/" target="_blank" rel="noopener">CloudFlare</a>所提供的免費服務<br>至於堅持使用HTTPS的原因, 我到時候再寫另外一篇文章詳細補充</p><h1 id="How"><a href="#How" class="headerlink" title="How"></a>How</h1><ol><li><p>確認已經註冊好一個域名</p></li><li><p>確認已經在<a href="https://github.com/" target="_blank" rel="noopener">Github</a>上建立一個靜態網站</p></li><li><p>前往<a href="https://www.cloudflare.com/" target="_blank" rel="noopener">CloudFlare</a>註冊然後按照指示加入你的站點</p></li><li><p>到Github靜態網站的Repo裡面點選設定, 然後往下拉找到自訂網域(Custom domain), 填上要設定的網域按下儲存</p></li><li><p>回到<a href="https://www.cloudflare.com/" target="_blank" rel="noopener">CloudFlare</a>在DNS頁面新增CNAME連結到 username.github.io (username為Github用戶名)<br>在這個範例設定中, 我要讓原本的主機名稱連到原先架設在GCP上的網站, 而blog子網域連到Github的靜態網頁</p></li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/c_scale,h_250/v1520160636/blog/2018/03/04/在Github-Page上免費使用HTTPS自定網域名稱/dns.png" alt="CNAME"><br>(第二個CNAME的紀錄是為了讓不論前面有沒有輸入www的網址都能連線到我的網站)<br>確認成功連線應該會出現如下的Active字樣(設定完成需要等5~10分鐘生效)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1520161993/blog/2018/03/04/在Github-Page上免費使用HTTPS自定網域名稱/active.png" alt="Status: Active"></p><ol><li>如果原本有設定過DNS的部分, 要去把他們都替換成CloudFlare提供的DNS Server(在DNS設定頁籤中)</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1520161622/blog/2018/03/04/在Github-Page上免費使用HTTPS自定網域名稱/dnscf.png" alt="CloudFlare DNS Server"></p><ol><li>接著設定SSL的部分, 選擇加密(Crypto)頁籤SSL是否為FULL模式(若沒有手動設定成FULL)(設定完成需要等5~10分鐘)<br>當畫面顯示Active Certificate字樣代表SSL已啟用</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1520162125/blog/2018/03/04/在Github-Page上免費使用HTTPS自定網域名稱/sslactive.png" alt="Active Certificate"></p><ol><li>此時應該已經可以使用https訪問我們的Github page了, 但若是使用者輸入http則無效, 所以需要作強制導向HTTPS的設定<br>選擇頁面規則(Page Rules)後點選新增規則<br>在URL Match的部分打上http的網域名, 最後加上星號代表此網域底下通用規則, 然後設定選擇Always Use HTTPS強制導向</li></ol><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1520162472/blog/2018/03/04/在Github-Page上免費使用HTTPS自定網域名稱/pagerulehttps.png" alt="強制導向HTTPS"></p><ol><li>這時候就算URL輸入http也會自動連向https的頁面了, 設定完成!</li></ol><h2 id="備註"><a href="#備註" class="headerlink" title="備註"></a>備註</h2><ul><li><p>如果使用的是<a href="https://jekyllrb.com/" target="_blank" rel="noopener">Jekyll</a>, <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>之類的靜態網站產生器(Static Site Generator)的話, 記得內容連結也都要是https,否則會出現Mix Content的問題, 這樣是無法看到SSL綠色鎖頭的哦</p></li><li><p>使用<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>這種利用Push更新文章的靜態網站, 因為每次更新都會把全部檔案洗掉, 所以我們要把設定Github Custom Domain所產生的CNAME檔案(無附檔名), 複製一份放在Hexo的source資料夾, 才不會造成CNAME被覆蓋掉而要重新設定的情況<br>CNAME內容就是Github Page的Custom Domain, 也可以自己建立一份, 例如</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog.driftkingtw.me</span><br></pre></td></tr></table></figure></li><li><p>可以在<a href="https://www.cloudflare.com/" target="_blank" rel="noopener">CloudFlare</a>的Page Rules頁籤新增Cache規則, 加快網站載入速度</p></li></ul><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p><a href="https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/" target="_blank" rel="noopener">Secure and fast GitHub Pages with CloudFlare</a><br><a href="https://help.github.com/articles/setting-up-a-custom-subdomain/" target="_blank" rel="noopener">Setting up a custom subdomain</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Why&quot;&gt;&lt;a href=&quot;#Why&quot; class=&quot;headerlink&quot; title=&quot;Why&quot;&gt;&lt;/a&gt;Why&lt;/h1&gt;&lt;p&gt;在&lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Gith
      
    
    </summary>
    
    
      <category term="Github" scheme="https://blog.driftkingtw.me/tags/Github/"/>
    
      <category term="SSL" scheme="https://blog.driftkingtw.me/tags/SSL/"/>
    
  </entry>
  
</feed>
