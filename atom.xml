<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DriftKingTW&#39;s Blog</title>
  
  <subtitle>printf(&quot;%s&quot;, &quot;Stay Curious, Stay Creative&quot;);</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.driftking.tw/"/>
  <updated>2021-04-17T16:36:31.495Z</updated>
  <id>https://blog.driftking.tw/</id>
  
  <author>
    <name>DriftKingTW</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Quick-Fix node-sass no such file or directory 錯誤</title>
    <link href="https://blog.driftking.tw/QuickFix/node-sass-error/"/>
    <id>https://blog.driftking.tw/QuickFix/node-sass-error/</id>
    <published>2021-04-17T16:30:00.000Z</published>
    <updated>2021-04-17T16:36:31.495Z</updated>
    
    <content type="html"><![CDATA[<p>Q: 最近在利用 <code>Vue-Cli</code> 建立專案時遇到 <code>node-sass</code> 出現如下錯誤：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> ERROR  Failed to compile with 1 error                             </span><br><span class="line"></span><br><span class="line"> error  in ./src/App.vue?vue&amp;type=style&amp;index=0&amp;lang=scss&amp;</span><br><span class="line"></span><br><span class="line">Syntax Error: Error: ENOENT: no such file or directory, scandir '/***/node_modules/node-sass/vendor'</span><br></pre></td></tr></table></figure><a id="more"></a><p>A: Rebuild 即可：<code>npm rebuild node-sass</code></p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://github.com/sass/node-sass/issues/1579" target="_blank" rel="noopener">Error: ENOENT: no such file or directory, scandir ‘**/node_modules/node-sass/vendor’ #1579</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Q: 最近在利用 &lt;code&gt;Vue-Cli&lt;/code&gt; 建立專案時遇到 &lt;code&gt;node-sass&lt;/code&gt; 出現如下錯誤：&lt;/p&gt;
&lt;epacse hidden&gt;0&lt;/epacse&gt;
    
    </summary>
    
    
      <category term="vue" scheme="https://blog.driftking.tw/tags/vue/"/>
    
      <category term="node-sass" scheme="https://blog.driftking.tw/tags/node-sass/"/>
    
  </entry>
  
  <entry>
    <title>Quick-Fix node-sass no such file or directory error</title>
    <link href="https://blog.driftking.tw/en/QuickFix/node-sass-error/"/>
    <id>https://blog.driftking.tw/en/QuickFix/node-sass-error/</id>
    <published>2021-04-17T16:30:00.000Z</published>
    <updated>2021-04-17T16:36:31.496Z</updated>
    
    <content type="html"><![CDATA[<p>Q: Recently I run into this error whe create a vue project via <code>Vue-Cli</code> :</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> ERROR  Failed to compile with 1 error                             </span><br><span class="line"></span><br><span class="line"> error  in ./src/App.vue?vue&amp;type=style&amp;index=0&amp;lang=scss&amp;</span><br><span class="line"></span><br><span class="line">Syntax Error: Error: ENOENT: no such file or directory, scandir '/***/node_modules/node-sass/vendor'</span><br></pre></td></tr></table></figure><a id="more"></a><p>A: Simply rebuild wil do the tirck：<code>npm rebuild node-sass</code></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://github.com/sass/node-sass/issues/1579" target="_blank" rel="noopener">Error: ENOENT: no such file or directory, scandir ‘**/node_modules/node-sass/vendor’ #1579</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Q: Recently I run into this error whe create a vue project via &lt;code&gt;Vue-Cli&lt;/code&gt; :&lt;/p&gt;
&lt;epacse hidden&gt;1&lt;/epacse&gt;
    
    </summary>
    
    
      <category term="vue" scheme="https://blog.driftking.tw/tags/vue/"/>
    
      <category term="node-sass" scheme="https://blog.driftking.tw/tags/node-sass/"/>
    
  </entry>
  
  <entry>
    <title>利用 Valine-Admin 與 Gmail 為 Valine 留言系統提供 Email 通知功能及留言管理</title>
    <link href="https://blog.driftking.tw/2021/04/add-email-notification-to-valine/"/>
    <id>https://blog.driftking.tw/2021/04/add-email-notification-to-valine/</id>
    <published>2021-04-13T11:00:00.000Z</published>
    <updated>2021-04-13T10:59:48.121Z</updated>
    
    <content type="html"><![CDATA[<p>本站使用的是 Valine 留言系統，但是之前忘了加上留言通知導致有些留言沒看到（非常抱歉😅，後來事物繁忙到現在才加上通知功能。</p><p>這次就來記錄如何使用 Valine-Admin 透過 Gamil 的 SMPT 服務免費加上 Email 通知功能以及留言管理後台吧！</p><a id="more"></a><h1 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h1><p>這邊預設已經安裝設定好環境（或已啟用）<a href="https://valine.js.org/index.html" target="_blank" rel="noopener">Valine</a> 留言功能並能夠正常使用，雲端運算平台為 <a href="https://leancloud.app" target="_blank" rel="noopener">LeanCloud</a>（國際版），其實我想用 Firebase 不過 Valine 官方尚未支援😭</p><h1 id="Valine-Admin-Email-通知設定"><a href="#Valine-Admin-Email-通知設定" class="headerlink" title="Valine-Admin Email 通知設定"></a>Valine-Admin Email 通知設定</h1><p>這邊要使用的是官方推薦的 <a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener">DesertsP/Valine-Admin</a> 實現即時通知功能，並透過 Gmail 的 SMTP 服務發送 Email。</p><p>關於 Gmail 的部分我們要先去 <a href="https://myaccount.google.com/apppasswords" target="_blank" rel="noopener">Google Account/App Password</a> 中進行 App 設定（需要開啟 2FA 驗證，關於 2FA 相關知識可以參考<a href="https://blog.driftking.tw/2020/02/Why-My-Account-Got-Hacked-The-Password-Security-and-Physical-Key/">之前的文章</a>）</p><p>新增一個 App Password，選擇自定選項並輸入一個名稱讓自己知道這串密碼是給什麼服務用的，如下圖：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/g_auto/v1618308412/blog/2021/04/add-email-notification-to-valine/Screen_Shot_2021-04-13_at_6.04.48_PM.png" alt="App Password"></p><p>接著 Google 會產生 App 密碼給你，複製黃框區域的密碼，稍後要填到 SMTP 密碼欄位中：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/g_auto/v1618308411/blog/2021/04/add-email-notification-to-valine/Screen_Shot_2021-04-13_at_6.05.23_PM.png" alt="App Password"></p><p>再來進入使用 Valine 的 LeanCloud App 中，選擇 <code>LeanEngine &gt; Web &gt; Settings</code> 點擊 <code>Add a new variable</code> 設定以下各項環境變數（範例僅供參考）：</p><table><thead><tr><th>變數</th><th>範例</th><th>說明</th></tr></thead><tbody><tr><td>SITE_NAME</td><td>DriftKingTW’s Blog</td><td>[必須]網站名稱</td></tr><tr><td>SITE_URL</td><td><a href="https://blog.driftking/tw" target="_blank" rel="noopener">https://blog.driftking/tw</a></td><td>[必須]網站URL</td></tr><tr><td>SMTP_SERVICE</td><td>Gmail</td><td>[必須]SMTP服務</td></tr><tr><td>SMTP_USER</td><td>&lt;Your_Gmail_Account&gt;</td><td>[必須]Gmail帳號</td></tr><tr><td>SMTP_PASS</td><td>&lt;Your_Google_App_Pass&gt;</td><td>[必須]剛才產生的App密碼</td></tr><tr><td>SENDER_NAME</td><td>DriftKingTW</td><td>[必須]寄件人名稱</td></tr><tr><td>SENDER_EMAIL</td><td><a href="mailto:xxx@gmail.com" target="_blank" rel="noopener">xxx@gmail.com</a></td><td>[必須]寄件人Email</td></tr><tr><td>ADMIN_URL</td><td>Text</td><td>[建議]自動喚醒服務用</td></tr><tr><td>BLOGGER_EMAIL</td><td><a href="mailto:xxx@gmail.com" target="_blank" rel="noopener">xxx@gmail.com</a></td><td>[可選]自己的收件Email</td></tr><tr><td>AKISMET_KEY</td><td>XXX</td><td>[可選]Akismet垃圾留言檢測</td></tr></tbody></table><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/g_auto/v1618304057/blog/2021/04/add-email-notification-to-valine/Screen_Shot_2021-04-13_at_4.50.54_PM.png" alt="設定範例"></p><p>完成後點擊 <code>Save</code> 儲存設定</p><blockquote class="colorquote info"><p>圖中 <code>MAIL_SUBJECT</code>、<code>MAIL_SUBJECT_ADMIN</code>、<code>MAIL_TEMPLATE</code>、<code>MAIL_TEMPLATE_ADMIN</code>為 Email 的樣版設定，會在<a href="#自定義-Email-模板">自定義 Email 模板</a>設定中提到。</p></blockquote><h1 id="雲端後台管理部署"><a href="#雲端後台管理部署" class="headerlink" title="雲端後台管理部署"></a>雲端後台管理部署</h1><p>首先在環境變數下方找到 <code>LeanEngine domain</code> 欄位，填入自己想要的網頁名稱（將來會透過這個網址連接留言管理後台）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/g_auto/v1618304811/blog/2021/04/add-email-notification-to-valine/Screen_Shot_2021-04-13_at_5.05.21_PM.png" alt="LeanEngine domain"></p><p>接下來在左方導覽列切換至 <code>Deploy</code> 中，選擇 <code>Deploy from Git</code> 填入 Git Repo： <code>https://github.com/DesertsP/Valine-Admin.git</code>。選擇 <code>Production</code> 模式後點擊 <code>Deploy</code> 進行手動部署。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/g_auto/v1618304654/blog/2021/04/add-email-notification-to-valine/Screen_Shot_2021-04-13_at_5.03.44_PM.png" alt="部署設定"></p><p>完成設定後透過剛才設定的網址（如：<a href="https://driftkingtw.avosapps.us/sign-up" target="_blank" rel="noopener">driftkingtw.avosapps.us</a>，註冊自己的管理員帳密）</p><blockquote class="colorquote info"><p>若進入後自動轉跳到登入頁面，需要手動去 <code>DataStorage</code> 將 <code>_User</code> 資料表清空。</p></blockquote><p>完成後即可透過後台網址登入到後台管理系統了！後台的操作應該相當直覺，這邊就不多介紹了😉</p><h1 id="防止免費版-LeanCloud-自動休眠"><a href="#防止免費版-LeanCloud-自動休眠" class="headerlink" title="防止免費版 LeanCloud 自動休眠"></a>防止免費版 LeanCloud 自動休眠</h1><p>由於免費版的 LeanCloud 容器會有自動休眠的限制，一天強制休眠 6hr，半小時內沒有新的請求也會自動進入休眠狀態，雖然發送請求的時候會自動喚醒但該則請求的 Email 通知會發送失敗，以下提供 Valine-Admin 官方的解決方法：</p><ul><li>自動喚醒</li></ul><p>透過環境變數 <code>ADMIN_URL</code> 到 <code>LeanEngine &gt; Scheduled Tasks</code> 中新建自動喚醒任務：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/g_auto/v1618309232/blog/2021/04/add-email-notification-to-valine/Screen_Shot_2021-04-13_at_6.20.22_PM.png" alt="自動喚醒"></p><p>填入自訂名稱後，動作選擇 <code>self_awake</code>，Corn 表達式部分填入 <code>0 */25 0-15,23 * * ?</code> （國際版 LeanCloud 使用時間為 UTC+0，代表從台北時間 7:00AM～11:50PM 中每30分鐘會自動喚醒）</p><ul><li>自動重發 24h 內漏發的 Email</li></ul><p>原理同上，再新增一個自動任務，動作選擇 <code>resend_mails</code> ，Corn 表達式則為 <code>0 10 23 * * ?</code> （國際版 LeanCloud 使用時間為 UTC+0，代表從台北時間 7:10AM 會自動重發 24h 內漏發的 Email）</p><p>到此基本設定全部完成，可以自己測試一下功能是否正常運作 😎</p><h1 id="自定義-Email-模板"><a href="#自定義-Email-模板" class="headerlink" title="自定義 Email 模板"></a>自定義 Email 模板</h1><p>可以透過新增以下幾種環境變數來達成自定義 Email 模板：</p><table><thead><tr><th>變數</th><th>說明</th></tr></thead><tbody><tr><td>MAIL_SUBJECT</td><td>[可選]郵件主旨</td></tr><tr><td>MAIL_TEMPLATE</td><td>[可選]郵件樣板</td></tr><tr><td>MAIL_SUBJECT_ADMIN</td><td>[可選]通知自己郵件的主旨</td></tr><tr><td>MAIL_TEMPLATE_ADMIN</td><td>[可選]通知自己郵件的樣本</td></tr></tbody></table><p>這邊提供自己翻譯官方樣板的繁體中文及英文版本：</p><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- 繁體中文 MAIL_SUBJECT --&gt;</span></span><br><span class="line">$&#123;PARENT_NICK&#125;，您在『$&#123;SITE_NAME&#125;』上的留言有新回應！</span><br></pre></td></tr></table></figure><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- 繁體中文 MAIL_TEMPLATE --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">style</span>=<span class="hljs-string">"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;"</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;"</span>&gt;</span> 您在 <span class="hljs-tag">&lt;<span class="hljs-name">a</span></span></span><br><span class="line"><span class="hljs-tag">            <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none;color: #12ADDB;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> 上的留言有新回應</span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span> $&#123;PARENT_NICK&#125; 您曾發表留言：<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"padding:0 12px 0 12px;margin-top:18px"</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span> $&#123;PARENT_COMMENT&#125;</span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> 回應：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span> $&#123;COMMENT&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以點擊<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;POST_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>查看完整回應<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>，歡迎再次光臨 <span class="hljs-tag">&lt;<span class="hljs-name">a</span></span></span><br><span class="line"><span class="hljs-tag">                <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>$&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>。<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- 繁體中文 MAIL_SUBJECT_ADMIN --&gt;</span></span><br><span class="line">$&#123;SITE_NAME&#125; 上有新留言！</span><br></pre></td></tr></table></figure><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- 繁體中文 MAIL_TEMPLATE_ADMIN --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">style</span>=<span class="hljs-string">"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;"</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;"</span>&gt;</span> 您在 <span class="hljs-tag">&lt;<span class="hljs-name">a</span></span></span><br><span class="line"><span class="hljs-tag">            <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none;color: #12ADDB;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>$&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> 上的文章有了新的留言！</span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> 回覆：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span> $&#123;COMMENT&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>您可以點擊<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;POST_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>查看完整留言<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- English MAIL_SUBJECT --&gt;</span></span><br><span class="line">$&#123;PARENT_NICK&#125;, your comment on 『$&#123;SITE_NAME&#125;』 got a new response!</span><br></pre></td></tr></table></figure><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- English MAIL_TEMPLATE --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">style</span>=<span class="hljs-string">"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;"</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;"</span>&gt;</span>Your comment on</span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none;color: #12ADDB;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> have a new</span><br><span class="line">        response!</span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span> $&#123;PARENT_NICK&#125; You says：<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"padding:0 12px 0 12px;margin-top:18px"</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span> $&#123;PARENT_COMMENT&#125;</span><br><span class="line">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> Replied：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span> $&#123;COMMENT&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>You can <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;POST_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>view full</span><br><span class="line">                response<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>, Cheers! <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span></span></span><br><span class="line"><span class="hljs-tag">                <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>$&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>。<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- English MAIL_SUBJECT_ADMIN --&gt;</span></span><br><span class="line">New comment on $&#123;SITE_NAME&#125;.</span><br></pre></td></tr></table></figure><figure class="highlight html hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">&lt;!-- English MAIL_TEMPLATE_ADMIN --&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">div</span></span></span><br><span class="line"><span class="hljs-tag">    <span class="hljs-attr">style</span>=<span class="hljs-string">"border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;"</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;"</span>&gt;</span>You have a new</span><br><span class="line">        comment on <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none;color: #12ADDB;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;SITE_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>$&#123;SITE_NAME&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span> .</span><br><span class="line">    <span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> comment：<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;"</span>&gt;</span> $&#123;COMMENT&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="line">    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>You can <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-decoration:none; color:#12addb"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"$&#123;POST_URL&#125;"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"_blank"</span>&gt;</span>view full</span><br><span class="line">            response<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>.<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>記得更新環境變數後要重啟容器才會生效喔，可以試著改成自己想要的樣子 😎</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/g_auto/v1618310383/blog/2021/04/add-email-notification-to-valine/Screen_Shot_2021-04-13_at_6.39.24_PM.png" alt="Email 範例"></p><p>剩餘的其他詳細功能請參考 <a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener">DesertsP/Valine-Admin</a></p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener">DesertsP/Valine-Admin</a></p><p><a href="https://github.com/DesertsP/Valine-Admin/issues/63" target="_blank" rel="noopener">issue:关于时区的一个问题</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本站使用的是 Valine 留言系統，但是之前忘了加上留言通知導致有些留言沒看到（非常抱歉😅，後來事物繁忙到現在才加上通知功能。&lt;/p&gt;
&lt;p&gt;這次就來記錄如何使用 Valine-Admin 透過 Gamil 的 SMPT 服務免費加上 Email 通知功能以及留言管理後台吧！&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://blog.driftking.tw/tags/hexo/"/>
    
      <category term="valine" scheme="https://blog.driftking.tw/tags/valine/"/>
    
      <category term="blog" scheme="https://blog.driftking.tw/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>add-email-notification-to-valine</title>
    <link href="https://blog.driftking.tw/en/2021/04/add-email-notification-to-valine/"/>
    <id>https://blog.driftking.tw/en/2021/04/add-email-notification-to-valine/</id>
    <published>2021-04-13T11:00:00.000Z</published>
    <updated>2021-04-13T11:04:41.661Z</updated>
    
    <content type="html"><![CDATA[<p>Sorry, this post in currently in Chinese only :(</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sorry, this post in currently in Chinese only :(&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://blog.driftking.tw/tags/hexo/"/>
    
      <category term="valine" scheme="https://blog.driftking.tw/tags/valine/"/>
    
      <category term="blog" scheme="https://blog.driftking.tw/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Quick Fix - macOS 連接公用 WiFi 出現登入錯誤訊息</title>
    <link href="https://blog.driftking.tw/QuickFix/macos-wifi-captive-portal-broken/"/>
    <id>https://blog.driftking.tw/QuickFix/macos-wifi-captive-portal-broken/</id>
    <published>2021-04-11T11:42:36.000Z</published>
    <updated>2021-04-11T11:59:04.086Z</updated>
    
    <content type="html"><![CDATA[<p>Q: macOS 連接公用 WiFi 登入畫面一片空白並出現登入錯誤訊息？</p><p>A: 在 <code>~/Library/LaunchAgents</code> 中新增一個檔案名為 <code>my.shim.catalina.captivenetworkassistant.plist</code></p><a id="more"></a><p>內容如下：</p><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">plist</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">"-//Apple Computer//DTD PLIST 1.0//EN"</span> \</span></span><br><span class="line"><span class="hljs-meta"><span class="hljs-meta-string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">plist</span> <span class="hljs-attr">version</span>=<span class="hljs-string">"1.0"</span>&gt;</span></span><br><span class="line"> <span class="hljs-tag">&lt;<span class="hljs-name">dict</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>Label<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>my.shim.catalina.captivenetworkassistant<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>LowPriorityIO<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">true</span>/&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>ProgramArguments<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">array</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>open<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>/System/Library/CoreServices/Captive Network Assistant.app<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>WatchPaths<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">array</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>/Library/Preferences/SystemConfiguration<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>RunAtLoad<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">true</span>/&gt;</span></span><br><span class="line"> <span class="hljs-tag">&lt;/<span class="hljs-name">dict</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接著依序執行如下指令</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/Library/LaunchAgents</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl load my.shim.catalina.captivenetworkassistant.plist</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl start my.shim.catalina.captivenetworkassistant</span><br></pre></td></tr></table></figure><p>重啟電腦即可解決問題 👌</p><p>若要刪除此背景服務：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/Library/LaunchAgents</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl stop my.shim.catalina.captivenetworkassistant</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl unload my.shim.catalina.captivenetworkassistant.plist</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm my.shim.catalina.captivenetworkassistant.plist</span><br></pre></td></tr></table></figure><blockquote class="colorquote info"><p>我參考的解決文章中提到 <code>10.15.1</code> 版本中已解決此問題，但我 <code>11.2.3</code> 版本仍遇到此問題 😭</p></blockquote><blockquote><p>Quick Fix 是一些我自己平時遇到各種小問題的合輯，並提供自己的快速解法</p></blockquote><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://poweruser.blog/macos-catalina-wifi-issue-captive-portal-broken-45610cc016b5" target="_blank" rel="noopener">macOS Catalina WiFi issue — captive portal broken</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Q: macOS 連接公用 WiFi 登入畫面一片空白並出現登入錯誤訊息？&lt;/p&gt;
&lt;p&gt;A: 在 &lt;code&gt;~/Library/LaunchAgents&lt;/code&gt; 中新增一個檔案名為 &lt;code&gt;my.shim.catalina.captivenetworkassistant.plist&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Quick Fix" scheme="https://blog.driftking.tw/tags/Quick-Fix/"/>
    
      <category term="MacOS" scheme="https://blog.driftking.tw/tags/MacOS/"/>
    
      <category term="WiFi" scheme="https://blog.driftking.tw/tags/WiFi/"/>
    
  </entry>
  
  <entry>
    <title>Quick Fix - macOS WiFi Captive Portal Broken</title>
    <link href="https://blog.driftking.tw/en/QuickFix/macos-wifi-captive-portal-broken/"/>
    <id>https://blog.driftking.tw/en/QuickFix/macos-wifi-captive-portal-broken/</id>
    <published>2021-04-11T11:42:36.000Z</published>
    <updated>2021-04-11T11:58:50.528Z</updated>
    
    <content type="html"><![CDATA[<p>Q: Why I got error on captive portal wifi?</p><p>A: Create a file <code>my.shim.catalina.captivenetworkassistant.plist</code> in <code>~/Library/LaunchAgents</code></p><a id="more"></a><figure class="highlight xml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">plist</span> <span class="hljs-meta-keyword">PUBLIC</span> <span class="hljs-meta-string">"-//Apple Computer//DTD PLIST 1.0//EN"</span> \</span></span><br><span class="line"><span class="hljs-meta"><span class="hljs-meta-string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;<span class="hljs-name">plist</span> <span class="hljs-attr">version</span>=<span class="hljs-string">"1.0"</span>&gt;</span></span><br><span class="line"> <span class="hljs-tag">&lt;<span class="hljs-name">dict</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>Label<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>my.shim.catalina.captivenetworkassistant<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>LowPriorityIO<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">true</span>/&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>ProgramArguments<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">array</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>open<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>/System/Library/CoreServices/Captive Network Assistant.app<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>WatchPaths<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">array</span>&gt;</span></span><br><span class="line">   <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>/Library/Preferences/SystemConfiguration<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>RunAtLoad<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span></span><br><span class="line">  <span class="hljs-tag">&lt;<span class="hljs-name">true</span>/&gt;</span></span><br><span class="line"> <span class="hljs-tag">&lt;/<span class="hljs-name">dict</span>&gt;</span></span><br><span class="line"><span class="hljs-tag">&lt;/<span class="hljs-name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Then run the command down below:</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/Library/LaunchAgents</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl load my.shim.catalina.captivenetworkassistant.plist</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl start my.shim.catalina.captivenetworkassistant</span><br></pre></td></tr></table></figure><p>Restart the macOS, the issue should be solved 👌</p><p>If you want to remove this daemon:</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/Library/LaunchAgents</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl stop my.shim.catalina.captivenetworkassistant</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl unload my.shim.catalina.captivenetworkassistant.plist</span><br></pre></td></tr></table></figure><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm my.shim.catalina.captivenetworkassistant.plist</span><br></pre></td></tr></table></figure><blockquote class="colorquote info"><p>The post I reference says that this issue fixed on <code>10.15.1</code> update, but I still got this error on <code>11.2.3</code> 😭</p></blockquote><blockquote><p>Quick Fix is a series of my solution for some random problem</p></blockquote><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://poweruser.blog/macos-catalina-wifi-issue-captive-portal-broken-45610cc016b5" target="_blank" rel="noopener">macOS Catalina WiFi issue — captive portal broken</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Q: Why I got error on captive portal wifi?&lt;/p&gt;
&lt;p&gt;A: Create a file &lt;code&gt;my.shim.catalina.captivenetworkassistant.plist&lt;/code&gt; in &lt;code&gt;~/Library/LaunchAgents&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Quick Fix" scheme="https://blog.driftking.tw/tags/Quick-Fix/"/>
    
      <category term="MacOS" scheme="https://blog.driftking.tw/tags/MacOS/"/>
    
      <category term="WiFi" scheme="https://blog.driftking.tw/tags/WiFi/"/>
    
  </entry>
  
  <entry>
    <title>Quick Fix - 無法在 iPad 的 Affinity Photo 中開啟 PSD 檔案？</title>
    <link href="https://blog.driftking.tw/QuickFix/cant-import-psd-on-affinity-photo-ipad/"/>
    <id>https://blog.driftking.tw/QuickFix/cant-import-psd-on-affinity-photo-ipad/</id>
    <published>2021-04-11T11:21:10.000Z</published>
    <updated>2021-04-11T11:35:00.410Z</updated>
    
    <content type="html"><![CDATA[<p>Q: 我無法在 iPad 的 Affinity Photo 中開啟 PSD 檔案？</p><p>A: 如果裝了 Adobe Fresco，可能會造成 PSD 檔案在 Affinity Photo 中無法開啟，刪除 Fr 之後即可解決問題。</p><a id="more"></a><blockquote class="colorquote info"><p>這可能是 Affinity Photo 的一個 Bug，要看未來開發者是否會去修復</p></blockquote><blockquote><p>Quick Fix 是一些我自己平時遇到各種小問題的合輯，並提供自己的快速解法</p></blockquote><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://forum.affinity.serif.com/index.php?/topic/115770-cant-import-psd-file-to-affinity-designerphoto/" target="_blank" rel="noopener">Cant import .psd file to Affinity designer/photo</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Q: 我無法在 iPad 的 Affinity Photo 中開啟 PSD 檔案？&lt;/p&gt;
&lt;p&gt;A: 如果裝了 Adobe Fresco，可能會造成 PSD 檔案在 Affinity Photo 中無法開啟，刪除 Fr 之後即可解決問題。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Quick Fix" scheme="https://blog.driftking.tw/tags/Quick-Fix/"/>
    
      <category term="iPad" scheme="https://blog.driftking.tw/tags/iPad/"/>
    
      <category term="Affinity Photo" scheme="https://blog.driftking.tw/tags/Affinity-Photo/"/>
    
      <category term="Fresco" scheme="https://blog.driftking.tw/tags/Fresco/"/>
    
  </entry>
  
  <entry>
    <title>Quick Fix - Can&#39;t import PSD on Affinity Photo iPad</title>
    <link href="https://blog.driftking.tw/en/QuickFix/cant-import-psd-on-affinity-photo-ipad/"/>
    <id>https://blog.driftking.tw/en/QuickFix/cant-import-psd-on-affinity-photo-ipad/</id>
    <published>2021-04-11T11:21:10.000Z</published>
    <updated>2021-04-11T11:36:01.947Z</updated>
    
    <content type="html"><![CDATA[<p>Q: I can’t import PSD file on Affinity Photo on my iPad?</p><p>A: If you have Adobe Fresco installed, uninstall Fr and try it again.</p><a id="more"></a><blockquote class="colorquote info"><p>This probably is a bug in Affinity Photo, need to wait for developer to fix it.</p></blockquote><blockquote><p>Quick Fix is a series of my solution for some random problem</p></blockquote><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://forum.affinity.serif.com/index.php?/topic/115770-cant-import-psd-file-to-affinity-designerphoto/" target="_blank" rel="noopener">Cant import .psd file to Affinity designer/photo</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Q: I can’t import PSD file on Affinity Photo on my iPad?&lt;/p&gt;
&lt;p&gt;A: If you have Adobe Fresco installed, uninstall Fr and try it again.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Quick Fix" scheme="https://blog.driftking.tw/tags/Quick-Fix/"/>
    
      <category term="iPad" scheme="https://blog.driftking.tw/tags/iPad/"/>
    
      <category term="Affinity Photo" scheme="https://blog.driftking.tw/tags/Affinity-Photo/"/>
    
      <category term="Fresco" scheme="https://blog.driftking.tw/tags/Fresco/"/>
    
  </entry>
  
  <entry>
    <title>在 macOS 上安裝 Ruby</title>
    <link href="https://blog.driftking.tw/2021/04/Install-Ruby-On-macOS/"/>
    <id>https://blog.driftking.tw/2021/04/Install-Ruby-On-macOS/</id>
    <published>2021-04-02T13:00:00.000Z</published>
    <updated>2021-04-07T14:23:20.288Z</updated>
    
    <content type="html"><![CDATA[<p>雖然 macOS 已預裝了 Ruby ，但我在使用 <code>gem install</code> 時遇到了個問題：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You don&apos;t have write permissions for the XXX directory.</span><br></pre></td></tr></table></figure><p>後來發現是 macOS 不讓使用者更變預設 Ruby 相關的玩意，用 <code>sudo</code> 去跑安裝當然也不是個選項，所以還是另外獨立安裝一個，再把 <code>PATH</code> 設定到另一個 Ruby 比較方便。</p><a id="more"></a><h2 id="獨立安裝方法"><a href="#獨立安裝方法" class="headerlink" title="獨立安裝方法"></a>獨立安裝方法</h2><p>利用 Homebrew 安裝 <code>chruby</code> 與 <code>ruby-install</code> （此方法屆時可自由切換所需要的 Ruby 版本）</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install chruby ruby-install</span><br></pre></td></tr></table></figure><p>接著用 <code>ruby-install</code> 安裝 Ruby：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby-install ruby</span><br></pre></td></tr></table></figure><p><code>ruby-install</code> 會自動使用 Homebrew 安裝各種需要的 dependencies，然後從 source 編譯 Ruby，所以需要等個一陣子，可以先去泡壺茶休息下 🫖</p><p>安裝完後在 <code>~/.zshrc</code> 或 <code>~/.bashrc</code> 中新增以下兩條路徑（看自己用的是那種 shell，macOS Catalina 之後預設皆為 zsh ）</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">source</span> /usr/<span class="hljs-built_in">local</span>/opt/chruby/share/chruby/chruby.sh</span><br><span class="line"><span class="hljs-built_in">source</span> /usr/<span class="hljs-built_in">local</span>/opt/chruby/share/chruby/auto.sh</span><br></pre></td></tr></table></figure><p>完成後重啟 Terminal 輸入 <code>which ruby</code>，若<em>不是</em>顯示 <code>/usr/bin/ruby</code> 則代表預設的 Ruby 已經不是 macOS 預設的了！</p><p>接著我們可以利用 <code>chruby</code> 選擇 ruby 版本：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chruby 3.0.0</span><br></pre></td></tr></table></figure><p>提供給遇到相同問題的朋友們參考 😉</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://blog.engineyard.com/how-to-install-ruby-on-a-mac-with-chruby-rbenv-or-rvm" target="_blank" rel="noopener">How to Install Ruby on a Mac with chruby, rbenv, or RVM</a></p><p><a href="https://stackoverflow.com/questions/51126403/you-dont-have-write-permissions-for-the-library-ruby-gems-2-3-0-directory-ma" target="_blank" rel="noopener">You don’t have write permissions for the /Library/Ruby/Gems/2.3.0 directory. (mac user)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;雖然 macOS 已預裝了 Ruby ，但我在使用 &lt;code&gt;gem install&lt;/code&gt; 時遇到了個問題：&lt;/p&gt;
&lt;epacse hidden&gt;64&lt;/epacse&gt;

&lt;p&gt;後來發現是 macOS 不讓使用者更變預設 Ruby 相關的玩意，用 &lt;code&gt;sudo&lt;/code&gt; 去跑安裝當然也不是個選項，所以還是另外獨立安裝一個，再把 &lt;code&gt;PATH&lt;/code&gt; 設定到另一個 Ruby 比較方便。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftking.tw/tags/MacOS/"/>
    
      <category term="Ruby" scheme="https://blog.driftking.tw/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>在 macOS 上安裝 Ruby</title>
    <link href="https://blog.driftking.tw/en/2021/04/Install-Ruby-On-macOS/"/>
    <id>https://blog.driftking.tw/en/2021/04/Install-Ruby-On-macOS/</id>
    <published>2021-04-02T13:00:00.000Z</published>
    <updated>2021-04-02T15:23:11.945Z</updated>
    
    <content type="html"><![CDATA[<p>Sorry, this post in currently in Chinese only :(</p><p>雖然 macOS 已預裝了 Ruby ，但我在使用 <code>gem install</code> 時遇到了個問題：</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You don&apos;t have write permissions for the XXX directory.</span><br></pre></td></tr></table></figure><p>後來發現是 macOS 不讓使用者更變預設 Ruby 相關的玩意，用 <code>sudo</code> 去跑安裝當然也不是個選項，所以還是另外獨立安裝一個，再把 <code>PATH</code> 設定到另一個 Ruby 比較方便。</p><a id="more"></a><h2 id="獨立安裝方法"><a href="#獨立安裝方法" class="headerlink" title="獨立安裝方法"></a>獨立安裝方法</h2><p>利用 Homebrew 安裝 <code>chruby</code> 與 <code>ruby-install</code> （此方法屆時可自由切換所需要的 Ruby 版本）</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install chruby ruby-install</span><br></pre></td></tr></table></figure><p>接著用 <code>ruby-install</code> 安裝 Ruby：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby-install ruby</span><br></pre></td></tr></table></figure><p><code>ruby-install</code> 會自動使用 Homebrew 安裝各種需要的 dependencies，然後從 source 編譯 Ruby，所以需要等個一陣子，可以先去泡壺茶休息下 </p><p>安裝完後在 <code>~/.zshrc</code> 或 <code>~/.bashrc</code> 中新增以下兩條路徑（看自己用的是那種 shell，macOS Catalina 之後預設皆為 zsh ）</p><figure class="highlight bash hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">source</span> /usr/<span class="hljs-built_in">local</span>/opt/chruby/share/chruby/chruby.sh</span><br><span class="line"><span class="hljs-built_in">source</span> /usr/<span class="hljs-built_in">local</span>/opt/chruby/share/chruby/auto.sh</span><br></pre></td></tr></table></figure><p>完成後重啟 Terminal 輸入 <code>which ruby</code>，若<em>不是</em>顯示 <code>/usr/bin/ruby</code> 則代表預設的 Ruby 已經不是 macOS 預設的了！</p><p>接著我們可以利用 <code>chruby</code> 選擇 ruby 版本：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chruby 3.0.0</span><br></pre></td></tr></table></figure><p>提供給遇到相同問題的朋友們參考</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://blog.engineyard.com/how-to-install-ruby-on-a-mac-with-chruby-rbenv-or-rvm" target="_blank" rel="noopener">How to Install Ruby on a Mac with chruby, rbenv, or RVM</a></p><p><a href="https://stackoverflow.com/questions/51126403/you-dont-have-write-permissions-for-the-library-ruby-gems-2-3-0-directory-ma" target="_blank" rel="noopener">You don’t have write permissions for the /Library/Ruby/Gems/2.3.0 directory. (mac user)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Sorry, this post in currently in Chinese only :(&lt;/p&gt;
&lt;p&gt;雖然 macOS 已預裝了 Ruby ，但我在使用 &lt;code&gt;gem install&lt;/code&gt; 時遇到了個問題：&lt;/p&gt;
&lt;epacse hidden&gt;116&lt;/epacse&gt;

&lt;p&gt;後來發現是 macOS 不讓使用者更變預設 Ruby 相關的玩意，用 &lt;code&gt;sudo&lt;/code&gt; 去跑安裝當然也不是個選項，所以還是另外獨立安裝一個，再把 &lt;code&gt;PATH&lt;/code&gt; 設定到另一個 Ruby 比較方便。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftking.tw/tags/MacOS/"/>
    
      <category term="Ruby" scheme="https://blog.driftking.tw/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>如何讓 iPad 成為一個專業的畫板</title>
    <link href="https://blog.driftking.tw/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/"/>
    <id>https://blog.driftking.tw/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your Drawing-Experience/</id>
    <published>2021-03-22T12:00:00.000Z</published>
    <updated>2021-03-22T14:50:27.921Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424248/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1700.jpg" alt="iPad 繪圖支架"></p><p>iPad + Apple Pencil 作為目前平板市場上最強大的繪畫筆記生產力組合，令許多人愛不釋手，但大部分使用者可能都會遇到這個問題（特別是使用11吋的朋友）：用筆作業時，光是手放螢幕上就佔了將近 $1/4$ ~ $1/3$ 的螢幕空間，就算將 iPad 平放於桌面手放在旁邊，邊緣與機身的厚度差還是相當卡手，讓體驗不是那麼完美，於是我設計了個算是經濟實惠效果又不錯的繪圖用支架，與各位分享 (<em> ´▽` </em>)</p><a id="more"></a><h1 id="構思"><a href="#構思" class="headerlink" title="構思"></a>構思</h1><p>首先，設計這個的配件目的是為了使在 iPad 螢幕邊緣使用筆時，手能夠在跟螢幕差不多的平面上，讓移動時不會卡手及有個支撐。</p><p>參考了一下目前市面上的繪圖螢幕及繪圖板，周圍都有一部分留空作手托用，但平板在設計上追求的是輕薄窄框便攜，魚與熊掌不可兼得<del>（沒關係我可以手動兼得）</del>，所以想到可以另外做個可拆式手托，在定點使用的時候能夠更加舒適的拿筆作業。</p><p>當然，我應該也不是第一個想到這個問題的人，在網路上也找到了兩個商品有相同的效果，一個是 <a href="https://sketchboardpro.com/" target="_blank" rel="noopener">Sketch Board Pro</a> 但是要價 120USD 實在太貴了，而且體積實在太大；另一個在則是淘寶上的木板支架，正中間挖空可以放平板，價格 1000NTD 左右，但是一整塊又大又厚的木板也是太佔桌面空間，重量太重並且支架只能橫放，感覺不是很理想，所以我最後選擇自己來。</p><p>這次設計上有幾個目標想達成：</p><ul><li>達成螢幕跟手托區是一個平面，可以舒適的支撐手部</li><li>設計對象 iPad 型號為：11吋 iPad Pro 及 Air 4（12吋其實只要加大設計即可</li><li>不阻擋各種功能的使用</li><li>iPad 要能靠磁吸穩穩貼在支撐板上，不隨意滑落，但方便隨時取下</li><li>盡可能的減小體積便於攜帶</li><li>可以直立使用</li><li>價格花費低</li></ul><p>最後經過各種思考跟調整之後決定使用多層合板鐳射切割製作，設計圖如下：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424235/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/Design.jpg" alt="Design"></p><p>預計四層鐳射切割合板，讓 iPad Type-C 口在左大幅減少手托部分與上方 Apple Pencil 的開槽（開槽越多越影響手感），這樣還有個好處是支援直插式的 Type-C Hub。</p><p>磁吸的部分解決的方式就是買副廠的磁吸雙面夾剪下底部黏上木板，當然原廠的厚度跟吸力應該是最穩的，但是價格太高了我捨不得動刀 XD 後來使用的是綠聯的磁吸夾，入手價格約在 300NT 左右，這樣剪歪也不心疼，記得億色 ESR 也有相關產品可以考慮，這邊僅供參考。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424238/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1687.jpg" alt="副廠雙面夾"></p><p>接著利用 AI 繪製出鐳切用的檔案：</p><ul><li>5mm 底板，整體長寬約為 $31cm * 24.5cm$ 並在下方挖一個小凹槽，方便 Apple Pencil 的取放。</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424234/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/Bottom_5mm.jpg" alt="底板 5mm"></p><ul><li>上面疊一層 3mm 底板，目的是預留一個相機孔的留空，讓有貼玻璃貼的情況下也不會直接磨損到鏡頭。</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424234/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/Bottom_3mm.jpg" alt="底板 3mm"></p><ul><li>手托是雙層結構，一層 3mm 一層 5mm，並且使用副廠的磁吸雙面夾底部裁剪下來黏上底板，讓平板能穩定的吸上不晃動不掉落。</li></ul><p>雙層手托的高度 8mm 剛好跟 2mm 的保護套 + iPad 本身 5.9mm 差不多高，並在右邊讓邊緣及手托中間留約 5mm 的縫隙不阻擋喇叭，上方麥克風約 3mm 留空，最後在電源按鈕處留下 2cm 左右的凹槽方便按壓與指紋辨識（Air 4）。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424240/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/Top.jpg" alt="手托"></p><h1 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h1><p>材料不多，如下：</p><ul><li>鐳切緞木合板 $*$ 4 (5mm、3mm各二)</li><li>木質用強力膠</li><li>磁吸式雙面夾</li><li>黑色布膠帶（修補剪裁後的雙面夾用，非必需）</li><li>銼刀（修整木板邊緣用，非必需）</li></ul><h1 id="製作"><a href="#製作" class="headerlink" title="製作"></a>製作</h1><p>拿到切割好的板子其實就完成 80% 了！</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424241/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1684-1.jpg" alt="鐳切好的合板"></p><p>製作過程其實完全沒難度，將雷切好的四塊木板黏合在一起，這邊我使用的是 3M Scotch 木質用強力膠，乾的蠻快的也黏的很穩！接著把剪裁好的雙面磁吸夾粘上木板即可。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424240/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1698.jpg" alt="黏上磁吸夾底部"></p><p>完成！可以搭配一般平板/繪圖支架使用：</p><p>橫放模式：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424248/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1700.jpg" alt="橫放"></p><p>直放模式：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424249/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1701.jpg" alt="直放"></p><p>基本上完成了一開始的構想，手可以移到旁邊後能夠使用的螢幕範圍就更大了，而且磁吸部分也相當穩固，至少拿起來甩或倒過來搖平板都不會掉落（當然這就看買到的磁吸夾品質了）。按鈕喇叭等原有功能都不影響，留空的部分也不會影響到手部的動作，有了下方的凹槽也讓 Apple Pencil 非常容易取下，最後整體的價格（不含支架部分的話）也壓在了 1000NT 內，可說是相當成功！</p><h1 id="改善-Todo"><a href="#改善-Todo" class="headerlink" title="改善/Todo"></a>改善/Todo</h1><p>目標達成，不過這邊還是有幾個點子希望可以改善：</p><ul><li style="list-style: none"><input type="checkbox"> VESA Mount Support（許多繪圖板支架支援 VESA 標準，能鎖住的話會更加穩固）</li><li style="list-style: none"><input type="checkbox"> 更順手的取出 iPad（目前要稍微用摳的）</li><li style="list-style: none"><input type="checkbox"> 不影響太多重量尺寸的情況下加入內建腳架</li></ul><p>有機會的話再看看能不能繼續改良，再跟大家分享，感謝看到這邊的各位 (〃＾＾〃)</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><ul><li><a href="https://developer.apple.com/accessories/Accessory-Design-Guidelines.pdf" target="_blank" rel="noopener">Accessory Design Guidelines for Apple Devices</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424248/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1700.jpg&quot; alt=&quot;iPad 繪圖支架&quot;&gt;&lt;/p&gt;
&lt;p&gt;iPad + Apple Pencil 作為目前平板市場上最強大的繪畫筆記生產力組合，令許多人愛不釋手，但大部分使用者可能都會遇到這個問題（特別是使用11吋的朋友）：用筆作業時，光是手放螢幕上就佔了將近 $1/4$ ~ $1/3$ 的螢幕空間，就算將 iPad 平放於桌面手放在旁邊，邊緣與機身的厚度差還是相當卡手，讓體驗不是那麼完美，於是我設計了個算是經濟實惠效果又不錯的繪圖用支架，與各位分享 (&lt;em&gt; ´▽` &lt;/em&gt;)&lt;/p&gt;
    
    </summary>
    
    
      <category term="iPad" scheme="https://blog.driftking.tw/tags/iPad/"/>
    
      <category term="DIY" scheme="https://blog.driftking.tw/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>Make an iPad Drawing Board That Improves Your Drawing Experience</title>
    <link href="https://blog.driftking.tw/en/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/"/>
    <id>https://blog.driftking.tw/en/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your Drawing-Experience/</id>
    <published>2021-03-22T12:00:00.000Z</published>
    <updated>2021-03-22T15:22:59.793Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424248/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1700.jpg" alt="iPad Drawing Board"></p><p>iPad and Apple Pencil combo probably has the best drawing experience in the tablet market for now, tons of people love using their iPad to create amazing artworks, but you might encounter an common issue (especially for 11 inch user): The iPad’s bezel is way too small for your hand to rest on, even it’s laid down flat on the table.</p><p>Though the iPad is already very thin (5.9mm on pro model), the drawing experience is still far from drawing on a flat thin paper, and putting hand on iPad just waste a large portion of the screen, which is the main reason I come up with this project today. The result was quite good, it’s very easy to make and costs under 35 dollar, so I want to share with you today.</p><a id="more"></a><h1 id="Drafting"><a href="#Drafting" class="headerlink" title="Drafting"></a>Drafting</h1><p>First, this project is design to create a flat surface for your hand to rest on when drawing on an iPad. </p><p>Most drawing tablets on the market always have some sort of bezel for hands to rest on, but it’s imaginable that Apple will never design like this on a consumption/portable tablet. </p><p>Since iPad is not only for drawing purpose, so I came up with this idea: I can make myself an iPad drawing board, that is detachable when you don’t need it (like when you go on a trip and just want to watch Netflix on it), which sounds great right?</p><p>Of course I’m not the first one trying to solve this issue, there’s already similar products on the market: <a href="https://sketchboardpro.com/" target="_blank" rel="noopener">Sketch Board Pro</a> but the $120’s price tag is just a bit too high, and the size is too large for my table. The other one I found on Taobao is pretty cheap like around 30~40USD, but it’s very thick, heavy and most importantly, the size is too large for my table too.</p><p>So I decide to make one fits myself.</p><p>The goals for this project:</p><ul><li>The hand can rest on the same level with iPad’s screen</li><li>Design for iPad Pro 11 inch and iPad Air 4</li><li>Won’t block any feature on iPad (buttons, speaker, etc.)</li><li>iPad can attach on it with magnet</li><li>As portable as possible</li><li>Can use both in portrait and landscape mode</li><li>The cheaper the better</li></ul><p>After serious thought, here’s my solution:</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424235/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/Design.jpg" alt="Design"></p><p>The material I plan to use is linden plywood, 4 layers in total.</p><p>The reason that I make the USB C slot facing outside is because it can be used with any accessory, like a Type-C hub for example.</p><p>The magnet part to hold iPad is actually pretty easy to deal with, I just use third-party magnet folio cover and cut it in half, then glued onto the plate and that’s it. You can use the Apple official folio cover to get the best result but I think that’s an over kill LOL.</p><p>BTW for those who interest, the folio cover I use is from UGreen, I’ve seen ESR has the same kind of product too. All of them works I think.</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424238/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1687.jpg" alt="Third-party folio cover"></p><p>Then use Illustrator to draw the outline of the board.</p><ul><li>5mm Bottom plate, about $31cm * 24.5cm$ and have a notch for Apple Pencil.</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424234/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/Bottom_5mm.jpg" alt="Bottom plate 5mm"></p><ul><li>3mm Bottom plate, it will glue to the top of 5mm one, it has a camera hole to fit the camera bump.</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424234/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/Bottom_3mm.jpg" alt="Bottom plate 3mm"></p><ul><li>The hand rest has 2 layers too, one for 3mm the other is 5mm. 8mm total is about as same thickness as the iPad plus the folio cover. And there’s a cutout at the bottom right for power button or Air 4’s finger print reader.</li></ul><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424240/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/Top.jpg" alt="Hand rest"></p><h1 id="Material-Tool"><a href="#Material-Tool" class="headerlink" title="Material/Tool"></a>Material/Tool</h1><ul><li>Laser cutting linden plywood</li><li>Adhesive for wood (I use 3M Scotch, you can use white glue but needs more time to dry)</li><li>Folio cover</li><li>Black tape (fix the cover edge after cutting)</li><li>File (smooth down the edge of woods)</li></ul><h1 id="Make-it-real"><a href="#Make-it-real" class="headerlink" title="Make it real"></a>Make it real</h1><p>It’s actually almost done after we got the laser cutting plywood.</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424241/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1684-1.jpg" alt="Laser cutting linden plywood"></p><p>Cut the folio cover and glue them together, done!</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424240/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1698.jpg" alt="Add the folio cover"></p><p>You can use it with any tablet/laptop stand you want!</p><p>Landscape mode:</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424248/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1700.jpg" alt="Landscape"></p><p>Portrait mode:</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424249/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1701.jpg" alt="Portrait"></p><p>It’s just what we want right? And iPad is very stable thanks to the magnet cover underneath it, the speaker and buttons works just like normal, and the cutout for the Apple Pencil works as intended, it’s very easy to take it down and start drawing. Plus the size isn’t crazy big so we can take it to the coffee shop just like taking a 13 inch laptop. The best of all, it just cost less than 35 dollar!</p><h1 id="Improvement-Todo"><a href="#Improvement-Todo" class="headerlink" title="Improvement/Todo"></a>Improvement/Todo</h1><p>Well, there’s still some improvement that I think is great:</p><ul><li style="list-style: none"><input type="checkbox"> VESA Mount Support (many drawing stand has VESA support)</li><li style="list-style: none"><input type="checkbox"> More easy way to dismount the iPad</li><li style="list-style: none"><input type="checkbox"> Add light-weight built-in stand</li></ul><p>Thanks for reading! (〃＾＾〃)</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://developer.apple.com/accessories/Accessory-Design-Guidelines.pdf" target="_blank" rel="noopener">Accessory Design Guidelines for Apple Devices</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1616424248/blog/2021/03/Make-an-iPad-Drawing-Board-That-Improve-Your%20Drawing-Experience/IMG_1700.jpg&quot; alt=&quot;iPad Drawing Board&quot;&gt;&lt;/p&gt;
&lt;p&gt;iPad and Apple Pencil combo probably has the best drawing experience in the tablet market for now, tons of people love using their iPad to create amazing artworks, but you might encounter an common issue (especially for 11 inch user): The iPad’s bezel is way too small for your hand to rest on, even it’s laid down flat on the table.&lt;/p&gt;
&lt;p&gt;Though the iPad is already very thin (5.9mm on pro model), the drawing experience is still far from drawing on a flat thin paper, and putting hand on iPad just waste a large portion of the screen, which is the main reason I come up with this project today. The result was quite good, it’s very easy to make and costs under 35 dollar, so I want to share with you today.&lt;/p&gt;
    
    </summary>
    
    
      <category term="iPad" scheme="https://blog.driftking.tw/tags/iPad/"/>
    
      <category term="DIY" scheme="https://blog.driftking.tw/tags/DIY/"/>
    
      <category term="illustration" scheme="https://blog.driftking.tw/tags/illustration/"/>
    
  </entry>
  
  <entry>
    <title>MacOS - 軟體無法開啟</title>
    <link href="https://blog.driftking.tw/2020/06/macos-app-cant-be-opened/"/>
    <id>https://blog.driftking.tw/2020/06/macos-app-cant-be-opened/</id>
    <published>2020-06-08T12:44:57.000Z</published>
    <updated>2021-02-23T06:48:23.921Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1591620644/blog/2020/06/Screen_Shot_2020-06-08_at_8.47.52_PM.png" alt></p><p>在網路上下載了一個 MacOS 的 App，但卻提示如上圖一樣無法開啟該如何處理？<br><a id="more"></a></p><blockquote class="colorquote info"><p>注意！這跟因為 MacOS 保護機制被攔截下來而無法開啟的 App 是不一樣的哦（非App Store下載或未識別開發者的軟體），想開啟此類警告的方法可以參照 <a href="https://support.apple.com/zh-tw/HT202491" target="_blank" rel="noopener">Apple 官方文件</a></p></blockquote><h1 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h1><ol><li>解決方法是透過終端機（Terminal）操作，首先 <code>Cmd(⌘)+空白鍵</code> 輸入 <code>Terminal</code> 啟動終端機。</li><li>接著輸入 App 所在的路徑如： <code>/Users/[YourUserName]/Downloads/</code>，或是簡單的打開 Finder 把 App 所在的資料夾拖到 Terminal 視窗後按 Enter 也可以。</li><li>再來更改軟體內啟動程式的權限(Test.app 自行替換換成要開啟的 App 名稱)： <code>chmod +x Test.app/Contents/MacOS/*</code> (+x代表可執行)</li><li>此時 App 應該就能夠正常執行，如果遇到非 App Store 等安全性問題被攔下，按照上述 <a href="https://support.apple.com/zh-tw/HT202491" target="_blank" rel="noopener">Apple 官方文件</a> 開啟即可。</li></ol><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://superuser.com/questions/898124/the-application-someapp-app-can-t-be-opened" target="_blank" rel="noopener">The application “SomeApp.app” can’t be opened</a><br><a href="https://support.apple.com/zh-tw/HT202491" target="_blank" rel="noopener">在 Mac 上開啟 app</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1591620644/blog/2020/06/Screen_Shot_2020-06-08_at_8.47.52_PM.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;在網路上下載了一個 MacOS 的 App，但卻提示如上圖一樣無法開啟該如何處理？&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MacOS" scheme="https://blog.driftking.tw/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>macos-app-cant-be-opened</title>
    <link href="https://blog.driftking.tw/en/2020/06/macos-app-cant-be-opened/"/>
    <id>https://blog.driftking.tw/en/2020/06/macos-app-cant-be-opened/</id>
    <published>2020-06-08T12:44:57.000Z</published>
    <updated>2021-03-22T14:30:45.484Z</updated>
    
    <content type="html"><![CDATA[<p>Sorry, this post in currently in Chinese only :(</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Sorry, this post in currently in Chinese only :(&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>羅技 Master 2S 拇指鍵維修筆記</title>
    <link href="https://blog.driftking.tw/2020/02/Logitech-Master-2S-Gesture-Button-Fix/"/>
    <id>https://blog.driftking.tw/2020/02/Logitech-Master-2S-Gesture-Button-Fix/</id>
    <published>2020-02-09T15:48:17.000Z</published>
    <updated>2021-02-23T06:48:23.919Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581517605/blog/2020/02/Logitech-Master-2S-Gesture-Button-Fix/IMG_20200212_214829.jpg" alt></p><p>前陣子我的滑鼠：Logitech Master 2S 左邊的拇指鍵突然按下之後卡住了，連帶的整個滑鼠都沒辦法使用（包括去 Logitech Option 裡面把拇指鍵禁用都無效），看了下保固發現剛好也過了(´･_･`) </p><p>Google 了下發現不少人都有同樣問題，幸好維修不難，只要把兩個螺絲轉鬆即可，也不用買新零件來替換。<a id="more"></a></p><h1 id="材料及工具"><a href="#材料及工具" class="headerlink" title="材料及工具"></a>材料及工具</h1><ul><li>Torx T5 梅花起子</li><li>#PH1 十字起子</li><li>替換用滑鼠腳墊</li></ul><h1 id="維修過程"><a href="#維修過程" class="headerlink" title="維修過程"></a>維修過程</h1><p>首先拆下腳墊（膠跟表層容易分開拆的時候要注意）。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581515232/blog/2020/02/Logitech-Master-2S-Gesture-Button-Fix/IMG_20191226_131652.jpg" alt></p><p>上方為兩個 T5 梅花螺絲，兩側腳墊下則是四個 #1 十字螺絲。</p><p>接著抓住上殼兩側稍微施力打開，動作不要太大力不然會扯到上下 PCB 排線。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581515749/blog/2020/02/Logitech-Master-2S-Gesture-Button-Fix/IMG_20191224_201832.jpg" alt></p><p>如果只是要修拇指鍵的話其實大可不必拆排線，只需將下圖中兩個黑色螺絲稍微轉鬆半圈到一圈即可（可以按按看按鈕是否恢復正常），不過相較正常的狀況按鍵會稍微肉一點。</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581516151/blog/2020/02/Logitech-Master-2S-Gesture-Button-Fix/IMG_0691.jpg" alt></p><p>由於我打算順便把微動換掉所以把排線先拆下來，方法是將米白色那片往後拉，就可以卸下排線。</p><h1 id="更換微動"><a href="#更換微動" class="headerlink" title="更換微動"></a>更換微動</h1><p>首先將電池艙螺絲及電池艙卸下後，拆下四顆固定左右鍵 PCB 的螺絲：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581516487/blog/2020/02/Logitech-Master-2S-Gesture-Button-Fix/IMG_0692.jpg" alt></p><p>原廠的微動是中國製 D2FC-F-7N(10M) 十萬點擊壽命的版本，我覺得手感普普而且聲音蠻大，這次順便換成了日本製 D2F-F-3-7（傳說中的頂級微動？），換了之後聲音小了不少（但絕對不是到靜音那麼誇張）。用起來回彈跟手感也都蠻合自己胃口的，這部分玩過的滑鼠微動不多不太會形容 XD</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581516934/blog/2020/02/Logitech-Master-2S-Gesture-Button-Fix/IMG_20191226_132636.jpg" alt></p><p>關於要怎麼換微動應該蠻容易的，不是本篇主題就不詳述了，完成後按順序鎖回去即可。</p><h1 id="Murmur"><a href="#Murmur" class="headerlink" title="Murmur"></a>Murmur</h1><p>這次問題的罪魁禍首如下圖，萬惡的羅技塑膠部件（兩銀色螺絲鎖住的部分）：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581517063/blog/2020/02/Logitech-Master-2S-Gesture-Button-Fix/IMG_20191226_141928.jpg" alt></p><p>推測是因為那片壓在拇指鍵微動上的塑膠件用久了就很容易有些變形，由於塑膠件及微動非常接近，稍微變形後容易變成按下去後就一直壓住微動，網路上蠻多人也都是一年多開始出現問題，恰好是保固過的時間(ry</p><p>這情況好像跟在 G27 上遇到的問題有點類似，同樣都是塑膠老化造成…… 雖然維修不算困難不過對於一個官方要價 3,000 NT 的滑鼠實在有點…… ╮(╯_╰)╭</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://toemat.com/logitech-mx-master-fix/" target="_blank" rel="noopener">Fixing the Logitech MX Master Scroll Wheel</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581517605/blog/2020/02/Logitech-Master-2S-Gesture-Button-Fix/IMG_20200212_214829.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;前陣子我的滑鼠：Logitech Master 2S 左邊的拇指鍵突然按下之後卡住了，連帶的整個滑鼠都沒辦法使用（包括去 Logitech Option 裡面把拇指鍵禁用都無效），看了下保固發現剛好也過了(´･_･`) &lt;/p&gt;
&lt;p&gt;Google 了下發現不少人都有同樣問題，幸好維修不難，只要把兩個螺絲轉鬆即可，也不用買新零件來替換。&lt;/p&gt;
    
    </summary>
    
    
      <category term="DIY" scheme="https://blog.driftking.tw/tags/DIY/"/>
    
      <category term="維修筆記" scheme="https://blog.driftking.tw/tags/%E7%B6%AD%E4%BF%AE%E7%AD%86%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>Logitech_Master_2S_Gesture_Button_Fix</title>
    <link href="https://blog.driftking.tw/en/2020/02/Logitech-Master-2S-Gesture-Button-Fix/"/>
    <id>https://blog.driftking.tw/en/2020/02/Logitech-Master-2S-Gesture-Button-Fix/</id>
    <published>2020-02-09T15:48:17.000Z</published>
    <updated>2021-03-22T14:30:42.766Z</updated>
    
    <content type="html"><![CDATA[<p>Sorry, this post in currently in Chinese only :(</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Sorry, this post in currently in Chinese only :(&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>為什麼我的帳號會被盜？淺談密碼安全及實體金鑰</title>
    <link href="https://blog.driftking.tw/2020/02/Why-My-Account-Got-Hacked-The-Password-Security-and-Physical-Key/"/>
    <id>https://blog.driftking.tw/2020/02/Why-My-Account-Got-Hacked-The-Password-Security-and-Physical-Key/</id>
    <published>2020-02-05T13:48:41.000Z</published>
    <updated>2021-02-23T06:48:23.920Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581007571/blog/2020/02/Why-My-Account-Got-Hacked-The-Password-Security-and-Physical-Key/furchenpasswd.jpg" alt></p><p>還在不同網站使用相同的密碼嗎？你的密碼是常見的組合或幾個英文數字湊合嗎？在資訊科技的進步的現在，不論年紀大小、身份，幾乎人人都有數個甚至上百的帳號密碼。網路上層出不窮的帳號被駭客攻擊、個資洩漏事件，就算是 Google、Amazon、Facebook 等大型企業也都無可避免，那麼這時候如何靠自己保護好帳號安全就顯得非常重要了。<a id="more"></a></p><p>我想這如果是方面的專家應該也不會看這篇文XD，所以會盡量用簡單易懂的方式說明。如果沒興趣知道背後的原理，只想知道如何保護帳號的朋友們可以直接跳到結論：<a href="#如何保護好自己的帳號安全？">如何保護好自己的帳號安全？</a></p><p>在知道如何保護自己前，當然要先來瞭解密碼這玩意到底是如何運作的。</p><h1 id="我的密碼是怎麽被儲存的？"><a href="#我的密碼是怎麽被儲存的？" class="headerlink" title="我的密碼是怎麽被儲存的？"></a>我的密碼是怎麽被儲存的？</h1><p>大部分人可能會認為帳號被駭就是單純有某個厲害的駭客在一片黑底畫面上打了一堆指令，然後擊破了資料庫拿到了你的帳號密碼。實際上流程確實大概是如此，不過有時候不是駭客技術高超，而是你所使用的服務公司並沒有做好基本的密碼儲存。</p><p>為了方便理解，首先可以先把資料庫想像是一個有保全守著的倉庫，帳號密碼等資料就存放在裡面。</p><h2 id="明文儲存"><a href="#明文儲存" class="headerlink" title="明文儲存"></a>明文儲存</h2><p>明文儲存是最爛的一種方式，顧名思義就是直接把密碼原封不動的放進資料庫中如下表：</p><table><thead><tr><th>ID</th><th>帳號</th><th>密碼</th></tr></thead><tbody><tr><td>0</td><td>account1</td><td>123456</td></tr><tr><td>1</td><td>account2</td><td>abc1234</td></tr></tbody></table><p>這種方法儲存的密碼，只要攻擊者拿到資料庫的讀取權限就完蛋了（可能透過系統、程式漏洞等方式）。這意味著只要躲過保全衝進房間，密碼跟帳號就一覽無遺 (´ﾟдﾟ`) 非常不安全。</p><p>然而現在仍有不少網站還是使用這種方式處理，最簡單的判別方式就是按下忘記密碼，他們會直接發送你的完整密碼到信箱而不是要求重設定，代表儲存方式是明文儲存，正常情況就算是管理資料庫的工程師也不可能會知道密碼的明文是什麼(下面會提到為何)，所以這樣儲存密碼是非常非常非常危險的。</p><h2 id="加密-Hash"><a href="#加密-Hash" class="headerlink" title="加密/Hash"></a>加密/Hash</h2><p>把密碼加密或 Hash（雜湊）處理過會比較安全，意思是密碼會先放進一個函式處理，將密碼變成一串跟原本完全不同的英數字，而且只要改動密碼中任一個文字都會讓結果完全不同。登入帳號時，系統也是將你輸入的密碼經過同樣 Hash 處理後，跟資料庫裡面的數值比對是不是一樣即可。</p><table><thead><tr><th>ID</th><th>帳號</th><th>密碼(MD5 Hash)</th></tr></thead><tbody><tr><td>0</td><td>account1</td><td>E10ADC3949BA59ABBE56E057F20F883E</td></tr><tr><td>1</td><td>account2</td><td>A141C47927929BC2D1FB6D336A256DF4</td></tr></tbody></table><p>這種方法比起方法比起明文儲存好了些，因為攻擊者就算得到了資料庫也只能看到 Hash 過後的值。但是這種方式也不是沒有缺點，如果有兩個帳號使用了相同的密碼，那麼他們的 Hash 結果就會相同，這時可以靠其他資料猜測或彩虹表(Rainbow Table 一種整理出來的常見密碼 Hash 值表)輕易的找出密碼的原文。</p><p>簡單來說，相當於密碼寫在紙上後，會用先一把對應的鑰匙鎖起來，但是如果有相同的密碼會被放到同樣的保險箱中(原文值相等所以 Hash 值也相等)，在資料庫中可以看到這兩個相同密碼是被放在一起的，這樣只要保險箱被破解，其他放在同樣的密碼也就跟著全遭殃了。</p><blockquote class="colorquote info"><p>補充：Hash 處理過後是不可逆的，相當於這把鑰匙只能把它鎖起來不能解開，而加密的鑰匙是能夠加/解密的（依照不同加密方式可以視同一把鑰匙或不同把鑰匙）</p></blockquote><h2 id="Hash-Salting-加鹽"><a href="#Hash-Salting-加鹽" class="headerlink" title="Hash + Salting (加鹽)"></a>Hash + Salting (加鹽)</h2><p>Salting 加鹽是在上述 Hash 前，在密碼後面加上一串隨機產生的字符（像是隨機撒些鹽巴的感覺），然後再進行 Hash ，這樣即使是相同密碼，Hash 出來也是完全不同的結果，增加攻擊者破譯出密碼的難度。</p><table><thead><tr><th>ID</th><th>帳號</th><th>密碼+鹽(MD5 Hash)</th></tr></thead><tbody><tr><td>0</td><td>account1</td><td>01A682CCB070DFE296DF4BBAD02950C8</td></tr><tr><td>1</td><td>account2</td><td>B9BAA63E43E35D93366C4401EFFCC631</td></tr></tbody></table><p>這種方法解決了上述同樣的密碼被放在一起的問題，大幅增加攻擊者攻擊的難度，但是使用的密碼過於簡單常見還是很容易被破解的，方法會在下方如何攻擊提到。</p><blockquote class="colorquote info"><p>此處使用MD5僅為示範用，實際應該選擇安全性較高的 Hash 演算法。</p></blockquote><h1 id="駭客是怎麽盜取我的密碼的？"><a href="#駭客是怎麽盜取我的密碼的？" class="headerlink" title="駭客是怎麽盜取我的密碼的？"></a>駭客是怎麽盜取我的密碼的？</h1><p>我們可能都看過朋友的帳號被盜用、或是某某知名人物的私人資訊檔案被流出，甚至自己曾經也是受害者。想知道如何保護好自己的話，當然得先瞭解一下所謂「駭客」是怎麽拿到你的帳號密碼的囉！（輸入密碼被看到、密碼借朋友不小心外流等比較物理性的方式就不另外討論）</p><blockquote class="colorquote info"><p>這邊我們不討論明文儲存的密碼，畢竟那只要有系統漏洞就完蛋了。</p></blockquote><p>以下攻擊皆假設在密碼有經過 Hash 的方式處理下，攻擊者拿到了帳號密碼的資料庫，要取得密碼的方式就是透過運算能力很強的電腦，把一串密碼經過 Hash 過後跟資料庫比對，如果相等就代表找到密碼原文了。</p><h2 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h2><p>暴力破解是最簡單無腦的方法，實際應用比例不高。電腦會把各種密碼組合都 Hash 後去比對。</p><p>今天一個資料庫被攻擊者拿到了，可以放到電腦中將各種密碼組合都 Hash 過後進行比對，如果一樣的就可以記錄下來，表示這組密碼的 Hash 值是多少，這種方式<strong>越短(8字元以內)、全是小寫、英數字簡單的排列等不複雜的密碼最容易被破解出來</strong>，若是用 MD5、SHA-1 等比較老舊的 Hash 函式甚至幾秒內就能輕鬆破解。</p><h2 id="字典攻擊"><a href="#字典攻擊" class="headerlink" title="字典攻擊"></a>字典攻擊</h2><p>雖然上述的暴力破解，要是用了長密碼就會指數性增加破解的難度(需要嘗試的排列組合太多種)，但是要對付長密碼現在最常見的方式其實是用字典攻擊。</p><p>假設今天我用了一個密碼 “password1”，有九個字元。雖然這時暴力破解會變的非常困難，但是卻是一個超多人都會用的密碼 <a href="https://edition.cnn.com/2019/04/22/uk/most-common-passwords-scli-gbr-intl/index.html" target="_blank" rel="noopener">根據此報告使用率排名第九</a>，字典攻擊就是用在這種地方。所謂字典通常是大部分常見被破解的密碼 Hash 值的記錄表，裡面有大量常用密碼的對應資料，可以直接比對資料庫拿到的密碼 Hash 值得到密碼原文，在現實資料庫做破解效率上會比暴力破解高很多。</p><p>常用密碼的數量其實非常龐大，被洩漏的密碼可能幾億上到幾十億，像是一些<strong>有規律的</strong> “password1234”、”password12341234” 等通常都被重複使用過，一些粗話或<strong>有意義的英文單字</strong>都非常容易被字典收錄，或是在<strong>單字或名字後面加日期</strong>等，雖然長度夠但反而是更容易被破解（還有那種用<strong>注音對照英文</strong>打出來的，只要有人用過一樣不安全）。另外 <strong>“Pa$$w0rd”</strong> 之類把幾個字改成相似符號的也很常見，絕對不是替換掉幾個特殊符號換個大小寫就代表密碼沒問題。</p><h1 id="怎麼樣的密碼是弱密碼？"><a href="#怎麼樣的密碼是弱密碼？" class="headerlink" title="怎麼樣的密碼是弱密碼？"></a>怎麼樣的密碼是弱密碼？</h1><p>根據上面兩種攻擊方式，我們可總結出哪些密碼是太弱容易被破解的：</p><ol><li>長度太短(8以內)</li><li>純數字</li><li>全小寫/大寫</li><li>有意義的文字(包含其中幾個字替換符號、尾端加數字生日等)</li><li>常用的注音文密碼(例如：au4a83)</li></ol><h1 id="如何保護好自己的帳號安全？"><a href="#如何保護好自己的帳號安全？" class="headerlink" title="如何保護好自己的帳號安全？"></a>如何保護好自己的帳號安全？</h1><p>我們不一定能保證存放帳號資料庫資料不外流，但是可以做以下幾件事情來保護自己的帳號安全，讓攻擊者就算拿到資料庫也無法輕易得知密碼：</p><h2 id="用一個不容易被破解的密碼"><a href="#用一個不容易被破解的密碼" class="headerlink" title="用一個不容易被破解的密碼"></a>用一個不容易被破解的密碼</h2><p>建議可以選四個以上平時較少使用單字或名詞排列，雖然是有字面意義的但是長度夠長的話基本上可以免去暴力破解、也不容易跟別人的密碼相同，就比較不容易被字典收錄。想要更進一步加強的話可以隨機在一些地方加上一個特殊符號，就能夠再提升破解難度。</p><h2 id="每個網站都使用不同的密碼"><a href="#每個網站都使用不同的密碼" class="headerlink" title="每個網站都使用不同的密碼"></a>每個網站都使用不同的密碼</h2><p>這是非常重要但大部分人都沒做到的（我自己以前也是），假設一個密碼真的很不幸的被破解了，要是其他網頁都用同樣的密碼，攻擊者就能夠輕易的去嘗試登入你所有的帳號。但是帳號一多了還是很難記住所有密碼，此時就建議用密碼管理器來代勞。</p><h2 id="使用密碼管理器-Password-Manager"><a href="#使用密碼管理器-Password-Manager" class="headerlink" title="使用密碼管理器(Password Manager)"></a>使用密碼管理器(Password Manager)</h2><p>密碼處理最好的方法當然是用密碼管理器，他能夠產生的隨機長密碼，這樣只要記住一個安全的主密碼，其他密碼就可以自動填入或複製貼上，藉此登入所有的帳號。基本上主流的密碼管理器安全性都不差，所以只要做好保護措施基本上不太會有問題，這裡就不另外推薦。</p><h2 id="開啟兩步驗證-2FA-Two-Factor-Authentication"><a href="#開啟兩步驗證-2FA-Two-Factor-Authentication" class="headerlink" title="開啟兩步驗證(2FA, Two-Factor Authentication)"></a>開啟兩步驗證(2FA, Two-Factor Authentication)</h2><p>兩步驟驗證顧名思義就是要兩個步驟才能夠登入。目前市面上最常見的 2FA 是簡訊驗證，也就是登入時除了輸入帳號密碼，系統還會發SMS簡訊給你一串數字，要求輸入數字才能夠登入。</p><p>其他常見的 2FA 登入還有：</p><ul><li>TOTP（Time-based One-time Password 時間性一次性密碼）<blockquote><p>會利用時間來產生一段密碼(通常六位數)，在30秒內會失效，其他像 Steam 所使用的驗證器(Authenticator)也是TOTP的一種。</p></blockquote></li><li>Trusted Device 信任裝置<blockquote><p>Google 帳號通常都會開這個功能，登入時會要求在你平常使用的裝置上按確認登入，相比TOTP方便了些。</p></blockquote></li><li>Backup Codes 備份碼<blockquote><p>假設手機無法接收簡訊、信任裝置也無法使用，這時就能夠使用備份碼登入，通常為備援選項。這種備份碼通常都是一次性的，使用後就要重新產生新的備份碼。</p></blockquote></li></ul><blockquote class="colorquote info"><p>目前簡訊方式的 2FA 已經被認為不夠安全、能夠利用攔截或釣魚的方式攻擊，可以的話盡量不要使用。</p></blockquote><h2 id="實體金鑰"><a href="#實體金鑰" class="headerlink" title="實體金鑰"></a>實體金鑰</h2><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1580971326/blog/2020/02/Why-My-Account-Got-Hacked-The-Password-Security-and-Physical-Key/IMG_20191223_165024.jpg" alt></p><p>實體金鑰顧名思義就是一把實體的 USB 鑰匙(通常作為實體的 2FA 驗證手段)，設定完成之後會要求插入該金鑰才能夠登入，常見的有 <a href="https://www.yubico.com/" target="_blank" rel="noopener">Yubikey</a> 、 <a href="https://cloud.google.com/titan-security-key" target="_blank" rel="noopener">Titan Security Key</a> 等。是目前安全性最高的等級的 2FA 方式，而且相比其他方式使用上不算是麻煩（某些程度上用實體金鑰還比輸入TOTP或等簡訊還快）</p><p>實體金鑰相對於傳統 2FA 的優勢是，斷絕了被釣魚網站騙的可能。簡訊等方式還是有可能會被攔截或利用欺騙方式取得，但實體金鑰是無法偽造及複製的，唯一的攻擊方法只有取得帳號密碼而且實體金鑰物理上被拿走才能夠登入。</p><p>不過我認為對於一般使用者來說，實體金鑰目前還是非必要的，目前很多主流網路服務商都有提供實體金鑰的 2FA 選項了(Google、Twitter、Facebook、Gandi等)，但是還是沒有到很普及的程度，通常一隻金鑰需要花費 40~50USD 不等，加上在行動裝置支援上還不算非常成熟，對大部分人來說不一定是那麼適合。</p><p>如果你想非常好的保護自己的帳號安全，瞭解實體金鑰的使用，我會在另一篇文章詳述(待補)。</p><h1 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h1><p>要保護帳號安全可能常常聽到，不過多數人不會當一回事或嫌麻煩，當被盜之後資料洩漏、信用卡被盜刷才後悔莫及。資訊安全如地震火災等天災，未雨綢繆遠大於亡羊補牢。如果你真正在乎你的帳號隱私及安全，現在是時候把那些弱密碼處理一下了(^u^)（<del>至於那些覺得沒差的，駭客們會非常感謝你們的</del></p><ol><li>密碼強度要夠、不要重複使用密碼</li><li>使用密碼管理器</li><li>開啟兩步驟驗證(避免使用簡訊驗證)</li><li>使用實體金鑰（可選）</li></ol><p>以上，祝各位下次不會在密碼洩漏清單中看到自己的密碼 (ゝ∀･)</p><h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://www.youtube.com/watch?v=3NjQ9b3pgIg" target="_blank" rel="noopener">How to Choose a Password - Computerphile</a></p><p><a href="https://www.cnet.com/how-to/strong-passwords-9-rules-to-help-you-make-and-remember-your-login-credentials/" target="_blank" rel="noopener">Strong passwords: 9 rules to help you make and remember your login credentials</a></p><p><a href="https://www.youtube.com/watch?v=8ZtInClXe1Q" target="_blank" rel="noopener">How NOT to Store Passwords! - Computerphile</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1581007571/blog/2020/02/Why-My-Account-Got-Hacked-The-Password-Security-and-Physical-Key/furchenpasswd.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;還在不同網站使用相同的密碼嗎？你的密碼是常見的組合或幾個英文數字湊合嗎？在資訊科技的進步的現在，不論年紀大小、身份，幾乎人人都有數個甚至上百的帳號密碼。網路上層出不窮的帳號被駭客攻擊、個資洩漏事件，就算是 Google、Amazon、Facebook 等大型企業也都無可避免，那麼這時候如何靠自己保護好帳號安全就顯得非常重要了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="密碼" scheme="https://blog.driftking.tw/tags/%E5%AF%86%E7%A2%BC/"/>
    
  </entry>
  
  <entry>
    <title>Why_My_Account_Got_Hacked_-_The_Password_Security_and_Physical_Key</title>
    <link href="https://blog.driftking.tw/en/2020/02/Why-My-Account-Got-Hacked-The-Password-Security-and-Physical-Key/"/>
    <id>https://blog.driftking.tw/en/2020/02/Why-My-Account-Got-Hacked-The-Password-Security-and-Physical-Key/</id>
    <published>2020-02-05T13:48:41.000Z</published>
    <updated>2021-03-22T14:30:39.975Z</updated>
    
    <content type="html"><![CDATA[<p>Sorry, this post in currently in Chinese only :(</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Sorry, this post in currently in Chinese only :(&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用 Raspberry Pi 控制 PWM 風扇及轉速偵測 (軟體PWM控制)</title>
    <link href="https://blog.driftking.tw/2019/11/Using-Raspberry-Pi-to-Control-a-PWM-Fan-and-Monitor-its-Speed/"/>
    <id>https://blog.driftking.tw/2019/11/Using-Raspberry-Pi-to-Control-a-PWM-Fan-and-Monitor-its-Speed/</id>
    <published>2019-11-25T14:00:00.000Z</published>
    <updated>2021-03-29T14:25:15.753Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574826956/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/Fur_chan_w_Noctua_fan_2.jpg" alt></p><p>相信不少人都會為熱情的 Pi 4 加上風扇散熱，不過小風扇噪音就成了問題，由於 Pi 也不是隨時都滿載需要風扇全速運轉，所以我們可以利用 <a href="https://zh.wikipedia.org/wiki/%E8%84%88%E8%A1%9D%E5%AF%AC%E5%BA%A6%E8%AA%BF%E8%AE%8A" target="_blank" rel="noopener">PWM (Pulse Width Modulation)</a> 來控制轉速。讓風扇在提高到一定溫度時才啟動，或是降低轉速來降低噪音。<a id="more"></a></p><h1 id="硬體接線"><a href="#硬體接線" class="headerlink" title="硬體接線"></a>硬體接線</h1><p>我使用風扇是 <a href="https://noctua.at/en/nf-a4x10-5v-pwm" target="_blank" rel="noopener">Noctua NF-A4 5V PWM</a> ，一個 40mm、5V 的 PWM 控速風扇，下圖是本次所使用的腳位：</p><ul><li>黃色黑色分別為 5V 電源及接地</li><li>綠色為轉速信號</li><li>藍色為 PWM 控制訊號輸入</li></ul><blockquote class="colorquote info"><p>若風扇不支援 PWM 轉速控制（只有兩線或三線）可以參考 <a href="https://www.youtube.com/watch?v=oJ32CMxliCQ" target="_blank" rel="noopener">#138 Variable Speed Cooling Fan for Raspberry Pi using PWM and PID controller</a> 此影片或 <a href="https://www.instructables.com/id/PWM-Regulated-Fan-Based-on-CPU-Temperature-for-Ras/" target="_blank" rel="noopener">PWM Regulated Fan Based on CPU Temperature for Raspberry Pi</a> 利用 BJT 電晶體來做 PWM 控制。</p></blockquote><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574608109/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_93F334AD3BFC-1.jpg" alt></p><p>轉速訊號線（綠）的部分，由於風扇內是一個開集極電路（OC），所以需要一個上拉電阻（Pull-up resistor）至 Vcc 才能夠讀取到波形，這邊可以參考 <a href="https://noctua.at/media/wysiwyg/Noctua_PWM_specifications_white_paper.pdf" target="_blank" rel="noopener">Noctua PWM 規格白皮書(英文)</a>（大部分的風扇轉速訊號應該都是這種設計，保險起見建議還是要查看廠商提供的資料）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574608621/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_6F5175335AA4-1.jpg" alt></p><blockquote class="colorquote danger"><p>注意！樹莓派的 GPIO 為 3.3V，所以上拉電阻 Vcc <strong>一定</strong>要接到 <strong>3.3V</strong>，若接到 5V 會造成樹莓派電路損毀！</p></blockquote><p>上拉電阻我這邊選擇了 1kΩ 1/4W，上面官方所提供的資料為電流不可以超過 5mA ，根據 $V=IR$ 可算出電阻應該要 660Ω 以上，如果過低會造成風扇電路過載。</p><p>PWM 訊號線因為大部分的微控制器或單晶片的 GPIO 都有做好穩定 PWM 方波的輸出電路了，所以這裡就不需要另外自製電路，直接接上 PWM 輸出腳即可（一般的 GPIO 貌似也能靠軟體設定輸出 PWM 訊號，不過硬體輸出較為穩定），<a href="https://pinout.xyz/" target="_blank" rel="noopener">腳位參考</a>。</p><p>順帶一提，由於風扇沒有附轉杜邦的線材，所以另外買了 Molex 2510 4PIN (2.54mm間距) 連接器，不過要另外將防呆卡槽消掉一部份，如果有現成的專用風扇線就不用（一般風扇為了相容 3P 連接器所以不會做滿）</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574610745/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_20191123_141251.jpg" alt></p><p>以下是接上 Pi 3 做硬體測試及軟體調教的照片：</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574610248/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_20191124_234259.jpg" alt></p><p>硬體安裝完成後，接著就用軟體來控制風扇吧！</p><h1 id="軟體控制"><a href="#軟體控制" class="headerlink" title="軟體控制"></a>軟體控制</h1><h3 id="PWM-GPIO-測試"><a href="#PWM-GPIO-測試" class="headerlink" title="PWM GPIO 測試"></a>PWM GPIO 測試</h3><p>這裡可以先選擇使用 <a href="http://wiringpi.com/" target="_blank" rel="noopener">Wiring Pi</a> 來進行測試接線是否正確及 GPIO 是否正常，如果不測試可以直接跳到 <a href="#PWM-訊號控制轉速">PWM 訊號控制轉速</a>。</p><p>記得之前的 Pi 版本都是有預裝的，不過目前新版 Pi 4B 還沒加入預設，我們可以透過手動的方式來升級：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">wget https://project-downloads.drogon.net/wiringpi-latest.deb</span><br><span class="line">sudo dpkg -i wiringpi-latest.deb</span><br></pre></td></tr></table></figure><p>檢查版本：</p><p><code>gpio -v</code></p><blockquote class="colorquote info"><p>撰文時最新版為 2.52</p></blockquote><p>查看 GPIO 狀態：</p><p><code>gpio readall</code></p><p>把 PIN1 設定為 PWM 模式（注意這邊的編號為 wiring-pi 的編號，可參考<a href="https://pinout.xyz/" target="_blank" rel="noopener">Pi GPIO Pinout</a>）</p><p><code>gpio mode 1 pwm</code></p><p>設定 PWM 訊號寬度（數值可為 0~1023）</p><p><code>gpio pwm 1 [數值]</code></p><p>檢查風扇是否成功用 PWM 控制，如果有隨著設定數值改變就沒問題了！</p><h3 id="PWM-訊號控制轉速"><a href="#PWM-訊號控制轉速" class="headerlink" title="PWM 訊號控制轉速"></a>PWM 訊號控制轉速</h3><p>我把控制程式放在 Github 上了，可以點擊參考：<a href="https://github.com/DriftKingTW/Raspberry-Pi-PWM-Fan-Contorl/blob/master/fan_control.py" target="_blank" rel="noopener">DriftKingTW/Raspberry-Pi-PWM-Fan-Control</a></p><p>建立資料夾存放要用到的程式：</p><p><code>mkdir -p Scripts</code></p><p><code>cd Scripts/</code></p><p>下載程式：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/DriftKingTW/Raspberry-Pi-PWM-Fan-Contorl/master/fan_control.py</span><br></pre></td></tr></table></figure><p>開啟試試能不能成功控制：</p><p><code>python fan_control.py</code></p><p>沒問題的話就可以把程式設定為開機自動啟動：</p><p>編輯 <code>rc.local</code></p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/rc.local</span><br></pre></td></tr></table></figure><p>在 <code>exit 0</code> 之上加入以下指令：</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python /home/pi/Scripts/fan_control.py &amp;</span><br></pre></td></tr></table></figure><blockquote class="colorquote info"><p>檔案路徑可能會不同，記得使用絕對路徑。最後的 “&amp;” 符號代表背景執行。</p></blockquote><p>如果你不想知道原理，可以直接轉跳閱讀：<a href="#讀取轉速訊號">讀取轉速訊號</a></p><p>PWM 控制原理簡單來說就是：輸出方波，利用工作週期（Duty Cycle 又稱佔空比）來控制風扇的轉速，假設方波訊號處於高電位所佔一個週期的時間是 50% 代表讓風扇處於半速狀態，以此類推 75% 即是風扇 75% 速度，更詳細可以參考維基：<a href="https://zh.wikipedia.org/zh-tw/%E8%84%88%E8%A1%9D%E5%AF%AC%E5%BA%A6%E8%AA%BF%E8%AE%8A" target="_blank" rel="noopener">脈衝寬度調變</a></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574611525/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_AABD9EE6FAB5-1.jpg" alt></p><p>接著來分析程式的部分，這邊使用 Python 來做控制：</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 載入需要的函式庫</span></span><br><span class="line"><span class="hljs-keyword">import</span> RPi.GPIO <span class="hljs-keyword">as</span> GPIO</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"><span class="hljs-keyword">import</span> signal</span><br><span class="line"><span class="hljs-keyword">import</span> sys</span><br><span class="line"><span class="hljs-keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 設定可照自身情況調整</span></span><br><span class="line">FAN_PIN = <span class="hljs-number">18</span>            <span class="hljs-comment"># PWM 控制腳位，設定成你想接的位置即可，注意是 BCM 編號</span></span><br><span class="line">WAIT_TIME = <span class="hljs-number">1</span>           <span class="hljs-comment"># 每次控制的更新頻率，單位為秒</span></span><br><span class="line">PWM_FREQ = <span class="hljs-number">25</span>           <span class="hljs-comment"># PWM 頻率，這邊根據 Noctua 規格使用 25kHz，其他風扇弄個 50 之類即可，若動作怪怪的可以在自行測試</span></span><br><span class="line"></span><br><span class="line">MIN_TEMP = <span class="hljs-number">40</span>           <span class="hljs-comment"># 最小啟動溫度</span></span><br><span class="line">MAX_TEMP = <span class="hljs-number">70</span>           <span class="hljs-comment"># 最高溫度</span></span><br><span class="line">FAN_LOW = <span class="hljs-number">40</span>            <span class="hljs-comment"># 風扇低轉速</span></span><br><span class="line">FAN_HIGH = <span class="hljs-number">100</span>          <span class="hljs-comment"># 風扇高轉速</span></span><br><span class="line">FAN_OFF = <span class="hljs-number">0</span>             <span class="hljs-comment"># 風扇關閉</span></span><br><span class="line">FAN_MAX = <span class="hljs-number">100</span>           <span class="hljs-comment"># 風扇全開</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 利用 vcgencmd 取得CPU溫度</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getCpuTemperature</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    res = os.popen(<span class="hljs-string">'vcgencmd measure_temp'</span>).readline()</span><br><span class="line">    temp =(res.replace(<span class="hljs-string">"temp="</span>,<span class="hljs-string">""</span>).replace(<span class="hljs-string">"'C\n"</span>,<span class="hljs-string">""</span>))</span><br><span class="line">    <span class="hljs-comment">#print("temp is &#123;0&#125;".format(temp)) # 把註解取消可觀察溫度</span></span><br><span class="line">    <span class="hljs-keyword">return</span> temp</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 設定風扇溫度</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">setFanSpeed</span><span class="hljs-params">(speed)</span>:</span></span><br><span class="line">    fan.start(speed)</span><br><span class="line">    <span class="hljs-keyword">return</span>()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 控制風扇動作</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">handleFanSpeed</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    temp = float(getCpuTemperature())</span><br><span class="line">    <span class="hljs-comment"># 如果溫度小於設定的最小啟動溫度即把風扇關閉</span></span><br><span class="line">    <span class="hljs-keyword">if</span> temp &lt; MIN_TEMP:</span><br><span class="line">        setFanSpeed(FAN_OFF)</span><br><span class="line">        <span class="hljs-comment">#print("Fan OFF") # 把註解取消可查看風扇訊息</span></span><br><span class="line">    <span class="hljs-comment"># 如果溫度超過最高溫度將風扇 100% 開啟    </span></span><br><span class="line">    <span class="hljs-keyword">elif</span> temp &gt; MAX_TEMP:</span><br><span class="line">        setFanSpeed(FAN_MAX)</span><br><span class="line">        <span class="hljs-comment">#print("Fan MAX") # 把註解取消可查看風扇訊息</span></span><br><span class="line">    <span class="hljs-comment"># 如果溫度介於最小及最大值之間，計算動態風扇速度</span></span><br><span class="line">    <span class="hljs-comment"># 每一階(step)為：(高轉速-低轉速)/(最高溫度-最小溫度)</span></span><br><span class="line">    <span class="hljs-comment"># 利用算出來的 step 算出線性的簡易 轉速/溫度 反應曲線</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        step = (FAN_HIGH - FAN_LOW)/(MAX_TEMP - MIN_TEMP)   </span><br><span class="line">        temp -= MIN_TEMP</span><br><span class="line">        setFanSpeed(FAN_LOW + ( round(temp) * step ))</span><br><span class="line">        <span class="hljs-comment">#print(FAN_LOW + ( round(temp) * step )) # 把註解取消可查看風扇訊息</span></span><br><span class="line">    <span class="hljs-keyword">return</span> ()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 主程式</span></span><br><span class="line"><span class="hljs-keyword">try</span>:</span><br><span class="line">    <span class="hljs-comment"># 設定 GPIO</span></span><br><span class="line">    GPIO.setwarnings(<span class="hljs-literal">False</span>)</span><br><span class="line">    GPIO.setmode(GPIO.BCM)</span><br><span class="line">    GPIO.setup(FAN_PIN, GPIO.OUT, initial=GPIO.LOW)</span><br><span class="line">    fan = GPIO.PWM(FAN_PIN,PWM_FREQ)</span><br><span class="line">    setFanSpeed(FAN_OFF)</span><br><span class="line">    <span class="hljs-comment"># 無限迴圈，按照設定的時間間隔不斷偵測溫度來設定轉速</span></span><br><span class="line">    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">        handleFanSpeed()</span><br><span class="line">        time.sleep(WAIT_TIME)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">except</span> KeyboardInterrupt: <span class="hljs-comment"># 如果使用者按下 ctrl+c 的例外處理</span></span><br><span class="line">    setFanSpeed(FAN_HIGH)</span><br><span class="line">    <span class="hljs-comment">#GPIO.cleanup() # 此註解可以清除本程式用的 GPIO 設定，如果要用上一行的指令本行保留註解狀態</span></span><br></pre></td></tr></table></figure><h3 id="讀取轉速訊號"><a href="#讀取轉速訊號" class="headerlink" title="讀取轉速訊號"></a>讀取轉速訊號</h3><p>程式同樣放在 Github 上：<a href="https://github.com/DriftKingTW/Raspberry-Pi-PWM-Fan-Control/blob/master/read_fan_speed.py" target="_blank" rel="noopener">DriftKingTW/Raspberry-Pi-PWM-Fan-Control</a></p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/DriftKingTW/Raspberry-Pi-PWM-Fan-Control/master/read_fan_speed.py</span><br></pre></td></tr></table></figure><p>開啟即可開始輸出風扇的轉速(RPM)，預設每秒偵測一次</p><p><code>python read_fan_speed.py</code></p><p>分析程式：</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment"># 載入需要的函式庫</span></span><br><span class="line"><span class="hljs-keyword">import</span> RPi.GPIO <span class="hljs-keyword">as</span> GPIO</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 腳位設定</span></span><br><span class="line">TACH = <span class="hljs-number">24</span>       <span class="hljs-comment"># 風扇轉速輸出腳位</span></span><br><span class="line">PULSE = <span class="hljs-number">2</span>       <span class="hljs-comment"># Noctua 規格為風扇轉一圈有兩次脈衝，大部分風扇也是兩次，少數四次</span></span><br><span class="line">WAIT_TIME = <span class="hljs-number">1</span>   <span class="hljs-comment"># 單位為秒，每次更新時間</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># GPIO 設定</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">GPIO.setwarnings(<span class="hljs-literal">False</span>)</span><br><span class="line">GPIO.setup(TACH, GPIO.IN, pull_up_down=GPIO.PUD_UP) <span class="hljs-comment"># Pull up to 3.3V</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 要用到的全域變數</span></span><br><span class="line">t = time.time()</span><br><span class="line">rpm = <span class="hljs-number">0</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 計算 RPM 的函數</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fell</span><span class="hljs-params">(n)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">global</span> t</span><br><span class="line">    <span class="hljs-keyword">global</span> rpm </span><br><span class="line"></span><br><span class="line">    dt = time.time() - t    <span class="hljs-comment"># 取得時間計算出週期</span></span><br><span class="line">    <span class="hljs-keyword">if</span> dt &lt; <span class="hljs-number">0.005</span>: <span class="hljs-keyword">return</span>   <span class="hljs-comment"># 無視過短的脈衝（雜訊）</span></span><br><span class="line"></span><br><span class="line">    freq = <span class="hljs-number">1</span> / dt   <span class="hljs-comment"># 取得頻率（週期倒數）</span></span><br><span class="line">    rpm = (freq / PULSE) * <span class="hljs-number">60</span>   <span class="hljs-comment"># 計算RPM：將頻率除以風扇轉一圈的脈衝數，在乘以60（每分鐘）</span></span><br><span class="line">    t = time.time() <span class="hljs-comment"># 更新時間</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 新增監聽器，偵測到波形降下來的時候呼叫 fell() 計算一次 RPM</span></span><br><span class="line">GPIO.add_event_detect(TACH, GPIO.FALLING, fell)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 主程式</span></span><br><span class="line"><span class="hljs-keyword">try</span>:</span><br><span class="line">    <span class="hljs-comment"># 無限迴圈不斷偵測</span></span><br><span class="line">    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">        <span class="hljs-keyword">print</span> <span class="hljs-string">"%.f RPM"</span> % rpm   <span class="hljs-comment"># 輸出轉速到螢幕上</span></span><br><span class="line">        rpm = <span class="hljs-number">0</span> <span class="hljs-comment"># 歸零</span></span><br><span class="line">        time.sleep(WAIT_TIME)   <span class="hljs-comment"># 每秒偵測一次</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">except</span> KeyboardInterrupt: <span class="hljs-comment"># 同上處理 ctrl+c 例外</span></span><br><span class="line">    GPIO.cleanup()  <span class="hljs-comment"># 清除本程式用的 GPIO 狀態</span></span><br></pre></td></tr></table></figure><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><p><a href="https://noctua.at/media/wysiwyg/Noctua_PWM_specifications_white_paper.pdf" target="_blank" rel="noopener">Noctua PWM specifications white paper</a></p><p><a href="https://noctua.at/en/nf-a4x10-5v-pwm/specification" target="_blank" rel="noopener">NF A4x10 5V PWM</a></p><p><a href="http://wiringpi.com/" target="_blank" rel="noopener">Wiring Pi</a></p><p><a href="http://wiringpi.com/wiringpi-updated-to-2-52-for-the-raspberry-pi-4b/" target="_blank" rel="noopener">wiringPi updated to 2.52 for the Raspberry Pi 4B</a></p><p><a href="https://www.youtube.com/watch?v=oJ32CMxliCQ" target="_blank" rel="noopener">#138 Variable Speed Cooling Fan for Raspberry Pi using PWM and PID controller</a></p><p><a href="https://gist.github.com/rxseger/2b27e661221b6f350b859d13f256cf29" target="_blank" rel="noopener">rxseger/tachfan.py</a></p><p><a href="https://sourceforge.net/p/raspberry-gpio-python/wiki/PWM/" target="_blank" rel="noopener">raspberry-gpio-python</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574826956/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/Fur_chan_w_Noctua_fan_2.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;相信不少人都會為熱情的 Pi 4 加上風扇散熱，不過小風扇噪音就成了問題，由於 Pi 也不是隨時都滿載需要風扇全速運轉，所以我們可以利用 &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E8%84%88%E8%A1%9D%E5%AF%AC%E5%BA%A6%E8%AA%BF%E8%AE%8A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PWM (Pulse Width Modulation)&lt;/a&gt; 來控制轉速。讓風扇在提高到一定溫度時才啟動，或是降低轉速來降低噪音。&lt;/p&gt;
    
    </summary>
    
    
      <category term="RaspberryPi/樹莓派" scheme="https://blog.driftking.tw/tags/RaspberryPi-%E6%A8%B9%E8%8E%93%E6%B4%BE/"/>
    
      <category term="DIY" scheme="https://blog.driftking.tw/tags/DIY/"/>
    
  </entry>
  
  <entry>
    <title>Using Raspberry Pi to Control a PWM Fan and Monitor its Speed (Software PWM Control)</title>
    <link href="https://blog.driftking.tw/en/2019/11/Using-Raspberry-Pi-to-Control-a-PWM-Fan-and-Monitor-its-Speed/"/>
    <id>https://blog.driftking.tw/en/2019/11/Using-Raspberry-Pi-to-Control-a-PWM-Fan-and-Monitor-its-Speed/</id>
    <published>2019-11-25T14:00:00.000Z</published>
    <updated>2021-03-29T14:24:31.347Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574826956/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/Fur_chan_w_Noctua_fan_2.jpg" alt></p><p>A lot of people uses fan to cool down their Raspberry Pi 4, but the fan’s noise is quiet problem (in a quiet room). In most case pi didn’t need that amount of cooling performance, so we can use <a href="https://en.wikipedia.org/wiki/Pulse-width_modulation" target="_blank" rel="noopener">PWM (Pulse Width Modulation)</a> to control fan speed and reduce the noise.<a id="more"></a></p><h1 id="Wiring"><a href="#Wiring" class="headerlink" title="Wiring"></a>Wiring</h1><p>I use <a href="https://noctua.at/en/nf-a4x10-5v-pwm" target="_blank" rel="noopener">Noctua NF-A4 5V PWM</a>, a 40mm, 5V PWM fan. Here’s the wiring diagram:</p><ul><li>Yellow: 5V</li><li>Black: GND</li><li>Green: RPM signal</li><li>Blue: PWM signal input</li></ul><blockquote class="colorquote info"><p>If your fan doesn’t support PWM control, then you can see <a href="https://www.youtube.com/watch?v=oJ32CMxliCQ" target="_blank" rel="noopener">#138 Variable Speed Cooling Fan for Raspberry Pi using PWM and PID controller</a> or <a href="https://www.instructables.com/id/PWM-Regulated-Fan-Based-on-CPU-Temperature-for-Ras/" target="_blank" rel="noopener">PWM Regulated Fan Based on CPU Temperature for Raspberry Pi</a> to use a BJT transistor to use PWM control.</p></blockquote><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574608109/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_93F334AD3BFC-1.jpg" alt></p><p>The fan’s RPM signal is an OC(Open-Collector) circuit design (in most fan), so you’ll need a pull-up resistor to measure output waveform according to <a href="https://noctua.at/media/wysiwyg/Noctua_PWM_specifications_white_paper.pdf" target="_blank" rel="noopener">Noctua PWM white paper</a>.</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574608621/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_6F5175335AA4-1.jpg" alt></p><blockquote class="colorquote danger"><p>Warning! The Pi has 3.3V GPIO, so your pull-up resistor must be connect to 3.3V ONLY! You will fry your Pi if Vcc is connected to 5V.</p></blockquote><p>The pull-up resistor that I use is 1kΩ 1/4W. The white paper says the maximum current is 5mA. According to Ohm’s Law: $V=IR$, the resistor should be 660Ω or larger to protect your fan.</p><p>Most micro-controller or SBC already have a decent circuit to generate PWM signal, you don’t need special circuit to generate it.</p><p>I use a Molex 2510 4PIN (2.54mm) connector to connect the fan. (Need to cut out some fool-proof board to fit.)</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574610745/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_20191123_141251.jpg" alt></p><p>Here’s a photo testing hardware and program on Pi 3B.`</p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574610248/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_20191124_234259.jpg" alt></p><h1 id="Program-Control"><a href="#Program-Control" class="headerlink" title="Program Control"></a>Program Control</h1><h3 id="PWM-GPIO-Test"><a href="#PWM-GPIO-Test" class="headerlink" title="PWM GPIO Test"></a>PWM GPIO Test</h3><p>I use <a href="http://wiringpi.com/" target="_blank" rel="noopener">Wiring Pi</a> to test PWM signal. If you don’t want to test it, jump to <a href="#Use-PWM-to-Control-Fan-Speed">Use PWM to Control Fan Speed</a>.</p><p>The Pi4 haven’t update to latest version of wiring-pi yet, need to update it manually.</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">wget https://project-downloads.drogon.net/wiringpi-latest.deb</span><br><span class="line">sudo dpkg -i wiringpi-latest.deb</span><br></pre></td></tr></table></figure><p>Version check：</p><p><code>gpio -v</code></p><blockquote class="colorquote info"><p>The latest version when I write this post is 2.52</p></blockquote><p>Read GPIO status：</p><p><code>gpio readall</code></p><p>Set pin 1 to PWM mode (using wiring-pi pin number: <a href="https://pinout.xyz/" target="_blank" rel="noopener">Pi GPIO Pinout</a>).</p><p><code>gpio mode 1 pwm</code></p><p>Set PWM signal (number from 0~1023)</p><p><code>gpio pwm 1 [number]</code></p><p>Check the fan is working as you expect.</p><h3 id="Use-PWM-to-Control-Fan-Speed"><a href="#Use-PWM-to-Control-Fan-Speed" class="headerlink" title="Use PWM to Control Fan Speed"></a>Use PWM to Control Fan Speed</h3><p>The control script is on: <a href="https://github.com/DriftKingTW/Raspberry-Pi-PWM-Fan-Control/blob/master/fan_control.py" target="_blank" rel="noopener">DriftKingTW/Raspberry-Pi-PWM-Fan-Control</a></p><p><code>mkdir -p Scripts</code></p><p><code>cd Scripts/</code></p><p>Download the python script:</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/DriftKingTW/Raspberry-Pi-PWM-Fan-Control/master/fan_control.py</span><br></pre></td></tr></table></figure><p><code>python fan_control.py</code></p><p>And make it auto start: </p><p>Edit <code>rc.local</code></p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/rc.local</span><br></pre></td></tr></table></figure><p>Add the following line after <code>exit 0</code> :</p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python /home/pi/Scripts/fan_control.py &amp;</span><br></pre></td></tr></table></figure><blockquote class="colorquote info"><p>The route might be different for you. Make sure you’re using absolute path. The ‘&amp;’ symbol means this script runs in background.</p></blockquote><p>If you don’t want to know the theory part, than go ahead to: <a href="#Reading-RPM-Signal">Reading RPM Signal</a></p><p>PWM uses square wave’s duty-cycle to reduce the average value of voltage, if the duty cycle is 50%, the fan will spin at 50% of it’s full speed; duty cycle 75%, fan 75%, and so on. More detail: <a href="https://en.wikipedia.org/wiki/Pulse-width_modulation" target="_blank" rel="noopener">Pulse-width modulation</a></p><p><img src="https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574611525/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/IMG_AABD9EE6FAB5-1.jpg" alt></p><p>And we can take a look at the control script:</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> RPi.GPIO <span class="hljs-keyword">as</span> GPIO</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"><span class="hljs-keyword">import</span> signal</span><br><span class="line"><span class="hljs-keyword">import</span> sys</span><br><span class="line"><span class="hljs-keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Configuration</span></span><br><span class="line">FAN_PIN = <span class="hljs-number">18</span>            <span class="hljs-comment"># BCM pin used to drive PWM fan</span></span><br><span class="line">WAIT_TIME = <span class="hljs-number">1</span>           <span class="hljs-comment"># [s] Time to wait between each refresh</span></span><br><span class="line">PWM_FREQ = <span class="hljs-number">25</span>           <span class="hljs-comment"># [kHz] 25kHz for Noctua PWM control</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Configurable temperature and fan speed</span></span><br><span class="line">MIN_TEMP = <span class="hljs-number">40</span></span><br><span class="line">MAX_TEMP = <span class="hljs-number">70</span></span><br><span class="line">FAN_LOW = <span class="hljs-number">40</span></span><br><span class="line">FAN_HIGH = <span class="hljs-number">100</span></span><br><span class="line">FAN_OFF = <span class="hljs-number">0</span></span><br><span class="line">FAN_MAX = <span class="hljs-number">100</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Get CPU's temperature</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getCpuTemperature</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    res = os.popen(<span class="hljs-string">'vcgencmd measure_temp'</span>).readline()</span><br><span class="line">    temp =(res.replace(<span class="hljs-string">"temp="</span>,<span class="hljs-string">""</span>).replace(<span class="hljs-string">"'C\n"</span>,<span class="hljs-string">""</span>))</span><br><span class="line">    <span class="hljs-comment">#print("temp is &#123;0&#125;".format(temp)) # Uncomment for testing</span></span><br><span class="line">    <span class="hljs-keyword">return</span> temp</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Set fan speed</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">setFanSpeed</span><span class="hljs-params">(speed)</span>:</span></span><br><span class="line">    fan.start(speed)</span><br><span class="line">    <span class="hljs-keyword">return</span>()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Handle fan speed</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">handleFanSpeed</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    temp = float(getCpuTemperature())</span><br><span class="line">    <span class="hljs-comment"># Turn off the fan if temperature is below MIN_TEMP</span></span><br><span class="line">    <span class="hljs-keyword">if</span> temp &lt; MIN_TEMP:</span><br><span class="line">        setFanSpeed(FAN_OFF)</span><br><span class="line">        <span class="hljs-comment">#print("Fan OFF") # Uncomment for testing</span></span><br><span class="line">    <span class="hljs-comment"># Set fan speed to MAXIMUM if the temperature is above MAX_TEMP</span></span><br><span class="line">    <span class="hljs-keyword">elif</span> temp &gt; MAX_TEMP:</span><br><span class="line">        setFanSpeed(FAN_MAX)</span><br><span class="line">        <span class="hljs-comment">#print("Fan MAX") # Uncomment for testing</span></span><br><span class="line">    <span class="hljs-comment"># Caculate dynamic fan speed</span></span><br><span class="line">    <span class="hljs-keyword">else</span>:</span><br><span class="line">        step = (FAN_HIGH - FAN_LOW)/(MAX_TEMP - MIN_TEMP)   </span><br><span class="line">        temp -= MIN_TEMP</span><br><span class="line">        setFanSpeed(FAN_LOW + ( round(temp) * step ))</span><br><span class="line">        <span class="hljs-comment">#print(FAN_LOW + ( round(temp) * step )) # Uncomment for testing</span></span><br><span class="line">    <span class="hljs-keyword">return</span> ()</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">try</span>:</span><br><span class="line">    <span class="hljs-comment"># Setup GPIO pin</span></span><br><span class="line">    GPIO.setwarnings(<span class="hljs-literal">False</span>)</span><br><span class="line">    GPIO.setmode(GPIO.BCM)</span><br><span class="line">    GPIO.setup(FAN_PIN, GPIO.OUT, initial=GPIO.LOW)</span><br><span class="line">    fan = GPIO.PWM(FAN_PIN,PWM_FREQ)</span><br><span class="line">    setFanSpeed(FAN_OFF)</span><br><span class="line">    <span class="hljs-comment"># Handle fan speed every WAIT_TIME sec</span></span><br><span class="line">    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">        handleFanSpeed()</span><br><span class="line">        time.sleep(WAIT_TIME)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">except</span> KeyboardInterrupt: <span class="hljs-comment"># trap a CTRL+C keyboard interrupt</span></span><br><span class="line">    setFanSpeed(FAN_HIGH)</span><br><span class="line">    <span class="hljs-comment">#GPIO.cleanup() # resets all GPIO ports used by this function</span></span><br></pre></td></tr></table></figure><h3 id="Reading-RPM-Signal"><a href="#Reading-RPM-Signal" class="headerlink" title="Reading RPM Signal"></a>Reading RPM Signal</h3><p>Github: <a href="https://github.com/DriftKingTW/Raspberry-Pi-PWM-Fan-Control/blob/master/read_fan_speed.py" target="_blank" rel="noopener">DriftKingTW/Raspberry-Pi-PWM-Fan-Control</a></p><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/DriftKingTW/Raspberry-Pi-PWM-Fan-Control/master/read_fan_speed.py</span><br></pre></td></tr></table></figure><p>Run script and you will get RPM value every second:</p><p><code>python read_fan_speed.py</code></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> RPi.GPIO <span class="hljs-keyword">as</span> GPIO</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Pin configuration</span></span><br><span class="line">TACH = <span class="hljs-number">24</span>       <span class="hljs-comment"># Fan's tachometer output pin</span></span><br><span class="line">PULSE = <span class="hljs-number">2</span>       <span class="hljs-comment"># Noctua fans puts out two pluses per revolution</span></span><br><span class="line">WAIT_TIME = <span class="hljs-number">1</span>   <span class="hljs-comment"># [s] Time to wait between each refresh</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Setup GPIO</span></span><br><span class="line">GPIO.setmode(GPIO.BCM)</span><br><span class="line">GPIO.setwarnings(<span class="hljs-literal">False</span>)</span><br><span class="line">GPIO.setup(TACH, GPIO.IN, pull_up_down=GPIO.PUD_UP) <span class="hljs-comment"># Pull up to 3.3V</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Setup variables</span></span><br><span class="line">t = time.time()</span><br><span class="line">rpm = <span class="hljs-number">0</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Caculate pulse frequency and RPM</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fell</span><span class="hljs-params">(n)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">global</span> t</span><br><span class="line">    <span class="hljs-keyword">global</span> rpm</span><br><span class="line"></span><br><span class="line">    dt = time.time() - t</span><br><span class="line">    <span class="hljs-keyword">if</span> dt &lt; <span class="hljs-number">0.005</span>: <span class="hljs-keyword">return</span> <span class="hljs-comment"># Reject spuriously short pulses</span></span><br><span class="line"></span><br><span class="line">    freq = <span class="hljs-number">1</span> / dt</span><br><span class="line">    rpm = (freq / PULSE) * <span class="hljs-number">60</span></span><br><span class="line">    t = time.time()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># Add event to detect</span></span><br><span class="line">GPIO.add_event_detect(TACH, GPIO.FALLING, fell)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">try</span>:</span><br><span class="line">    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">        <span class="hljs-keyword">print</span> <span class="hljs-string">"%.f RPM"</span> % rpm</span><br><span class="line">        rpm = <span class="hljs-number">0</span></span><br><span class="line">        time.sleep(<span class="hljs-number">1</span>)   <span class="hljs-comment"># Detect every second</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">except</span> KeyboardInterrupt: <span class="hljs-comment"># trap a CTRL+C keyboard interrupt</span></span><br><span class="line">    GPIO.cleanup() <span class="hljs-comment"># resets all GPIO ports used by this function</span></span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://noctua.at/media/wysiwyg/Noctua_PWM_specifications_white_paper.pdf" target="_blank" rel="noopener">Noctua PWM specifications white paper</a></p><p><a href="https://noctua.at/en/nf-a4x10-5v-pwm/specification" target="_blank" rel="noopener">NF A4x10 5V PWM</a></p><p><a href="http://wiringpi.com/" target="_blank" rel="noopener">Wiring Pi</a></p><p><a href="http://wiringpi.com/wiringpi-updated-to-2-52-for-the-raspberry-pi-4b/" target="_blank" rel="noopener">wiringPi updated to 2.52 for the Raspberry Pi 4B</a></p><p><a href="https://www.youtube.com/watch?v=oJ32CMxliCQ" target="_blank" rel="noopener">#138 Variable Speed Cooling Fan for Raspberry Pi using PWM and PID controller</a></p><p><a href="https://gist.github.com/rxseger/2b27e661221b6f350b859d13f256cf29" target="_blank" rel="noopener">rxseger/tachfan.py</a></p><p><a href="https://sourceforge.net/p/raspberry-gpio-python/wiki/PWM/" target="_blank" rel="noopener">raspberry-gpio-python</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/driftkingtw/image/upload/f_auto/v1574826956/blog/2019/11/Using%20Raspberry%20Pi%20to%20Control%20a%20PWM%20Fan%20and%20Monitor%20its%20Speed/Fur_chan_w_Noctua_fan_2.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;A lot of people uses fan to cool down their Raspberry Pi 4, but the fan’s noise is quiet problem (in a quiet room). In most case pi didn’t need that amount of cooling performance, so we can use &lt;a href=&quot;https://en.wikipedia.org/wiki/Pulse-width_modulation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PWM (Pulse Width Modulation)&lt;/a&gt; to control fan speed and reduce the noise.&lt;/p&gt;
    
    </summary>
    
    
      <category term="RaspberryPi/樹莓派" scheme="https://blog.driftking.tw/tags/RaspberryPi-%E6%A8%B9%E8%8E%93%E6%B4%BE/"/>
    
      <category term="DIY" scheme="https://blog.driftking.tw/tags/DIY/"/>
    
  </entry>
  
</feed>
